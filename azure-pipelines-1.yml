# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release_SelfContained'
  publishPath: '$(Build.ArtifactStagingDirectory)\publish'
  storageAccount: 'jm84storage'
  containerName: 'hazard'
  blobPath: 'self-contained'

steps:
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '8.0.x'
    includePreviewVersions: false

- task: NuGetToolInstaller@1

- task: DotNetCoreCLI@2
  inputs:
    command: 'restore'
    projects: '**/*.csproj'
    feedsToUse: 'select'
    arguments: '--runtime win-x64'
- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    msbuildArgs: '/t:restore;publish 
      /p:PublishProfile=ClickOnce_SelfContained 
      /p:Configuration=Release_SelfContained 
      /p:PublishDir="$(publishPath)" 
      /p:RuntimeIdentifier=win-x64 
      /p:PublishProtocol=ClickOnce 
      /p:GenerateManifests=true'

- task: AzureCLI@2
  displayName: 'Azure CLI'
  inputs:
    azureSubscription: 'JoshMcKnight Azure TopLevel'  # Replace with your connection name
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      echo "##vso[task.setvariable variable=ARM_CLIENT_ID;issecret=true]$servicePrincipalId" 
      echo "##vso[task.setvariable variable=ARM_ID_TOKEN;issecret=true]$idToken"
      echo "##vso[task.setvariable variable=ARM_TENANT_ID;issecret=true]$tenantId"
    addSpnToEnvironment: true

- bash: |
    az login --service-principal -u $(ARM_CLIENT_ID) --tenant $(ARM_TENANT_ID) --allow-no-subscriptions --federated-token $(ARM_ID_TOKEN)
  displayName: 'Azure Login'

- task: TrustedSigning@0
  displayName: 'Sign with Trusted Signing'
  inputs:
    Endpoint: 'https://eus.codesigning.azure.net/'
    TrustedSigningAccountName: 'joshmcknightsigning'
    CertificateProfileName: 'JoshuaMcKnight'
    FilesFolder: '$(publishPath)'
    FilesFolderFilter: 'application,exe'
    ExcludeEnvironmentCredential: true
    ExcludeWorkloadIdentityCredential: true
    ExcludeManagedIdentityCredential: true
    ExcludeSharedTokenCacheCredential: true
    ExcludeVisualStudioCredential: true
    ExcludeVisualStudioCodeCredential: true
    ExcludeAzureCliCredential: false
    ExcludeAzurePowershellCredential: true
    ExcludeAzureDeveloperCliCredential: true
    ExcludeInteractiveBrowserCredential: true
- bash: |
    az login --service-principal -u $(ARM_CLIENT_ID) --tenant $(ARM_TENANT_ID) --allow-no-subscriptions --federated-token $(ARM_ID_TOKEN)
    ACCESS_TOKEN=$(az account get-access-token --resource https://storage.azure.com/ --query accessToken --output tsv)
    azcopy login --oauth-token $ACCESS_TOKEN
    azcopy cp '$(publishPath)' 'https://$(storageAccount).blob.core.windows.net/$(containerName)/$(blobPath)' --recursive
  displayName: 'Azure Copy to Blob Storage'