### YamlMime:ManagedReference
items:
- uid: Shared.Services.Registry.RegistryRelation
  commentId: T:Shared.Services.Registry.RegistryRelation
  id: RegistryRelation
  parent: Shared.Services.Registry
  children:
  - Shared.Services.Registry.RegistryRelation.CollectionName
  - Shared.Services.Registry.RegistryRelation.CollectionType
  - Shared.Services.Registry.RegistryRelation.ConvertedDataType
  - Shared.Services.Registry.RegistryRelation.DataConverter
  - Shared.Services.Registry.RegistryRelation.DataFileName
  - Shared.Services.Registry.RegistryRelation.ElementType
  - Shared.Services.Registry.RegistryRelation.Name
  langs:
  - csharp
  - vb
  name: RegistryRelation
  nameWithType: RegistryRelation
  fullName: Shared.Services.Registry.RegistryRelation
  type: Enum
  source:
    remote:
      path: Shared/Services/Registry/RegistryRelationEnum.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: RegistryRelation
    path: ../Shared/Services/Registry/RegistryRelationEnum.cs
    startLine: 8
  assemblies:
  - Model
  namespace: Shared.Services.Registry
  summary: Qualifies the relation between an <xref href="System.Object" data-throw-if-not-resolved="false"></xref> and a keyed <xref href="System.Type" data-throw-if-not-resolved="false"></xref> in a <xref href="Shared.Services.Registry.ITypeRegister%601" data-throw-if-not-resolved="false"></xref> registry.
  example: []
  syntax:
    content: public enum RegistryRelation
    content.vb: Public Enum RegistryRelation
- uid: Shared.Services.Registry.RegistryRelation.Name
  commentId: F:Shared.Services.Registry.RegistryRelation.Name
  id: Name
  parent: Shared.Services.Registry.RegistryRelation
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: RegistryRelation.Name
  fullName: Shared.Services.Registry.RegistryRelation.Name
  type: Field
  source:
    remote:
      path: Shared/Services/Registry/RegistryRelationEnum.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: Name
    path: ../Shared/Services/Registry/RegistryRelationEnum.cs
    startLine: 13
  assemblies:
  - Model
  namespace: Shared.Services.Registry
  summary: Marks an <xref href="System.Object" data-throw-if-not-resolved="false"></xref> as a name for a keyed <xref href="System.Type" data-throw-if-not-resolved="false"></xref> in a <xref href="Shared.Services.Registry.TypeRegister" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: Name = 0
    return:
      type: Shared.Services.Registry.RegistryRelation
- uid: Shared.Services.Registry.RegistryRelation.CollectionName
  commentId: F:Shared.Services.Registry.RegistryRelation.CollectionName
  id: CollectionName
  parent: Shared.Services.Registry.RegistryRelation
  langs:
  - csharp
  - vb
  name: CollectionName
  nameWithType: RegistryRelation.CollectionName
  fullName: Shared.Services.Registry.RegistryRelation.CollectionName
  type: Field
  source:
    remote:
      path: Shared/Services/Registry/RegistryRelationEnum.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: CollectionName
    path: ../Shared/Services/Registry/RegistryRelationEnum.cs
    startLine: 17
  assemblies:
  - Model
  namespace: Shared.Services.Registry
  summary: Marks an <xref href="System.Object" data-throw-if-not-resolved="false"></xref> as the name of a <xref href="Shared.Services.Registry.RegistryRelation.CollectionType" data-throw-if-not-resolved="false"></xref> associated with a keyed <xref href="System.Type" data-throw-if-not-resolved="false"></xref> in a <xref href="Shared.Services.Registry.TypeRegister" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: CollectionName = 1
    return:
      type: Shared.Services.Registry.RegistryRelation
- uid: Shared.Services.Registry.RegistryRelation.CollectionType
  commentId: F:Shared.Services.Registry.RegistryRelation.CollectionType
  id: CollectionType
  parent: Shared.Services.Registry.RegistryRelation
  langs:
  - csharp
  - vb
  name: CollectionType
  nameWithType: RegistryRelation.CollectionType
  fullName: Shared.Services.Registry.RegistryRelation.CollectionType
  type: Field
  source:
    remote:
      path: Shared/Services/Registry/RegistryRelationEnum.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: CollectionType
    path: ../Shared/Services/Registry/RegistryRelationEnum.cs
    startLine: 21
  assemblies:
  - Model
  namespace: Shared.Services.Registry
  summary: Marks an <xref href="System.Object" data-throw-if-not-resolved="false"></xref> as a collection <xref href="System.Type" data-throw-if-not-resolved="false"></xref> for the keyed <xref href="System.Type" data-throw-if-not-resolved="false"></xref> in a <xref href="Shared.Services.Registry.TypeRegister" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: CollectionType = 2
    return:
      type: Shared.Services.Registry.RegistryRelation
- uid: Shared.Services.Registry.RegistryRelation.ElementType
  commentId: F:Shared.Services.Registry.RegistryRelation.ElementType
  id: ElementType
  parent: Shared.Services.Registry.RegistryRelation
  langs:
  - csharp
  - vb
  name: ElementType
  nameWithType: RegistryRelation.ElementType
  fullName: Shared.Services.Registry.RegistryRelation.ElementType
  type: Field
  source:
    remote:
      path: Shared/Services/Registry/RegistryRelationEnum.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: ElementType
    path: ../Shared/Services/Registry/RegistryRelationEnum.cs
    startLine: 26
  assemblies:
  - Model
  namespace: Shared.Services.Registry
  summary: >-
    Marks an <xref href="System.Object" data-throw-if-not-resolved="false"></xref> as an element <xref href="System.Type" data-throw-if-not-resolved="false"></xref> contained within a collection (<xref href="Shared.Services.Registry.RegistryRelation.CollectionName" data-throw-if-not-resolved="false"></xref> and <br />

    <xref href="Shared.Services.Registry.RegistryRelation.CollectionType" data-throw-if-not-resolved="false"></xref>) which is registered in a <xref href="Shared.Services.Registry.TypeRegister" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: ElementType = 3
    return:
      type: Shared.Services.Registry.RegistryRelation
- uid: Shared.Services.Registry.RegistryRelation.DataFileName
  commentId: F:Shared.Services.Registry.RegistryRelation.DataFileName
  id: DataFileName
  parent: Shared.Services.Registry.RegistryRelation
  langs:
  - csharp
  - vb
  name: DataFileName
  nameWithType: RegistryRelation.DataFileName
  fullName: Shared.Services.Registry.RegistryRelation.DataFileName
  type: Field
  source:
    remote:
      path: Shared/Services/Registry/RegistryRelationEnum.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: DataFileName
    path: ../Shared/Services/Registry/RegistryRelationEnum.cs
    startLine: 30
  assemblies:
  - Model
  namespace: Shared.Services.Registry
  summary: Marks an <xref href="System.Object" data-throw-if-not-resolved="false"></xref> as the name of a data file for a keyed <xref href="System.Type" data-throw-if-not-resolved="false"></xref> in a <xref href="Shared.Services.Registry.TypeRegister" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: DataFileName = 4
    return:
      type: Shared.Services.Registry.RegistryRelation
- uid: Shared.Services.Registry.RegistryRelation.DataConverter
  commentId: F:Shared.Services.Registry.RegistryRelation.DataConverter
  id: DataConverter
  parent: Shared.Services.Registry.RegistryRelation
  langs:
  - csharp
  - vb
  name: DataConverter
  nameWithType: RegistryRelation.DataConverter
  fullName: Shared.Services.Registry.RegistryRelation.DataConverter
  type: Field
  source:
    remote:
      path: Shared/Services/Registry/RegistryRelationEnum.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: DataConverter
    path: ../Shared/Services/Registry/RegistryRelationEnum.cs
    startLine: 34
  assemblies:
  - Model
  namespace: Shared.Services.Registry
  summary: Marks an <xref href="System.Object" data-throw-if-not-resolved="false"></xref> as a data converter for a keyed <xref href="System.Type" data-throw-if-not-resolved="false"></xref> in a <xref href="Shared.Services.Registry.TypeRegister" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: DataConverter = 5
    return:
      type: Shared.Services.Registry.RegistryRelation
- uid: Shared.Services.Registry.RegistryRelation.ConvertedDataType
  commentId: F:Shared.Services.Registry.RegistryRelation.ConvertedDataType
  id: ConvertedDataType
  parent: Shared.Services.Registry.RegistryRelation
  langs:
  - csharp
  - vb
  name: ConvertedDataType
  nameWithType: RegistryRelation.ConvertedDataType
  fullName: Shared.Services.Registry.RegistryRelation.ConvertedDataType
  type: Field
  source:
    remote:
      path: Shared/Services/Registry/RegistryRelationEnum.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: ConvertedDataType
    path: ../Shared/Services/Registry/RegistryRelationEnum.cs
    startLine: 38
  assemblies:
  - Model
  namespace: Shared.Services.Registry
  summary: Marks an <xref href="System.Object" data-throw-if-not-resolved="false"></xref> as the target conversion <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of a data converter for a keyed <xref href="System.Type" data-throw-if-not-resolved="false"></xref> in a <xref href="Shared.Services.Registry.TypeRegister" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: ConvertedDataType = 6
    return:
      type: Shared.Services.Registry.RegistryRelation
references:
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Shared.Services.Registry.ITypeRegister`1
  commentId: T:Shared.Services.Registry.ITypeRegister`1
  href: Shared.Services.Registry.ITypeRegister-1.html
  name: ITypeRegister<T>
  nameWithType: ITypeRegister<T>
  fullName: Shared.Services.Registry.ITypeRegister<T>
  nameWithType.vb: ITypeRegister(Of T)
  fullName.vb: Shared.Services.Registry.ITypeRegister(Of T)
  name.vb: ITypeRegister(Of T)
  spec.csharp:
  - uid: Shared.Services.Registry.ITypeRegister`1
    name: ITypeRegister
    href: Shared.Services.Registry.ITypeRegister-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Shared.Services.Registry.ITypeRegister`1
    name: ITypeRegister
    href: Shared.Services.Registry.ITypeRegister-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Shared.Services.Registry.ITypeRelations
  commentId: T:Shared.Services.Registry.ITypeRelations
  parent: Shared.Services.Registry
  href: Shared.Services.Registry.ITypeRelations.html
  name: ITypeRelations
  nameWithType: ITypeRelations
  fullName: Shared.Services.Registry.ITypeRelations
- uid: Shared.Services.Registry.RegistryRelation
  commentId: T:Shared.Services.Registry.RegistryRelation
  parent: Shared.Services.Registry
  href: Shared.Services.Registry.RegistryRelation.html
  name: RegistryRelation
  nameWithType: RegistryRelation
  fullName: Shared.Services.Registry.RegistryRelation
- uid: Shared.Services.Registry
  commentId: N:Shared.Services.Registry
  href: Shared.html
  name: Shared.Services.Registry
  nameWithType: Shared.Services.Registry
  fullName: Shared.Services.Registry
  spec.csharp:
  - uid: Shared
    name: Shared
    href: Shared.html
  - name: .
  - uid: Shared.Services
    name: Services
    href: Shared.Services.html
  - name: .
  - uid: Shared.Services.Registry
    name: Registry
    href: Shared.Services.Registry.html
  spec.vb:
  - uid: Shared
    name: Shared
    href: Shared.html
  - name: .
  - uid: Shared.Services
    name: Services
    href: Shared.Services.html
  - name: .
  - uid: Shared.Services.Registry
    name: Registry
    href: Shared.Services.Registry.html
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Shared.Services.Registry.TypeRegister
  commentId: T:Shared.Services.Registry.TypeRegister
  href: Shared.Services.Registry.TypeRegister.html
  name: TypeRegister
  nameWithType: TypeRegister
  fullName: Shared.Services.Registry.TypeRegister
- uid: Shared.Services.Registry.RegistryRelation.CollectionType
  commentId: F:Shared.Services.Registry.RegistryRelation.CollectionType
  href: Shared.Services.Registry.RegistryRelation.html#Shared_Services_Registry_RegistryRelation_CollectionType
  name: CollectionType
  nameWithType: RegistryRelation.CollectionType
  fullName: Shared.Services.Registry.RegistryRelation.CollectionType
- uid: Shared.Services.Registry.RegistryRelation.CollectionName
  commentId: F:Shared.Services.Registry.RegistryRelation.CollectionName
  href: Shared.Services.Registry.RegistryRelation.html#Shared_Services_Registry_RegistryRelation_CollectionName
  name: CollectionName
  nameWithType: RegistryRelation.CollectionName
  fullName: Shared.Services.Registry.RegistryRelation.CollectionName
