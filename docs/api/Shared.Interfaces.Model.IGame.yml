### YamlMime:ManagedReference
items:
- uid: Shared.Interfaces.Model.IGame
  commentId: T:Shared.Interfaces.Model.IGame
  id: IGame
  parent: Shared.Interfaces.Model
  children:
  - Shared.Interfaces.Model.IGame.AssetFetcher
  - Shared.Interfaces.Model.IGame.Board
  - Shared.Interfaces.Model.IGame.Cards
  - Shared.Interfaces.Model.IGame.DefaultCardMode
  - Shared.Interfaces.Model.IGame.ID
  - Shared.Interfaces.Model.IGame.PlayerLost
  - Shared.Interfaces.Model.IGame.PlayerWon
  - Shared.Interfaces.Model.IGame.Players
  - Shared.Interfaces.Model.IGame.Save(System.Boolean,System.String)
  - Shared.Interfaces.Model.IGame.State
  - Shared.Interfaces.Model.IGame.UpdatePlayerNames(System.String[])
  - Shared.Interfaces.Model.IGame.Values
  langs:
  - csharp
  - vb
  name: IGame
  nameWithType: IGame
  fullName: Shared.Interfaces.Model.IGame
  type: Interface
  source:
    remote:
      path: Shared/Interfaces/Model/IGame.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: IGame
    path: ../Shared/Interfaces/Model/IGame.cs
    startLine: 8
  assemblies:
  - Model
  namespace: Shared.Interfaces.Model
  summary: Encapsulates the current game for injection into <xref href="Shared.Interfaces.ViewModel.IMainVM" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: 'public interface IGame : IBinarySerializable'
    content.vb: Public Interface IGame Inherits IBinarySerializable
  inheritedMembers:
  - Shared.Interfaces.Model.IBinarySerializable.LoadFromBinary(System.IO.BinaryReader)
  - Shared.Interfaces.Model.IBinarySerializable.GetBinarySerials
- uid: Shared.Interfaces.Model.IGame.PlayerLost
  commentId: E:Shared.Interfaces.Model.IGame.PlayerLost
  id: PlayerLost
  parent: Shared.Interfaces.Model.IGame
  langs:
  - csharp
  - vb
  name: PlayerLost
  nameWithType: IGame.PlayerLost
  fullName: Shared.Interfaces.Model.IGame.PlayerLost
  type: Event
  source:
    remote:
      path: Shared/Interfaces/Model/IGame.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: PlayerLost
    path: ../Shared/Interfaces/Model/IGame.cs
    startLine: 13
  assemblies:
  - Model
  namespace: Shared.Interfaces.Model
  summary: Fires when a player loses, carrying their <xref href="Shared.Interfaces.Model.IPlayer.Number" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: event EventHandler<int>? PlayerLost
    return:
      type: System.EventHandler{System.Int32}
    content.vb: Event PlayerLost As EventHandler(Of Integer)
- uid: Shared.Interfaces.Model.IGame.PlayerWon
  commentId: E:Shared.Interfaces.Model.IGame.PlayerWon
  id: PlayerWon
  parent: Shared.Interfaces.Model.IGame
  langs:
  - csharp
  - vb
  name: PlayerWon
  nameWithType: IGame.PlayerWon
  fullName: Shared.Interfaces.Model.IGame.PlayerWon
  type: Event
  source:
    remote:
      path: Shared/Interfaces/Model/IGame.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: PlayerWon
    path: ../Shared/Interfaces/Model/IGame.cs
    startLine: 17
  assemblies:
  - Model
  namespace: Shared.Interfaces.Model
  summary: Fires when a player wins, carrying their <xref href="Shared.Interfaces.Model.IPlayer.Number" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: event EventHandler<int>? PlayerWon
    return:
      type: System.EventHandler{System.Int32}
    content.vb: Event PlayerWon As EventHandler(Of Integer)
- uid: Shared.Interfaces.Model.IGame.AssetFetcher
  commentId: P:Shared.Interfaces.Model.IGame.AssetFetcher
  id: AssetFetcher
  parent: Shared.Interfaces.Model.IGame
  langs:
  - csharp
  - vb
  name: AssetFetcher
  nameWithType: IGame.AssetFetcher
  fullName: Shared.Interfaces.Model.IGame.AssetFetcher
  type: Property
  source:
    remote:
      path: Shared/Interfaces/Model/IGame.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: AssetFetcher
    path: ../Shared/Interfaces/Model/IGame.cs
    startLine: 23
  assemblies:
  - Model
  namespace: Shared.Interfaces.Model
  summary: Gets the facade of the DAL.
  example: []
  syntax:
    content: IAssetFetcher AssetFetcher { get; }
    parameters: []
    return:
      type: Shared.Interfaces.Model.IAssetFetcher
    content.vb: ReadOnly Property AssetFetcher As IAssetFetcher
  overload: Shared.Interfaces.Model.IGame.AssetFetcher*
- uid: Shared.Interfaces.Model.IGame.ID
  commentId: P:Shared.Interfaces.Model.IGame.ID
  id: ID
  parent: Shared.Interfaces.Model.IGame
  langs:
  - csharp
  - vb
  name: ID
  nameWithType: IGame.ID
  fullName: Shared.Interfaces.Model.IGame.ID
  type: Property
  source:
    remote:
      path: Shared/Interfaces/Model/IGame.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: ID
    path: ../Shared/Interfaces/Model/IGame.cs
    startLine: 27
  assemblies:
  - Model
  namespace: Shared.Interfaces.Model
  summary: Gets the unique ID of the game.
  example: []
  syntax:
    content: Guid ID { get; }
    parameters: []
    return:
      type: System.Guid
    content.vb: ReadOnly Property ID As Guid
  overload: Shared.Interfaces.Model.IGame.ID*
- uid: Shared.Interfaces.Model.IGame.DefaultCardMode
  commentId: P:Shared.Interfaces.Model.IGame.DefaultCardMode
  id: DefaultCardMode
  parent: Shared.Interfaces.Model.IGame
  langs:
  - csharp
  - vb
  name: DefaultCardMode
  nameWithType: IGame.DefaultCardMode
  fullName: Shared.Interfaces.Model.IGame.DefaultCardMode
  type: Property
  source:
    remote:
      path: Shared/Interfaces/Model/IGame.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: DefaultCardMode
    path: ../Shared/Interfaces/Model/IGame.cs
    startLine: 34
  assemblies:
  - Model
  namespace: Shared.Interfaces.Model
  summary: Gets a flag indicating whether the game is set to default card mode.
  example: []
  syntax:
    content: bool DefaultCardMode { get; }
    parameters: []
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the <xref href="Shared.Interfaces.Model.IGame" data-throw-if-not-resolved="false"></xref> has been set to allow only the default cards. Otherwise, if others are added (e.g. Mission Cards), <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: ReadOnly Property DefaultCardMode As Boolean
  overload: Shared.Interfaces.Model.IGame.DefaultCardMode*
- uid: Shared.Interfaces.Model.IGame.Values
  commentId: P:Shared.Interfaces.Model.IGame.Values
  id: Values
  parent: Shared.Interfaces.Model.IGame
  langs:
  - csharp
  - vb
  name: Values
  nameWithType: IGame.Values
  fullName: Shared.Interfaces.Model.IGame.Values
  type: Property
  source:
    remote:
      path: Shared/Interfaces/Model/IGame.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: Values
    path: ../Shared/Interfaces/Model/IGame.cs
    startLine: 38
  assemblies:
  - Model
  namespace: Shared.Interfaces.Model
  summary: Gets a data object containing game-specific rules values, like continent bonuses or equations for bonus armies.
  example: []
  syntax:
    content: IRuleValues Values { get; }
    parameters: []
    return:
      type: Shared.Interfaces.Model.IRuleValues
    content.vb: ReadOnly Property Values As IRuleValues
  overload: Shared.Interfaces.Model.IGame.Values*
- uid: Shared.Interfaces.Model.IGame.Board
  commentId: P:Shared.Interfaces.Model.IGame.Board
  id: Board
  parent: Shared.Interfaces.Model.IGame
  langs:
  - csharp
  - vb
  name: Board
  nameWithType: IGame.Board
  fullName: Shared.Interfaces.Model.IGame.Board
  type: Property
  source:
    remote:
      path: Shared/Interfaces/Model/IGame.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: Board
    path: ../Shared/Interfaces/Model/IGame.cs
    startLine: 42
  assemblies:
  - Model
  namespace: Shared.Interfaces.Model
  summary: Gets an instance describing the Game board; stores both data and relations between Board objects.
  example: []
  syntax:
    content: IBoard Board { get; }
    parameters: []
    return:
      type: Shared.Interfaces.Model.IBoard
    content.vb: ReadOnly Property Board As IBoard
  overload: Shared.Interfaces.Model.IGame.Board*
- uid: Shared.Interfaces.Model.IGame.State
  commentId: P:Shared.Interfaces.Model.IGame.State
  id: State
  parent: Shared.Interfaces.Model.IGame
  langs:
  - csharp
  - vb
  name: State
  nameWithType: IGame.State
  fullName: Shared.Interfaces.Model.IGame.State
  type: Property
  source:
    remote:
      path: Shared/Interfaces/Model/IGame.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: State
    path: ../Shared/Interfaces/Model/IGame.cs
    startLine: 46
  assemblies:
  - Model
  namespace: Shared.Interfaces.Model
  summary: Gets the game's state machine, which tracks player count and status, turns, etc.
  example: []
  syntax:
    content: StateMachine State { get; }
    parameters: []
    return:
      type: Model.Core.StateMachine
    content.vb: ReadOnly Property State As StateMachine
  overload: Shared.Interfaces.Model.IGame.State*
- uid: Shared.Interfaces.Model.IGame.Cards
  commentId: P:Shared.Interfaces.Model.IGame.Cards
  id: Cards
  parent: Shared.Interfaces.Model.IGame
  langs:
  - csharp
  - vb
  name: Cards
  nameWithType: IGame.Cards
  fullName: Shared.Interfaces.Model.IGame.Cards
  type: Property
  source:
    remote:
      path: Shared/Interfaces/Model/IGame.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: Cards
    path: ../Shared/Interfaces/Model/IGame.cs
    startLine: 50
  assemblies:
  - Model
  namespace: Shared.Interfaces.Model
  summary: Gets the "card base", containing all <xref href="Shared.Interfaces.Model.ICard" data-throw-if-not-resolved="false"></xref>s, <xref href="Shared.Interfaces.Model.ICardSet" data-throw-if-not-resolved="false"></xref>s, and <xref href="Model.Entities.Deck" data-throw-if-not-resolved="false"></xref>s.
  example: []
  syntax:
    content: CardBase Cards { get; }
    parameters: []
    return:
      type: Model.Entities.CardBase
    content.vb: ReadOnly Property Cards As CardBase
  overload: Shared.Interfaces.Model.IGame.Cards*
- uid: Shared.Interfaces.Model.IGame.Players
  commentId: P:Shared.Interfaces.Model.IGame.Players
  id: Players
  parent: Shared.Interfaces.Model.IGame
  langs:
  - csharp
  - vb
  name: Players
  nameWithType: IGame.Players
  fullName: Shared.Interfaces.Model.IGame.Players
  type: Property
  source:
    remote:
      path: Shared/Interfaces/Model/IGame.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: Players
    path: ../Shared/Interfaces/Model/IGame.cs
    startLine: 57
  assemblies:
  - Model
  namespace: Shared.Interfaces.Model
  summary: Gets the list of players in the game.
  example: []
  syntax:
    content: List<IPlayer> Players { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Shared.Interfaces.Model.IPlayer}
      description: After initialization and/or loading, should have a count of 2-6.
    content.vb: ReadOnly Property Players As List(Of IPlayer)
  overload: Shared.Interfaces.Model.IGame.Players*
- uid: Shared.Interfaces.Model.IGame.UpdatePlayerNames(System.String[])
  commentId: M:Shared.Interfaces.Model.IGame.UpdatePlayerNames(System.String[])
  id: UpdatePlayerNames(System.String[])
  parent: Shared.Interfaces.Model.IGame
  langs:
  - csharp
  - vb
  name: UpdatePlayerNames(string[])
  nameWithType: IGame.UpdatePlayerNames(string[])
  fullName: Shared.Interfaces.Model.IGame.UpdatePlayerNames(string[])
  type: Method
  source:
    remote:
      path: Shared/Interfaces/Model/IGame.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: UpdatePlayerNames
    path: ../Shared/Interfaces/Model/IGame.cs
    startLine: 67
  assemblies:
  - Model
  namespace: Shared.Interfaces.Model
  summary: Updates player names.
  remarks: Useful after loading a game from a file.
  example: []
  syntax:
    content: void UpdatePlayerNames(string[] names)
    parameters:
    - id: names
      type: System.String[]
      description: Player names in ascending player number order.
    content.vb: Sub UpdatePlayerNames(names As String())
  overload: Shared.Interfaces.Model.IGame.UpdatePlayerNames*
  nameWithType.vb: IGame.UpdatePlayerNames(String())
  fullName.vb: Shared.Interfaces.Model.IGame.UpdatePlayerNames(String())
  name.vb: UpdatePlayerNames(String())
- uid: Shared.Interfaces.Model.IGame.Save(System.Boolean,System.String)
  commentId: M:Shared.Interfaces.Model.IGame.Save(System.Boolean,System.String)
  id: Save(System.Boolean,System.String)
  parent: Shared.Interfaces.Model.IGame
  langs:
  - csharp
  - vb
  name: Save(bool, string)
  nameWithType: IGame.Save(bool, string)
  fullName: Shared.Interfaces.Model.IGame.Save(bool, string)
  type: Method
  source:
    remote:
      path: Shared/Interfaces/Model/IGame.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: Save
    path: ../Shared/Interfaces/Model/IGame.cs
    startLine: 73
  assemblies:
  - Model
  namespace: Shared.Interfaces.Model
  summary: Save to a file.
  example: []
  syntax:
    content: Task Save(bool isNewFile, string fileName)
    parameters:
    - id: isNewFile
      type: System.Boolean
      description: Indicates whether the save file is new.
    - id: fileName
      type: System.String
      description: The name of the save file.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function Save(isNewFile As Boolean, fileName As String) As Task
  overload: Shared.Interfaces.Model.IGame.Save*
  nameWithType.vb: IGame.Save(Boolean, String)
  fullName.vb: Shared.Interfaces.Model.IGame.Save(Boolean, String)
  name.vb: Save(Boolean, String)
references:
- uid: Shared.Interfaces.ViewModel.IMainVM
  commentId: T:Shared.Interfaces.ViewModel.IMainVM
  href: Shared.Interfaces.ViewModel.IMainVM.html
  name: IMainVM
  nameWithType: IMainVM
  fullName: Shared.Interfaces.ViewModel.IMainVM
- uid: Shared.Interfaces.Model
  commentId: N:Shared.Interfaces.Model
  href: Shared.html
  name: Shared.Interfaces.Model
  nameWithType: Shared.Interfaces.Model
  fullName: Shared.Interfaces.Model
  spec.csharp:
  - uid: Shared
    name: Shared
    href: Shared.html
  - name: .
  - uid: Shared.Interfaces
    name: Interfaces
    href: Shared.Interfaces.html
  - name: .
  - uid: Shared.Interfaces.Model
    name: Model
    href: Shared.Interfaces.Model.html
  spec.vb:
  - uid: Shared
    name: Shared
    href: Shared.html
  - name: .
  - uid: Shared.Interfaces
    name: Interfaces
    href: Shared.Interfaces.html
  - name: .
  - uid: Shared.Interfaces.Model
    name: Model
    href: Shared.Interfaces.Model.html
- uid: Shared.Interfaces.Model.IBinarySerializable.LoadFromBinary(System.IO.BinaryReader)
  commentId: M:Shared.Interfaces.Model.IBinarySerializable.LoadFromBinary(System.IO.BinaryReader)
  parent: Shared.Interfaces.Model.IBinarySerializable
  isExternal: true
  href: Shared.Interfaces.Model.IBinarySerializable.html#Shared_Interfaces_Model_IBinarySerializable_LoadFromBinary_System_IO_BinaryReader_
  name: LoadFromBinary(BinaryReader)
  nameWithType: IBinarySerializable.LoadFromBinary(BinaryReader)
  fullName: Shared.Interfaces.Model.IBinarySerializable.LoadFromBinary(System.IO.BinaryReader)
  spec.csharp:
  - uid: Shared.Interfaces.Model.IBinarySerializable.LoadFromBinary(System.IO.BinaryReader)
    name: LoadFromBinary
    href: Shared.Interfaces.Model.IBinarySerializable.html#Shared_Interfaces_Model_IBinarySerializable_LoadFromBinary_System_IO_BinaryReader_
  - name: (
  - uid: System.IO.BinaryReader
    name: BinaryReader
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.binaryreader
  - name: )
  spec.vb:
  - uid: Shared.Interfaces.Model.IBinarySerializable.LoadFromBinary(System.IO.BinaryReader)
    name: LoadFromBinary
    href: Shared.Interfaces.Model.IBinarySerializable.html#Shared_Interfaces_Model_IBinarySerializable_LoadFromBinary_System_IO_BinaryReader_
  - name: (
  - uid: System.IO.BinaryReader
    name: BinaryReader
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.binaryreader
  - name: )
- uid: Shared.Interfaces.Model.IBinarySerializable.GetBinarySerials
  commentId: M:Shared.Interfaces.Model.IBinarySerializable.GetBinarySerials
  parent: Shared.Interfaces.Model.IBinarySerializable
  href: Shared.Interfaces.Model.IBinarySerializable.html#Shared_Interfaces_Model_IBinarySerializable_GetBinarySerials
  name: GetBinarySerials()
  nameWithType: IBinarySerializable.GetBinarySerials()
  fullName: Shared.Interfaces.Model.IBinarySerializable.GetBinarySerials()
  spec.csharp:
  - uid: Shared.Interfaces.Model.IBinarySerializable.GetBinarySerials
    name: GetBinarySerials
    href: Shared.Interfaces.Model.IBinarySerializable.html#Shared_Interfaces_Model_IBinarySerializable_GetBinarySerials
  - name: (
  - name: )
  spec.vb:
  - uid: Shared.Interfaces.Model.IBinarySerializable.GetBinarySerials
    name: GetBinarySerials
    href: Shared.Interfaces.Model.IBinarySerializable.html#Shared_Interfaces_Model_IBinarySerializable_GetBinarySerials
  - name: (
  - name: )
- uid: Shared.Interfaces.Model.IBinarySerializable
  commentId: T:Shared.Interfaces.Model.IBinarySerializable
  parent: Shared.Interfaces.Model
  href: Shared.Interfaces.Model.IBinarySerializable.html
  name: IBinarySerializable
  nameWithType: IBinarySerializable
  fullName: Shared.Interfaces.Model.IBinarySerializable
- uid: Shared.Interfaces.Model.IPlayer.Number
  commentId: P:Shared.Interfaces.Model.IPlayer.Number
  parent: Shared.Interfaces.Model.IPlayer
  href: Shared.Interfaces.Model.IPlayer.html#Shared_Interfaces_Model_IPlayer_Number
  name: Number
  nameWithType: IPlayer.Number
  fullName: Shared.Interfaces.Model.IPlayer.Number
- uid: System.EventHandler{System.Int32}
  commentId: T:System.EventHandler{System.Int32}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<int>
  nameWithType: EventHandler<int>
  fullName: System.EventHandler<int>
  nameWithType.vb: EventHandler(Of Integer)
  fullName.vb: System.EventHandler(Of Integer)
  name.vb: EventHandler(Of Integer)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Shared.Interfaces.Model.IPlayer
  commentId: T:Shared.Interfaces.Model.IPlayer
  parent: Shared.Interfaces.Model
  href: Shared.Interfaces.Model.IPlayer.html
  name: IPlayer
  nameWithType: IPlayer
  fullName: Shared.Interfaces.Model.IPlayer
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - name: TEventArgs
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - name: TEventArgs
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Shared.Interfaces.Model.IGame.AssetFetcher*
  commentId: Overload:Shared.Interfaces.Model.IGame.AssetFetcher
  href: Shared.Interfaces.Model.IGame.html#Shared_Interfaces_Model_IGame_AssetFetcher
  name: AssetFetcher
  nameWithType: IGame.AssetFetcher
  fullName: Shared.Interfaces.Model.IGame.AssetFetcher
- uid: Shared.Interfaces.Model.IAssetFetcher
  commentId: T:Shared.Interfaces.Model.IAssetFetcher
  parent: Shared.Interfaces.Model
  href: Shared.Interfaces.Model.IAssetFetcher.html
  name: IAssetFetcher
  nameWithType: IAssetFetcher
  fullName: Shared.Interfaces.Model.IAssetFetcher
- uid: Shared.Interfaces.Model.IGame.ID*
  commentId: Overload:Shared.Interfaces.Model.IGame.ID
  href: Shared.Interfaces.Model.IGame.html#Shared_Interfaces_Model_IGame_ID
  name: ID
  nameWithType: IGame.ID
  fullName: Shared.Interfaces.Model.IGame.ID
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Shared.Interfaces.Model.IGame
  commentId: T:Shared.Interfaces.Model.IGame
  parent: Shared.Interfaces.Model
  href: Shared.Interfaces.Model.IGame.html
  name: IGame
  nameWithType: IGame
  fullName: Shared.Interfaces.Model.IGame
- uid: Shared.Interfaces.Model.IGame.DefaultCardMode*
  commentId: Overload:Shared.Interfaces.Model.IGame.DefaultCardMode
  href: Shared.Interfaces.Model.IGame.html#Shared_Interfaces_Model_IGame_DefaultCardMode
  name: DefaultCardMode
  nameWithType: IGame.DefaultCardMode
  fullName: Shared.Interfaces.Model.IGame.DefaultCardMode
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Shared.Interfaces.Model.IGame.Values*
  commentId: Overload:Shared.Interfaces.Model.IGame.Values
  href: Shared.Interfaces.Model.IGame.html#Shared_Interfaces_Model_IGame_Values
  name: Values
  nameWithType: IGame.Values
  fullName: Shared.Interfaces.Model.IGame.Values
- uid: Shared.Interfaces.Model.IRuleValues
  commentId: T:Shared.Interfaces.Model.IRuleValues
  parent: Shared.Interfaces.Model
  href: Shared.Interfaces.Model.IRuleValues.html
  name: IRuleValues
  nameWithType: IRuleValues
  fullName: Shared.Interfaces.Model.IRuleValues
- uid: Shared.Interfaces.Model.IGame.Board*
  commentId: Overload:Shared.Interfaces.Model.IGame.Board
  href: Shared.Interfaces.Model.IGame.html#Shared_Interfaces_Model_IGame_Board
  name: Board
  nameWithType: IGame.Board
  fullName: Shared.Interfaces.Model.IGame.Board
- uid: Shared.Interfaces.Model.IBoard
  commentId: T:Shared.Interfaces.Model.IBoard
  parent: Shared.Interfaces.Model
  href: Shared.Interfaces.Model.IBoard.html
  name: IBoard
  nameWithType: IBoard
  fullName: Shared.Interfaces.Model.IBoard
- uid: Shared.Interfaces.Model.IGame.State*
  commentId: Overload:Shared.Interfaces.Model.IGame.State
  href: Shared.Interfaces.Model.IGame.html#Shared_Interfaces_Model_IGame_State
  name: State
  nameWithType: IGame.State
  fullName: Shared.Interfaces.Model.IGame.State
- uid: Model.Core.StateMachine
  commentId: T:Model.Core.StateMachine
  parent: Model.Core
  href: Model.Core.StateMachine.html
  name: StateMachine
  nameWithType: StateMachine
  fullName: Model.Core.StateMachine
- uid: Model.Core
  commentId: N:Model.Core
  href: Model.html
  name: Model.Core
  nameWithType: Model.Core
  fullName: Model.Core
  spec.csharp:
  - uid: Model
    name: Model
    href: Model.html
  - name: .
  - uid: Model.Core
    name: Core
    href: Model.Core.html
  spec.vb:
  - uid: Model
    name: Model
    href: Model.html
  - name: .
  - uid: Model.Core
    name: Core
    href: Model.Core.html
- uid: Shared.Interfaces.Model.ICard
  commentId: T:Shared.Interfaces.Model.ICard
  parent: Shared.Interfaces.Model
  href: Shared.Interfaces.Model.ICard.html
  name: ICard
  nameWithType: ICard
  fullName: Shared.Interfaces.Model.ICard
- uid: Shared.Interfaces.Model.ICardSet
  commentId: T:Shared.Interfaces.Model.ICardSet
  parent: Shared.Interfaces.Model
  href: Shared.Interfaces.Model.ICardSet.html
  name: ICardSet
  nameWithType: ICardSet
  fullName: Shared.Interfaces.Model.ICardSet
- uid: Model.Entities.Deck
  commentId: T:Model.Entities.Deck
  parent: Model.Entities
  href: Model.Entities.Deck.html
  name: Deck
  nameWithType: Deck
  fullName: Model.Entities.Deck
- uid: Shared.Interfaces.Model.IGame.Cards*
  commentId: Overload:Shared.Interfaces.Model.IGame.Cards
  href: Shared.Interfaces.Model.IGame.html#Shared_Interfaces_Model_IGame_Cards
  name: Cards
  nameWithType: IGame.Cards
  fullName: Shared.Interfaces.Model.IGame.Cards
- uid: Model.Entities.CardBase
  commentId: T:Model.Entities.CardBase
  parent: Model.Entities
  href: Model.Entities.CardBase.html
  name: CardBase
  nameWithType: CardBase
  fullName: Model.Entities.CardBase
- uid: Model.Entities
  commentId: N:Model.Entities
  href: Model.html
  name: Model.Entities
  nameWithType: Model.Entities
  fullName: Model.Entities
  spec.csharp:
  - uid: Model
    name: Model
    href: Model.html
  - name: .
  - uid: Model.Entities
    name: Entities
    href: Model.Entities.html
  spec.vb:
  - uid: Model
    name: Model
    href: Model.html
  - name: .
  - uid: Model.Entities
    name: Entities
    href: Model.Entities.html
- uid: Shared.Interfaces.Model.IGame.Players*
  commentId: Overload:Shared.Interfaces.Model.IGame.Players
  href: Shared.Interfaces.Model.IGame.html#Shared_Interfaces_Model_IGame_Players
  name: Players
  nameWithType: IGame.Players
  fullName: Shared.Interfaces.Model.IGame.Players
- uid: System.Collections.Generic.List{Shared.Interfaces.Model.IPlayer}
  commentId: T:System.Collections.Generic.List{Shared.Interfaces.Model.IPlayer}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<IPlayer>
  nameWithType: List<IPlayer>
  fullName: System.Collections.Generic.List<Shared.Interfaces.Model.IPlayer>
  nameWithType.vb: List(Of IPlayer)
  fullName.vb: System.Collections.Generic.List(Of Shared.Interfaces.Model.IPlayer)
  name.vb: List(Of IPlayer)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Shared.Interfaces.Model.IPlayer
    name: IPlayer
    href: Shared.Interfaces.Model.IPlayer.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Shared.Interfaces.Model.IPlayer
    name: IPlayer
    href: Shared.Interfaces.Model.IPlayer.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Shared.Interfaces.Model.IGame.UpdatePlayerNames*
  commentId: Overload:Shared.Interfaces.Model.IGame.UpdatePlayerNames
  href: Shared.Interfaces.Model.IGame.html#Shared_Interfaces_Model_IGame_UpdatePlayerNames_System_String___
  name: UpdatePlayerNames
  nameWithType: IGame.UpdatePlayerNames
  fullName: Shared.Interfaces.Model.IGame.UpdatePlayerNames
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: Shared.Interfaces.Model.IGame.Save*
  commentId: Overload:Shared.Interfaces.Model.IGame.Save
  href: Shared.Interfaces.Model.IGame.html#Shared_Interfaces_Model_IGame_Save_System_Boolean_System_String_
  name: Save
  nameWithType: IGame.Save
  fullName: Shared.Interfaces.Model.IGame.Save
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
