### YamlMime:ManagedReference
items:
- uid: Shared.Interfaces.View.IDialogState
  commentId: T:Shared.Interfaces.View.IDialogState
  id: IDialogState
  parent: Shared.Interfaces.View
  children:
  - Shared.Interfaces.View.IDialogState.IsDialogOpen
  langs:
  - csharp
  - vb
  name: IDialogState
  nameWithType: IDialogState
  fullName: Shared.Interfaces.View.IDialogState
  type: Interface
  source:
    remote:
      path: Shared/Interfaces/View/IDialogState.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: IDialogState
    path: ../Shared/Interfaces/View/IDialogState.cs
    startLine: 7
  assemblies:
  - Model
  namespace: Shared.Interfaces.View
  summary: Lets the ViewModel know if a dialog window is open.
  remarks: Certain commands may be enabled or disabled based on whether dialogs are open (since they await Player input).
  example: []
  syntax:
    content: public interface IDialogState
    content.vb: Public Interface IDialogState
- uid: Shared.Interfaces.View.IDialogState.IsDialogOpen
  commentId: P:Shared.Interfaces.View.IDialogState.IsDialogOpen
  id: IsDialogOpen
  parent: Shared.Interfaces.View.IDialogState
  langs:
  - csharp
  - vb
  name: IsDialogOpen
  nameWithType: IDialogState.IsDialogOpen
  fullName: Shared.Interfaces.View.IDialogState.IsDialogOpen
  type: Property
  source:
    remote:
      path: Shared/Interfaces/View/IDialogState.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: IsDialogOpen
    path: ../Shared/Interfaces/View/IDialogState.cs
    startLine: 15
  assemblies:
  - Model
  namespace: Shared.Interfaces.View
  summary: Gets a flag indicating whether a dialog window is open.
  example: []
  syntax:
    content: bool IsDialogOpen { get; }
    parameters: []
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if a dialog window is open at the View level; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: ReadOnly Property IsDialogOpen As Boolean
  overload: Shared.Interfaces.View.IDialogState.IsDialogOpen*
references:
- uid: Shared.Interfaces.View
  commentId: N:Shared.Interfaces.View
  href: Shared.html
  name: Shared.Interfaces.View
  nameWithType: Shared.Interfaces.View
  fullName: Shared.Interfaces.View
  spec.csharp:
  - uid: Shared
    name: Shared
    href: Shared.html
  - name: .
  - uid: Shared.Interfaces
    name: Interfaces
    href: Shared.Interfaces.html
  - name: .
  - uid: Shared.Interfaces.View
    name: View
    href: Shared.Interfaces.View.html
  spec.vb:
  - uid: Shared
    name: Shared
    href: Shared.html
  - name: .
  - uid: Shared.Interfaces
    name: Interfaces
    href: Shared.Interfaces.html
  - name: .
  - uid: Shared.Interfaces.View
    name: View
    href: Shared.Interfaces.View.html
- uid: Shared.Interfaces.View.IDialogState.IsDialogOpen*
  commentId: Overload:Shared.Interfaces.View.IDialogState.IsDialogOpen
  href: Shared.Interfaces.View.IDialogState.html#Shared_Interfaces_View_IDialogState_IsDialogOpen
  name: IsDialogOpen
  nameWithType: IDialogState.IsDialogOpen
  fullName: Shared.Interfaces.View.IDialogState.IsDialogOpen
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
