### YamlMime:ManagedReference
items:
- uid: Model.Core.Regulator
  commentId: T:Model.Core.Regulator
  id: Regulator
  parent: Model.Core
  children:
  - Model.Core.Regulator.#ctor(Microsoft.Extensions.Logging.ILogger{Model.Core.Regulator},Shared.Interfaces.Model.IGame)
  - Model.Core.Regulator.AwardTradeInBonus(Shared.Geography.Enums.TerrID)
  - Model.Core.Regulator.Battle(Shared.Geography.Enums.TerrID,Shared.Geography.Enums.TerrID,System.ValueTuple{System.Int32,System.Int32}[])
  - Model.Core.Regulator.CanSelectTerritory(Shared.Geography.Enums.TerrID,Shared.Geography.Enums.TerrID)
  - Model.Core.Regulator.CanTradeInCards(System.Int32,System.Int32[])
  - Model.Core.Regulator.ClaimOrReinforce(Shared.Geography.Enums.TerrID)
  - Model.Core.Regulator.CurrentActionsLimit
  - Model.Core.Regulator.DeliverCardReward
  - Model.Core.Regulator.GetBinarySerials
  - Model.Core.Regulator.Initialize
  - Model.Core.Regulator.LoadFromBinary(System.IO.BinaryReader)
  - Model.Core.Regulator.MoveArmies(Shared.Geography.Enums.TerrID,Shared.Geography.Enums.TerrID,System.Int32)
  - Model.Core.Regulator.PhaseActions
  - Model.Core.Regulator.PromptBonusChoice
  - Model.Core.Regulator.PromptTradeIn
  - Model.Core.Regulator.Reward
  - Model.Core.Regulator.SelectTerritory(Shared.Geography.Enums.TerrID,Shared.Geography.Enums.TerrID)
  - Model.Core.Regulator.TradeInCards(System.Int32,System.Int32[])
  langs:
  - csharp
  - vb
  name: Regulator
  nameWithType: Regulator
  fullName: Model.Core.Regulator
  type: Class
  source:
    remote:
      path: Model/Core/Regulator.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: Regulator
    path: ../Model/Core/Regulator.cs
    startLine: 13
  assemblies:
  - Model
  namespace: Model.Core
  summary: Facade for the Model's user interactions.
  remarks: >-
    Enforces the game rules -- "regulates" player actions; that is, after the ViewModel interprets player actions based on game state, this enforces <br />

    game rule logic in response, updating the state and readying the model for the next input.
  example: []
  syntax:
    content: 'public class Regulator : IRegulator, IBinarySerializable'
    content.vb: Public Class Regulator Implements IRegulator, IBinarySerializable
  inheritance:
  - System.Object
  implements:
  - Shared.Interfaces.Model.IRegulator
  - Shared.Interfaces.Model.IBinarySerializable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Model.Core.Regulator.#ctor(Microsoft.Extensions.Logging.ILogger{Model.Core.Regulator},Shared.Interfaces.Model.IGame)
  commentId: M:Model.Core.Regulator.#ctor(Microsoft.Extensions.Logging.ILogger{Model.Core.Regulator},Shared.Interfaces.Model.IGame)
  id: '#ctor(Microsoft.Extensions.Logging.ILogger{Model.Core.Regulator},Shared.Interfaces.Model.IGame)'
  parent: Model.Core.Regulator
  langs:
  - csharp
  - vb
  name: Regulator(ILogger<Regulator>, IGame)
  nameWithType: Regulator.Regulator(ILogger<Regulator>, IGame)
  fullName: Model.Core.Regulator.Regulator(Microsoft.Extensions.Logging.ILogger<Model.Core.Regulator>, Shared.Interfaces.Model.IGame)
  type: Constructor
  source:
    remote:
      path: Model/Core/Regulator.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: .ctor
    path: ../Model/Core/Regulator.cs
    startLine: 13
  assemblies:
  - Model
  namespace: Model.Core
  summary: Facade for the Model's user interactions.
  remarks: >-
    Enforces the game rules -- "regulates" player actions; that is, after the ViewModel interprets player actions based on game state, this enforces <br />

    game rule logic in response, updating the state and readying the model for the next input.
  example: []
  syntax:
    content: public Regulator(ILogger<Regulator> logger, IGame currentGame)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger{Model.Core.Regulator}
    - id: currentGame
      type: Shared.Interfaces.Model.IGame
    content.vb: Public Sub New(logger As ILogger(Of Regulator), currentGame As IGame)
  overload: Model.Core.Regulator.#ctor*
  nameWithType.vb: Regulator.New(ILogger(Of Regulator), IGame)
  fullName.vb: Model.Core.Regulator.New(Microsoft.Extensions.Logging.ILogger(Of Model.Core.Regulator), Shared.Interfaces.Model.IGame)
  name.vb: New(ILogger(Of Regulator), IGame)
- uid: Model.Core.Regulator.CurrentActionsLimit
  commentId: P:Model.Core.Regulator.CurrentActionsLimit
  id: CurrentActionsLimit
  parent: Model.Core.Regulator
  langs:
  - csharp
  - vb
  name: CurrentActionsLimit
  nameWithType: Regulator.CurrentActionsLimit
  fullName: Model.Core.Regulator.CurrentActionsLimit
  type: Property
  source:
    remote:
      path: Model/Core/Regulator.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: CurrentActionsLimit
    path: ../Model/Core/Regulator.cs
    startLine: 28
  assemblies:
  - Model
  namespace: Model.Core
  summary: Gets or sets the limit on player actions during this <xref href="Shared.Enums.GamePhase" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public int CurrentActionsLimit { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property CurrentActionsLimit As Integer
  overload: Model.Core.Regulator.CurrentActionsLimit*
  implements:
  - Shared.Interfaces.Model.IRegulator.CurrentActionsLimit
- uid: Model.Core.Regulator.PhaseActions
  commentId: P:Model.Core.Regulator.PhaseActions
  id: PhaseActions
  parent: Model.Core.Regulator
  langs:
  - csharp
  - vb
  name: PhaseActions
  nameWithType: Regulator.PhaseActions
  fullName: Model.Core.Regulator.PhaseActions
  type: Property
  source:
    remote:
      path: Model/Core/Regulator.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: PhaseActions
    path: ../Model/Core/Regulator.cs
    startLine: 30
  assemblies:
  - Model
  namespace: Model.Core
  summary: Gets the number of player actions taken during this <xref href="Shared.Enums.GamePhase" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public int PhaseActions { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property PhaseActions As Integer
  overload: Model.Core.Regulator.PhaseActions*
  implements:
  - Shared.Interfaces.Model.IRegulator.PhaseActions
- uid: Model.Core.Regulator.Reward
  commentId: P:Model.Core.Regulator.Reward
  id: Reward
  parent: Model.Core.Regulator
  langs:
  - csharp
  - vb
  name: Reward
  nameWithType: Regulator.Reward
  fullName: Model.Core.Regulator.Reward
  type: Property
  source:
    remote:
      path: Model/Core/Regulator.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: Reward
    path: ../Model/Core/Regulator.cs
    startLine: 32
  assemblies:
  - Model
  namespace: Model.Core
  summary: Gets or sets a card rewarded to a player for a successful attack.
  example: []
  syntax:
    content: public ICard? Reward { get; set; }
    parameters: []
    return:
      type: Shared.Interfaces.Model.ICard
      description: If the current player made a successful attack, an <xref href="Shared.Interfaces.Model.ICard" data-throw-if-not-resolved="false"></xref>. Otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
    content.vb: Public Property Reward As ICard
  overload: Model.Core.Regulator.Reward*
  implements:
  - Shared.Interfaces.Model.IRegulator.Reward
- uid: Model.Core.Regulator.PromptBonusChoice
  commentId: E:Model.Core.Regulator.PromptBonusChoice
  id: PromptBonusChoice
  parent: Model.Core.Regulator
  langs:
  - csharp
  - vb
  name: PromptBonusChoice
  nameWithType: Regulator.PromptBonusChoice
  fullName: Model.Core.Regulator.PromptBonusChoice
  type: Event
  source:
    remote:
      path: Model/Core/Regulator.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: PromptBonusChoice
    path: ../Model/Core/Regulator.cs
    startLine: 35
  assemblies:
  - Model
  namespace: Model.Core
  summary: Fires when a player must choose between two or more territories they control to receive a bonus upon card trade-in.
  example: []
  syntax:
    content: public event EventHandler<TerrID[]>? PromptBonusChoice
    return:
      type: System.EventHandler{Shared.Geography.Enums.TerrID[]}
    content.vb: Public Event PromptBonusChoice As EventHandler(Of TerrID())
  implements:
  - Shared.Interfaces.Model.IRegulator.PromptBonusChoice
- uid: Model.Core.Regulator.PromptTradeIn
  commentId: E:Model.Core.Regulator.PromptTradeIn
  id: PromptTradeIn
  parent: Model.Core.Regulator
  langs:
  - csharp
  - vb
  name: PromptTradeIn
  nameWithType: Regulator.PromptTradeIn
  fullName: Model.Core.Regulator.PromptTradeIn
  type: Event
  source:
    remote:
      path: Model/Core/Regulator.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: PromptTradeIn
    path: ../Model/Core/Regulator.cs
    startLine: 37
  assemblies:
  - Model
  namespace: Model.Core
  summary: Fires when a player should be prompted to trade in cards at the start of their turn; may or may not be forced.
  example: []
  syntax:
    content: public event EventHandler<IPromptTradeEventArgs>? PromptTradeIn
    return:
      type: System.EventHandler{Shared.Interfaces.Model.IPromptTradeEventArgs}
    content.vb: Public Event PromptTradeIn As EventHandler(Of IPromptTradeEventArgs)
  implements:
  - Shared.Interfaces.Model.IRegulator.PromptTradeIn
- uid: Model.Core.Regulator.Initialize
  commentId: M:Model.Core.Regulator.Initialize
  id: Initialize
  parent: Model.Core.Regulator
  langs:
  - csharp
  - vb
  name: Initialize()
  nameWithType: Regulator.Initialize()
  fullName: Model.Core.Regulator.Initialize()
  type: Method
  source:
    remote:
      path: Model/Core/Regulator.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: Initialize
    path: ../Model/Core/Regulator.cs
    startLine: 130
  assemblies:
  - Model
  namespace: Model.Core
  summary: Initializes this <xref href="Shared.Interfaces.Model.IRegulator" data-throw-if-not-resolved="false"></xref>.
  remarks: This post-construction initialization step is needed to accomodate loading from save files.
  example: []
  syntax:
    content: public void Initialize()
    content.vb: Public Sub Initialize()
  overload: Model.Core.Regulator.Initialize*
  implements:
  - Shared.Interfaces.Model.IRegulator.Initialize
- uid: Model.Core.Regulator.CanSelectTerritory(Shared.Geography.Enums.TerrID,Shared.Geography.Enums.TerrID)
  commentId: M:Model.Core.Regulator.CanSelectTerritory(Shared.Geography.Enums.TerrID,Shared.Geography.Enums.TerrID)
  id: CanSelectTerritory(Shared.Geography.Enums.TerrID,Shared.Geography.Enums.TerrID)
  parent: Model.Core.Regulator
  langs:
  - csharp
  - vb
  name: CanSelectTerritory(TerrID, TerrID)
  nameWithType: Regulator.CanSelectTerritory(TerrID, TerrID)
  fullName: Model.Core.Regulator.CanSelectTerritory(Shared.Geography.Enums.TerrID, Shared.Geography.Enums.TerrID)
  type: Method
  source:
    remote:
      path: Model/Core/Regulator.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: CanSelectTerritory
    path: ../Model/Core/Regulator.cs
    startLine: 145
  assemblies:
  - Model
  namespace: Model.Core
  summary: Determines whether a given territory is a valid selection according to rules and game state.
  example: []
  syntax:
    content: public bool CanSelectTerritory(TerrID newSelected, TerrID oldSelected)
    parameters:
    - id: newSelected
      type: Shared.Geography.Enums.TerrID
      description: The territory being selected.
    - id: oldSelected
      type: Shared.Geography.Enums.TerrID
      description: The territory already selected, if any.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the territory is a valid selection; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Function CanSelectTerritory(newSelected As TerrID, oldSelected As TerrID) As Boolean
  overload: Model.Core.Regulator.CanSelectTerritory*
  implements:
  - Shared.Interfaces.Model.IRegulator.CanSelectTerritory(Shared.Geography.Enums.TerrID,Shared.Geography.Enums.TerrID)
- uid: Model.Core.Regulator.SelectTerritory(Shared.Geography.Enums.TerrID,Shared.Geography.Enums.TerrID)
  commentId: M:Model.Core.Regulator.SelectTerritory(Shared.Geography.Enums.TerrID,Shared.Geography.Enums.TerrID)
  id: SelectTerritory(Shared.Geography.Enums.TerrID,Shared.Geography.Enums.TerrID)
  parent: Model.Core.Regulator
  langs:
  - csharp
  - vb
  name: SelectTerritory(TerrID, TerrID)
  nameWithType: Regulator.SelectTerritory(TerrID, TerrID)
  fullName: Model.Core.Regulator.SelectTerritory(Shared.Geography.Enums.TerrID, Shared.Geography.Enums.TerrID)
  type: Method
  source:
    remote:
      path: Model/Core/Regulator.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: SelectTerritory
    path: ../Model/Core/Regulator.cs
    startLine: 197
  assemblies:
  - Model
  namespace: Model.Core
  summary: Receives a territory ID selection as Player input and determines course of game logic.
  example: []
  syntax:
    content: public (TerrID Selection, bool RequestInput, int? MaxValue) SelectTerritory(TerrID selected, TerrID priorSelected)
    parameters:
    - id: selected
      type: Shared.Geography.Enums.TerrID
      description: The Territory selected by the player.
    - id: priorSelected
      type: Shared.Geography.Enums.TerrID
      description: The previous selection.
    return:
      type: System.ValueTuple{Shared.Geography.Enums.TerrID,System.Boolean,System.Nullable{System.Int32}}
      description: >-
        A tuple containing the updated selection and a flag for requesting further player input (needed in Attack and Move phases). 
            If MaxValue is not null, the request is for Move/Advance.
    content.vb: Public Function SelectTerritory(selected As TerrID, priorSelected As TerrID) As (Selection As TerrID, RequestInput As Boolean, MaxValue As Integer?)
  overload: Model.Core.Regulator.SelectTerritory*
  implements:
  - Shared.Interfaces.Model.IRegulator.SelectTerritory(Shared.Geography.Enums.TerrID,Shared.Geography.Enums.TerrID)
- uid: Model.Core.Regulator.ClaimOrReinforce(Shared.Geography.Enums.TerrID)
  commentId: M:Model.Core.Regulator.ClaimOrReinforce(Shared.Geography.Enums.TerrID)
  id: ClaimOrReinforce(Shared.Geography.Enums.TerrID)
  parent: Model.Core.Regulator
  langs:
  - csharp
  - vb
  name: ClaimOrReinforce(TerrID)
  nameWithType: Regulator.ClaimOrReinforce(TerrID)
  fullName: Model.Core.Regulator.ClaimOrReinforce(Shared.Geography.Enums.TerrID)
  type: Method
  source:
    remote:
      path: Model/Core/Regulator.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: ClaimOrReinforce
    path: ../Model/Core/Regulator.cs
    startLine: 247
  assemblies:
  - Model
  namespace: Model.Core
  summary: Updates game state in response to a territory being selected during Setup or Place phases (see <xref href="Shared.Enums.GamePhase" data-throw-if-not-resolved="false"></xref>).
  example: []
  syntax:
    content: public void ClaimOrReinforce(TerrID territory)
    parameters:
    - id: territory
      type: Shared.Geography.Enums.TerrID
      description: The territory selected.
    content.vb: Public Sub ClaimOrReinforce(territory As TerrID)
  overload: Model.Core.Regulator.ClaimOrReinforce*
  implements:
  - Shared.Interfaces.Model.IRegulator.ClaimOrReinforce(Shared.Geography.Enums.TerrID)
- uid: Model.Core.Regulator.MoveArmies(Shared.Geography.Enums.TerrID,Shared.Geography.Enums.TerrID,System.Int32)
  commentId: M:Model.Core.Regulator.MoveArmies(Shared.Geography.Enums.TerrID,Shared.Geography.Enums.TerrID,System.Int32)
  id: MoveArmies(Shared.Geography.Enums.TerrID,Shared.Geography.Enums.TerrID,System.Int32)
  parent: Model.Core.Regulator
  langs:
  - csharp
  - vb
  name: MoveArmies(TerrID, TerrID, int)
  nameWithType: Regulator.MoveArmies(TerrID, TerrID, int)
  fullName: Model.Core.Regulator.MoveArmies(Shared.Geography.Enums.TerrID, Shared.Geography.Enums.TerrID, int)
  type: Method
  source:
    remote:
      path: Model/Core/Regulator.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: MoveArmies
    path: ../Model/Core/Regulator.cs
    startLine: 299
  assemblies:
  - Model
  namespace: Model.Core
  summary: Updates the game state in response to the 'Move' action, in which a player moves a number of armies from one controlled territory to another during <xref href="Shared.Enums.GamePhase.Move" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public void MoveArmies(TerrID source, TerrID target, int armies)
    parameters:
    - id: source
      type: Shared.Geography.Enums.TerrID
      description: The source of the moving armies.
    - id: target
      type: Shared.Geography.Enums.TerrID
      description: The target of the move.
    - id: armies
      type: System.Int32
      description: The number of armies to move.
    content.vb: Public Sub MoveArmies(source As TerrID, target As TerrID, armies As Integer)
  overload: Model.Core.Regulator.MoveArmies*
  implements:
  - Shared.Interfaces.Model.IRegulator.MoveArmies(Shared.Geography.Enums.TerrID,Shared.Geography.Enums.TerrID,System.Int32)
  nameWithType.vb: Regulator.MoveArmies(TerrID, TerrID, Integer)
  fullName.vb: Model.Core.Regulator.MoveArmies(Shared.Geography.Enums.TerrID, Shared.Geography.Enums.TerrID, Integer)
  name.vb: MoveArmies(TerrID, TerrID, Integer)
- uid: Model.Core.Regulator.Battle(Shared.Geography.Enums.TerrID,Shared.Geography.Enums.TerrID,System.ValueTuple{System.Int32,System.Int32}[])
  commentId: M:Model.Core.Regulator.Battle(Shared.Geography.Enums.TerrID,Shared.Geography.Enums.TerrID,System.ValueTuple{System.Int32,System.Int32}[])
  id: Battle(Shared.Geography.Enums.TerrID,Shared.Geography.Enums.TerrID,System.ValueTuple{System.Int32,System.Int32}[])
  parent: Model.Core.Regulator
  langs:
  - csharp
  - vb
  name: Battle(TerrID, TerrID, (int AttackRoll, int DefenseRoll)[])
  nameWithType: Regulator.Battle(TerrID, TerrID, (int AttackRoll, int DefenseRoll)[])
  fullName: Model.Core.Regulator.Battle(Shared.Geography.Enums.TerrID, Shared.Geography.Enums.TerrID, (int AttackRoll, int DefenseRoll)[])
  type: Method
  source:
    remote:
      path: Model/Core/Regulator.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: Battle
    path: ../Model/Core/Regulator.cs
    startLine: 308
  assemblies:
  - Model
  namespace: Model.Core
  summary: Executes game-rule logic when given the results of a battle between the armies of two territories.
  remarks: By default, rolls for attacker and defender should be put in descending order, then paired (unpaired remainders are ignored).
  example: []
  syntax:
    content: public void Battle(TerrID source, TerrID target, (int AttackRoll, int DefenseRoll)[] diceRolls)
    parameters:
    - id: source
      type: Shared.Geography.Enums.TerrID
      description: The source of the attack (attacker).
    - id: target
      type: Shared.Geography.Enums.TerrID
      description: The target of the attack (defender).
    - id: diceRolls
      type: System.ValueTuple{System.Int32,System.Int32}[]
      description: Dice rolls paired together according to game rules.
    content.vb: Public Sub Battle(source As TerrID, target As TerrID, diceRolls As (AttackRoll As Integer, DefenseRoll As Integer)())
  overload: Model.Core.Regulator.Battle*
  implements:
  - Shared.Interfaces.Model.IRegulator.Battle(Shared.Geography.Enums.TerrID,Shared.Geography.Enums.TerrID,System.ValueTuple{System.Int32,System.Int32}[])
  nameWithType.vb: Regulator.Battle(TerrID, TerrID, (AttackRoll As Integer, DefenseRoll As Integer)())
  fullName.vb: Model.Core.Regulator.Battle(Shared.Geography.Enums.TerrID, Shared.Geography.Enums.TerrID, (AttackRoll As Integer, DefenseRoll As Integer)())
  name.vb: Battle(TerrID, TerrID, (AttackRoll As Integer, DefenseRoll As Integer)())
- uid: Model.Core.Regulator.CanTradeInCards(System.Int32,System.Int32[])
  commentId: M:Model.Core.Regulator.CanTradeInCards(System.Int32,System.Int32[])
  id: CanTradeInCards(System.Int32,System.Int32[])
  parent: Model.Core.Regulator
  langs:
  - csharp
  - vb
  name: CanTradeInCards(int, int[])
  nameWithType: Regulator.CanTradeInCards(int, int[])
  fullName: Model.Core.Regulator.CanTradeInCards(int, int[])
  type: Method
  source:
    remote:
      path: Model/Core/Regulator.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: CanTradeInCards
    path: ../Model/Core/Regulator.cs
    startLine: 337
  assemblies:
  - Model
  namespace: Model.Core
  summary: Determines whether a subset of a player's hand can be traded in.
  remarks: Typically, relevant factors include the <xref href="Shared.Interfaces.Model.ICard" data-throw-if-not-resolved="false"></xref> values, their <xref href="Shared.Interfaces.Model.ICardSet" data-throw-if-not-resolved="false"></xref> trading functions, and the current <xref href="Shared.Enums.GamePhase" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public bool CanTradeInCards(int playerNum, int[] handIndices)
    parameters:
    - id: playerNum
      type: System.Int32
    - id: handIndices
      type: System.Int32[]
      description: The indices of the <xref href="Shared.Interfaces.Model.ICard" data-throw-if-not-resolved="false"></xref>s within <xref href="Shared.Interfaces.Model.IPlayer.Hand" data-throw-if-not-resolved="false"></xref> that are to be traded.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if circumstances allow the trade; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>. <br />
    content.vb: Public Function CanTradeInCards(playerNum As Integer, handIndices As Integer()) As Boolean
  overload: Model.Core.Regulator.CanTradeInCards*
  implements:
  - Shared.Interfaces.Model.IRegulator.CanTradeInCards(System.Int32,System.Int32[])
  nameWithType.vb: Regulator.CanTradeInCards(Integer, Integer())
  fullName.vb: Model.Core.Regulator.CanTradeInCards(Integer, Integer())
  name.vb: CanTradeInCards(Integer, Integer())
- uid: Model.Core.Regulator.TradeInCards(System.Int32,System.Int32[])
  commentId: M:Model.Core.Regulator.TradeInCards(System.Int32,System.Int32[])
  id: TradeInCards(System.Int32,System.Int32[])
  parent: Model.Core.Regulator
  langs:
  - csharp
  - vb
  name: TradeInCards(int, int[])
  nameWithType: Regulator.TradeInCards(int, int[])
  fullName: Model.Core.Regulator.TradeInCards(int, int[])
  type: Method
  source:
    remote:
      path: Model/Core/Regulator.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: TradeInCards
    path: ../Model/Core/Regulator.cs
    startLine: 371
  assemblies:
  - Model
  namespace: Model.Core
  summary: Executes game-rule logic for trading in cards from a player.
  example: []
  syntax:
    content: public void TradeInCards(int playerNum, int[] handIndices)
    parameters:
    - id: playerNum
      type: System.Int32
    - id: handIndices
      type: System.Int32[]
      description: An array representing the indices of <xref href="Shared.Interfaces.Model.IPlayer.Hand" data-throw-if-not-resolved="false"></xref> which were traded.
    content.vb: Public Sub TradeInCards(playerNum As Integer, handIndices As Integer())
  overload: Model.Core.Regulator.TradeInCards*
  implements:
  - Shared.Interfaces.Model.IRegulator.TradeInCards(System.Int32,System.Int32[])
  nameWithType.vb: Regulator.TradeInCards(Integer, Integer())
  fullName.vb: Model.Core.Regulator.TradeInCards(Integer, Integer())
  name.vb: TradeInCards(Integer, Integer())
- uid: Model.Core.Regulator.AwardTradeInBonus(Shared.Geography.Enums.TerrID)
  commentId: M:Model.Core.Regulator.AwardTradeInBonus(Shared.Geography.Enums.TerrID)
  id: AwardTradeInBonus(Shared.Geography.Enums.TerrID)
  parent: Model.Core.Regulator
  langs:
  - csharp
  - vb
  name: AwardTradeInBonus(TerrID)
  nameWithType: Regulator.AwardTradeInBonus(TerrID)
  fullName: Model.Core.Regulator.AwardTradeInBonus(Shared.Geography.Enums.TerrID)
  type: Method
  source:
    remote:
      path: Model/Core/Regulator.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: AwardTradeInBonus
    path: ../Model/Core/Regulator.cs
    startLine: 392
  assemblies:
  - Model
  namespace: Model.Core
  summary: Executes game-rule logic for awarding bonus armies to a territory due to card trade-in.
  remarks: Used when a player controls one or more territories of the <xref href="Shared.Interfaces.Model.ICard.Target" data-throw-if-not-resolved="false"></xref>s upon trade-in.
  example: []
  syntax:
    content: public void AwardTradeInBonus(TerrID territory)
    parameters:
    - id: territory
      type: Shared.Geography.Enums.TerrID
      description: The territory awarded the bonus armies.
    content.vb: Public Sub AwardTradeInBonus(territory As TerrID)
  overload: Model.Core.Regulator.AwardTradeInBonus*
  implements:
  - Shared.Interfaces.Model.IRegulator.AwardTradeInBonus(Shared.Geography.Enums.TerrID)
- uid: Model.Core.Regulator.DeliverCardReward
  commentId: M:Model.Core.Regulator.DeliverCardReward
  id: DeliverCardReward
  parent: Model.Core.Regulator
  langs:
  - csharp
  - vb
  name: DeliverCardReward()
  nameWithType: Regulator.DeliverCardReward()
  fullName: Model.Core.Regulator.DeliverCardReward()
  type: Method
  source:
    remote:
      path: Model/Core/Regulator.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: DeliverCardReward
    path: ../Model/Core/Regulator.cs
    startLine: 397
  assemblies:
  - Model
  namespace: Model.Core
  summary: Delivers the <xref href="Shared.Interfaces.Model.ICard" data-throw-if-not-resolved="false"></xref> held in <xref href="Shared.Interfaces.Model.IRegulator.Reward" data-throw-if-not-resolved="false"></xref>, if any, to the appropriate <xref href="Shared.Interfaces.Model.IPlayer" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public void DeliverCardReward()
    content.vb: Public Sub DeliverCardReward()
  overload: Model.Core.Regulator.DeliverCardReward*
  implements:
  - Shared.Interfaces.Model.IRegulator.DeliverCardReward
- uid: Model.Core.Regulator.GetBinarySerials
  commentId: M:Model.Core.Regulator.GetBinarySerials
  id: GetBinarySerials
  parent: Model.Core.Regulator
  langs:
  - csharp
  - vb
  name: GetBinarySerials()
  nameWithType: Regulator.GetBinarySerials()
  fullName: Model.Core.Regulator.GetBinarySerials()
  type: Method
  source:
    remote:
      path: Model/Core/Regulator.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: GetBinarySerials
    path: ../Model/Core/Regulator.cs
    startLine: 406
  assemblies:
  - Model
  namespace: Model.Core
  summary: Asynchronously serializes the <xref href="Shared.Interfaces.Model.IBinarySerializable" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public Task<SerializedData[]> GetBinarySerials()
    return:
      type: System.Threading.Tasks.Task{Shared.Services.Serializer.SerializedData[]}
      description: A task whose result contains serialized object data.
    content.vb: Public Function GetBinarySerials() As Task(Of SerializedData())
  overload: Model.Core.Regulator.GetBinarySerials*
  implements:
  - Shared.Interfaces.Model.IBinarySerializable.GetBinarySerials
- uid: Model.Core.Regulator.LoadFromBinary(System.IO.BinaryReader)
  commentId: M:Model.Core.Regulator.LoadFromBinary(System.IO.BinaryReader)
  id: LoadFromBinary(System.IO.BinaryReader)
  parent: Model.Core.Regulator
  langs:
  - csharp
  - vb
  name: LoadFromBinary(BinaryReader)
  nameWithType: Regulator.LoadFromBinary(BinaryReader)
  fullName: Model.Core.Regulator.LoadFromBinary(System.IO.BinaryReader)
  type: Method
  source:
    remote:
      path: Model/Core/Regulator.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: LoadFromBinary
    path: ../Model/Core/Regulator.cs
    startLine: 427
  assemblies:
  - Model
  namespace: Model.Core
  summary: Loads the <xref href="Shared.Interfaces.Model.IBinarySerializable" data-throw-if-not-resolved="false"></xref> with binary values read from a file.
  example: []
  syntax:
    content: public bool LoadFromBinary(BinaryReader reader)
    parameters:
    - id: reader
      type: System.IO.BinaryReader
      description: A reader whose <xref href="System.IO.BinaryReader.BaseStream" data-throw-if-not-resolved="false"></xref> was previously written to using <xref href="Shared.Services.Serializer.BinarySerializer" data-throw-if-not-resolved="false"></xref> and <xref href="Shared.Interfaces.Model.IBinarySerializable.GetBinarySerials" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the load succeeded without exceptions; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Function LoadFromBinary(reader As BinaryReader) As Boolean
  overload: Model.Core.Regulator.LoadFromBinary*
  implements:
  - Shared.Interfaces.Model.IBinarySerializable.LoadFromBinary(System.IO.BinaryReader)
references:
- uid: Model.Core
  commentId: N:Model.Core
  href: Model.html
  name: Model.Core
  nameWithType: Model.Core
  fullName: Model.Core
  spec.csharp:
  - uid: Model
    name: Model
    href: Model.html
  - name: .
  - uid: Model.Core
    name: Core
    href: Model.Core.html
  spec.vb:
  - uid: Model
    name: Model
    href: Model.html
  - name: .
  - uid: Model.Core
    name: Core
    href: Model.Core.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Shared.Interfaces.Model.IRegulator
  commentId: T:Shared.Interfaces.Model.IRegulator
  parent: Shared.Interfaces.Model
  href: Shared.Interfaces.Model.IRegulator.html
  name: IRegulator
  nameWithType: IRegulator
  fullName: Shared.Interfaces.Model.IRegulator
- uid: Shared.Interfaces.Model.IBinarySerializable
  commentId: T:Shared.Interfaces.Model.IBinarySerializable
  parent: Shared.Interfaces.Model
  href: Shared.Interfaces.Model.IBinarySerializable.html
  name: IBinarySerializable
  nameWithType: IBinarySerializable
  fullName: Shared.Interfaces.Model.IBinarySerializable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Shared.Interfaces.Model
  commentId: N:Shared.Interfaces.Model
  href: Shared.html
  name: Shared.Interfaces.Model
  nameWithType: Shared.Interfaces.Model
  fullName: Shared.Interfaces.Model
  spec.csharp:
  - uid: Shared
    name: Shared
    href: Shared.html
  - name: .
  - uid: Shared.Interfaces
    name: Interfaces
    href: Shared.Interfaces.html
  - name: .
  - uid: Shared.Interfaces.Model
    name: Model
    href: Shared.Interfaces.Model.html
  spec.vb:
  - uid: Shared
    name: Shared
    href: Shared.html
  - name: .
  - uid: Shared.Interfaces
    name: Interfaces
    href: Shared.Interfaces.html
  - name: .
  - uid: Shared.Interfaces.Model
    name: Model
    href: Shared.Interfaces.Model.html
- uid: Model.Core.Regulator.#ctor*
  commentId: Overload:Model.Core.Regulator.#ctor
  href: Model.Core.Regulator.html#Model_Core_Regulator__ctor_Microsoft_Extensions_Logging_ILogger_Model_Core_Regulator__Shared_Interfaces_Model_IGame_
  name: Regulator
  nameWithType: Regulator.Regulator
  fullName: Model.Core.Regulator.Regulator
  nameWithType.vb: Regulator.New
  fullName.vb: Model.Core.Regulator.New
  name.vb: New
- uid: Microsoft.Extensions.Logging.ILogger{Model.Core.Regulator}
  commentId: T:Microsoft.Extensions.Logging.ILogger{Model.Core.Regulator}
  parent: Microsoft.Extensions.Logging
  definition: Microsoft.Extensions.Logging.ILogger`1
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  name: ILogger<Regulator>
  nameWithType: ILogger<Regulator>
  fullName: Microsoft.Extensions.Logging.ILogger<Model.Core.Regulator>
  nameWithType.vb: ILogger(Of Regulator)
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of Model.Core.Regulator)
  name.vb: ILogger(Of Regulator)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: <
  - uid: Model.Core.Regulator
    name: Regulator
    href: Model.Core.Regulator.html
  - name: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: (
  - name: Of
  - name: " "
  - uid: Model.Core.Regulator
    name: Regulator
    href: Model.Core.Regulator.html
  - name: )
- uid: Shared.Interfaces.Model.IGame
  commentId: T:Shared.Interfaces.Model.IGame
  parent: Shared.Interfaces.Model
  href: Shared.Interfaces.Model.IGame.html
  name: IGame
  nameWithType: IGame
  fullName: Shared.Interfaces.Model.IGame
- uid: Microsoft.Extensions.Logging.ILogger`1
  commentId: T:Microsoft.Extensions.Logging.ILogger`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  name: ILogger<TCategoryName>
  nameWithType: ILogger<TCategoryName>
  fullName: Microsoft.Extensions.Logging.ILogger<TCategoryName>
  nameWithType.vb: ILogger(Of TCategoryName)
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of TCategoryName)
  name.vb: ILogger(Of TCategoryName)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: <
  - name: TCategoryName
  - name: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: (
  - name: Of
  - name: " "
  - name: TCategoryName
  - name: )
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
- uid: Shared.Enums.GamePhase
  commentId: T:Shared.Enums.GamePhase
  parent: Shared.Enums
  href: Shared.Enums.GamePhase.html
  name: GamePhase
  nameWithType: GamePhase
  fullName: Shared.Enums.GamePhase
- uid: Model.Core.Regulator.CurrentActionsLimit*
  commentId: Overload:Model.Core.Regulator.CurrentActionsLimit
  href: Model.Core.Regulator.html#Model_Core_Regulator_CurrentActionsLimit
  name: CurrentActionsLimit
  nameWithType: Regulator.CurrentActionsLimit
  fullName: Model.Core.Regulator.CurrentActionsLimit
- uid: Shared.Interfaces.Model.IRegulator.CurrentActionsLimit
  commentId: P:Shared.Interfaces.Model.IRegulator.CurrentActionsLimit
  parent: Shared.Interfaces.Model.IRegulator
  href: Shared.Interfaces.Model.IRegulator.html#Shared_Interfaces_Model_IRegulator_CurrentActionsLimit
  name: CurrentActionsLimit
  nameWithType: IRegulator.CurrentActionsLimit
  fullName: Shared.Interfaces.Model.IRegulator.CurrentActionsLimit
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Shared.Enums
  commentId: N:Shared.Enums
  href: Shared.html
  name: Shared.Enums
  nameWithType: Shared.Enums
  fullName: Shared.Enums
  spec.csharp:
  - uid: Shared
    name: Shared
    href: Shared.html
  - name: .
  - uid: Shared.Enums
    name: Enums
    href: Shared.Enums.html
  spec.vb:
  - uid: Shared
    name: Shared
    href: Shared.html
  - name: .
  - uid: Shared.Enums
    name: Enums
    href: Shared.Enums.html
- uid: Model.Core.Regulator.PhaseActions*
  commentId: Overload:Model.Core.Regulator.PhaseActions
  href: Model.Core.Regulator.html#Model_Core_Regulator_PhaseActions
  name: PhaseActions
  nameWithType: Regulator.PhaseActions
  fullName: Model.Core.Regulator.PhaseActions
- uid: Shared.Interfaces.Model.IRegulator.PhaseActions
  commentId: P:Shared.Interfaces.Model.IRegulator.PhaseActions
  parent: Shared.Interfaces.Model.IRegulator
  href: Shared.Interfaces.Model.IRegulator.html#Shared_Interfaces_Model_IRegulator_PhaseActions
  name: PhaseActions
  nameWithType: IRegulator.PhaseActions
  fullName: Shared.Interfaces.Model.IRegulator.PhaseActions
- uid: Shared.Interfaces.Model.ICard
  commentId: T:Shared.Interfaces.Model.ICard
  parent: Shared.Interfaces.Model
  href: Shared.Interfaces.Model.ICard.html
  name: ICard
  nameWithType: ICard
  fullName: Shared.Interfaces.Model.ICard
- uid: Model.Core.Regulator.Reward*
  commentId: Overload:Model.Core.Regulator.Reward
  href: Model.Core.Regulator.html#Model_Core_Regulator_Reward
  name: Reward
  nameWithType: Regulator.Reward
  fullName: Model.Core.Regulator.Reward
- uid: Shared.Interfaces.Model.IRegulator.Reward
  commentId: P:Shared.Interfaces.Model.IRegulator.Reward
  parent: Shared.Interfaces.Model.IRegulator
  href: Shared.Interfaces.Model.IRegulator.html#Shared_Interfaces_Model_IRegulator_Reward
  name: Reward
  nameWithType: IRegulator.Reward
  fullName: Shared.Interfaces.Model.IRegulator.Reward
- uid: Shared.Interfaces.Model.IRegulator.PromptBonusChoice
  commentId: E:Shared.Interfaces.Model.IRegulator.PromptBonusChoice
  parent: Shared.Interfaces.Model.IRegulator
  href: Shared.Interfaces.Model.IRegulator.html#Shared_Interfaces_Model_IRegulator_PromptBonusChoice
  name: PromptBonusChoice
  nameWithType: IRegulator.PromptBonusChoice
  fullName: Shared.Interfaces.Model.IRegulator.PromptBonusChoice
- uid: System.EventHandler{Shared.Geography.Enums.TerrID[]}
  commentId: T:System.EventHandler{Shared.Geography.Enums.TerrID[]}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<TerrID[]>
  nameWithType: EventHandler<TerrID[]>
  fullName: System.EventHandler<Shared.Geography.Enums.TerrID[]>
  nameWithType.vb: EventHandler(Of TerrID())
  fullName.vb: System.EventHandler(Of Shared.Geography.Enums.TerrID())
  name.vb: EventHandler(Of TerrID())
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: Shared.Geography.Enums.TerrID
    name: TerrID
    href: Shared.Geography.Enums.TerrID.html
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: Shared.Geography.Enums.TerrID
    name: TerrID
    href: Shared.Geography.Enums.TerrID.html
  - name: (
  - name: )
  - name: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - name: TEventArgs
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - name: TEventArgs
  - name: )
- uid: Shared.Interfaces.Model.IRegulator.PromptTradeIn
  commentId: E:Shared.Interfaces.Model.IRegulator.PromptTradeIn
  parent: Shared.Interfaces.Model.IRegulator
  href: Shared.Interfaces.Model.IRegulator.html#Shared_Interfaces_Model_IRegulator_PromptTradeIn
  name: PromptTradeIn
  nameWithType: IRegulator.PromptTradeIn
  fullName: Shared.Interfaces.Model.IRegulator.PromptTradeIn
- uid: System.EventHandler{Shared.Interfaces.Model.IPromptTradeEventArgs}
  commentId: T:System.EventHandler{Shared.Interfaces.Model.IPromptTradeEventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<IPromptTradeEventArgs>
  nameWithType: EventHandler<IPromptTradeEventArgs>
  fullName: System.EventHandler<Shared.Interfaces.Model.IPromptTradeEventArgs>
  nameWithType.vb: EventHandler(Of IPromptTradeEventArgs)
  fullName.vb: System.EventHandler(Of Shared.Interfaces.Model.IPromptTradeEventArgs)
  name.vb: EventHandler(Of IPromptTradeEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: Shared.Interfaces.Model.IPromptTradeEventArgs
    name: IPromptTradeEventArgs
    href: Shared.Interfaces.Model.IPromptTradeEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: Shared.Interfaces.Model.IPromptTradeEventArgs
    name: IPromptTradeEventArgs
    href: Shared.Interfaces.Model.IPromptTradeEventArgs.html
  - name: )
- uid: Model.Core.Regulator.Initialize*
  commentId: Overload:Model.Core.Regulator.Initialize
  href: Model.Core.Regulator.html#Model_Core_Regulator_Initialize
  name: Initialize
  nameWithType: Regulator.Initialize
  fullName: Model.Core.Regulator.Initialize
- uid: Shared.Interfaces.Model.IRegulator.Initialize
  commentId: M:Shared.Interfaces.Model.IRegulator.Initialize
  parent: Shared.Interfaces.Model.IRegulator
  href: Shared.Interfaces.Model.IRegulator.html#Shared_Interfaces_Model_IRegulator_Initialize
  name: Initialize()
  nameWithType: IRegulator.Initialize()
  fullName: Shared.Interfaces.Model.IRegulator.Initialize()
  spec.csharp:
  - uid: Shared.Interfaces.Model.IRegulator.Initialize
    name: Initialize
    href: Shared.Interfaces.Model.IRegulator.html#Shared_Interfaces_Model_IRegulator_Initialize
  - name: (
  - name: )
  spec.vb:
  - uid: Shared.Interfaces.Model.IRegulator.Initialize
    name: Initialize
    href: Shared.Interfaces.Model.IRegulator.html#Shared_Interfaces_Model_IRegulator_Initialize
  - name: (
  - name: )
- uid: Model.Core.Regulator.CanSelectTerritory*
  commentId: Overload:Model.Core.Regulator.CanSelectTerritory
  href: Model.Core.Regulator.html#Model_Core_Regulator_CanSelectTerritory_Shared_Geography_Enums_TerrID_Shared_Geography_Enums_TerrID_
  name: CanSelectTerritory
  nameWithType: Regulator.CanSelectTerritory
  fullName: Model.Core.Regulator.CanSelectTerritory
- uid: Shared.Interfaces.Model.IRegulator.CanSelectTerritory(Shared.Geography.Enums.TerrID,Shared.Geography.Enums.TerrID)
  commentId: M:Shared.Interfaces.Model.IRegulator.CanSelectTerritory(Shared.Geography.Enums.TerrID,Shared.Geography.Enums.TerrID)
  parent: Shared.Interfaces.Model.IRegulator
  href: Shared.Interfaces.Model.IRegulator.html#Shared_Interfaces_Model_IRegulator_CanSelectTerritory_Shared_Geography_Enums_TerrID_Shared_Geography_Enums_TerrID_
  name: CanSelectTerritory(TerrID, TerrID)
  nameWithType: IRegulator.CanSelectTerritory(TerrID, TerrID)
  fullName: Shared.Interfaces.Model.IRegulator.CanSelectTerritory(Shared.Geography.Enums.TerrID, Shared.Geography.Enums.TerrID)
  spec.csharp:
  - uid: Shared.Interfaces.Model.IRegulator.CanSelectTerritory(Shared.Geography.Enums.TerrID,Shared.Geography.Enums.TerrID)
    name: CanSelectTerritory
    href: Shared.Interfaces.Model.IRegulator.html#Shared_Interfaces_Model_IRegulator_CanSelectTerritory_Shared_Geography_Enums_TerrID_Shared_Geography_Enums_TerrID_
  - name: (
  - uid: Shared.Geography.Enums.TerrID
    name: TerrID
    href: Shared.Geography.Enums.TerrID.html
  - name: ','
  - name: " "
  - uid: Shared.Geography.Enums.TerrID
    name: TerrID
    href: Shared.Geography.Enums.TerrID.html
  - name: )
  spec.vb:
  - uid: Shared.Interfaces.Model.IRegulator.CanSelectTerritory(Shared.Geography.Enums.TerrID,Shared.Geography.Enums.TerrID)
    name: CanSelectTerritory
    href: Shared.Interfaces.Model.IRegulator.html#Shared_Interfaces_Model_IRegulator_CanSelectTerritory_Shared_Geography_Enums_TerrID_Shared_Geography_Enums_TerrID_
  - name: (
  - uid: Shared.Geography.Enums.TerrID
    name: TerrID
    href: Shared.Geography.Enums.TerrID.html
  - name: ','
  - name: " "
  - uid: Shared.Geography.Enums.TerrID
    name: TerrID
    href: Shared.Geography.Enums.TerrID.html
  - name: )
- uid: Shared.Geography.Enums.TerrID
  commentId: T:Shared.Geography.Enums.TerrID
  parent: Shared.Geography.Enums
  href: Shared.Geography.Enums.TerrID.html
  name: TerrID
  nameWithType: TerrID
  fullName: Shared.Geography.Enums.TerrID
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Shared.Geography.Enums
  commentId: N:Shared.Geography.Enums
  href: Shared.html
  name: Shared.Geography.Enums
  nameWithType: Shared.Geography.Enums
  fullName: Shared.Geography.Enums
  spec.csharp:
  - uid: Shared
    name: Shared
    href: Shared.html
  - name: .
  - uid: Shared.Geography
    name: Geography
    href: Shared.Geography.html
  - name: .
  - uid: Shared.Geography.Enums
    name: Enums
    href: Shared.Geography.Enums.html
  spec.vb:
  - uid: Shared
    name: Shared
    href: Shared.html
  - name: .
  - uid: Shared.Geography
    name: Geography
    href: Shared.Geography.html
  - name: .
  - uid: Shared.Geography.Enums
    name: Enums
    href: Shared.Geography.Enums.html
- uid: Model.Core.Regulator.SelectTerritory*
  commentId: Overload:Model.Core.Regulator.SelectTerritory
  href: Model.Core.Regulator.html#Model_Core_Regulator_SelectTerritory_Shared_Geography_Enums_TerrID_Shared_Geography_Enums_TerrID_
  name: SelectTerritory
  nameWithType: Regulator.SelectTerritory
  fullName: Model.Core.Regulator.SelectTerritory
- uid: Shared.Interfaces.Model.IRegulator.SelectTerritory(Shared.Geography.Enums.TerrID,Shared.Geography.Enums.TerrID)
  commentId: M:Shared.Interfaces.Model.IRegulator.SelectTerritory(Shared.Geography.Enums.TerrID,Shared.Geography.Enums.TerrID)
  parent: Shared.Interfaces.Model.IRegulator
  href: Shared.Interfaces.Model.IRegulator.html#Shared_Interfaces_Model_IRegulator_SelectTerritory_Shared_Geography_Enums_TerrID_Shared_Geography_Enums_TerrID_
  name: SelectTerritory(TerrID, TerrID)
  nameWithType: IRegulator.SelectTerritory(TerrID, TerrID)
  fullName: Shared.Interfaces.Model.IRegulator.SelectTerritory(Shared.Geography.Enums.TerrID, Shared.Geography.Enums.TerrID)
  spec.csharp:
  - uid: Shared.Interfaces.Model.IRegulator.SelectTerritory(Shared.Geography.Enums.TerrID,Shared.Geography.Enums.TerrID)
    name: SelectTerritory
    href: Shared.Interfaces.Model.IRegulator.html#Shared_Interfaces_Model_IRegulator_SelectTerritory_Shared_Geography_Enums_TerrID_Shared_Geography_Enums_TerrID_
  - name: (
  - uid: Shared.Geography.Enums.TerrID
    name: TerrID
    href: Shared.Geography.Enums.TerrID.html
  - name: ','
  - name: " "
  - uid: Shared.Geography.Enums.TerrID
    name: TerrID
    href: Shared.Geography.Enums.TerrID.html
  - name: )
  spec.vb:
  - uid: Shared.Interfaces.Model.IRegulator.SelectTerritory(Shared.Geography.Enums.TerrID,Shared.Geography.Enums.TerrID)
    name: SelectTerritory
    href: Shared.Interfaces.Model.IRegulator.html#Shared_Interfaces_Model_IRegulator_SelectTerritory_Shared_Geography_Enums_TerrID_Shared_Geography_Enums_TerrID_
  - name: (
  - uid: Shared.Geography.Enums.TerrID
    name: TerrID
    href: Shared.Geography.Enums.TerrID.html
  - name: ','
  - name: " "
  - uid: Shared.Geography.Enums.TerrID
    name: TerrID
    href: Shared.Geography.Enums.TerrID.html
  - name: )
- uid: System.ValueTuple{Shared.Geography.Enums.TerrID,System.Boolean,System.Nullable{System.Int32}}
  commentId: T:System.ValueTuple{Shared.Geography.Enums.TerrID,System.Boolean,System.Nullable{System.Int32}}
  parent: System
  definition: System.ValueTuple`3
  href: Shared.Geography.Enums.TerrID.html
  name: (TerrID Selection, bool RequestInput, int? MaxValue)
  nameWithType: (TerrID Selection, bool RequestInput, int? MaxValue)
  fullName: (Shared.Geography.Enums.TerrID Selection, bool RequestInput, int? MaxValue)
  nameWithType.vb: (Selection As TerrID, RequestInput As Boolean, MaxValue As Integer?)
  fullName.vb: (Selection As Shared.Geography.Enums.TerrID, RequestInput As Boolean, MaxValue As Integer?)
  name.vb: (Selection As TerrID, RequestInput As Boolean, MaxValue As Integer?)
  spec.csharp:
  - name: (
  - uid: Shared.Geography.Enums.TerrID
    name: TerrID
    href: Shared.Geography.Enums.TerrID.html
  - name: " "
  - uid: System.ValueTuple{Shared.Geography.Enums.TerrID,System.Boolean,System.Nullable{System.Int32}}.Selection
    name: Selection
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-shared.geography.enums.terrid,system.boolean,system.nullable-system.int32--.selection
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: " "
  - uid: System.ValueTuple{Shared.Geography.Enums.TerrID,System.Boolean,System.Nullable{System.Int32}}.RequestInput
    name: RequestInput
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-shared.geography.enums.terrid,system.boolean,system.nullable-system.int32--.requestinput
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: " "
  - uid: System.ValueTuple{Shared.Geography.Enums.TerrID,System.Boolean,System.Nullable{System.Int32}}.MaxValue
    name: MaxValue
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-shared.geography.enums.terrid,system.boolean,system.nullable-system.int32--.maxvalue
  - name: )
  spec.vb:
  - name: (
  - uid: System.ValueTuple{Shared.Geography.Enums.TerrID,System.Boolean,System.Nullable{System.Int32}}.Selection
    name: Selection
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-shared.geography.enums.terrid,system.boolean,system.nullable-system.int32--.selection
  - name: " "
  - name: As
  - name: " "
  - uid: Shared.Geography.Enums.TerrID
    name: TerrID
    href: Shared.Geography.Enums.TerrID.html
  - name: ','
  - name: " "
  - uid: System.ValueTuple{Shared.Geography.Enums.TerrID,System.Boolean,System.Nullable{System.Int32}}.RequestInput
    name: RequestInput
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-shared.geography.enums.terrid,system.boolean,system.nullable-system.int32--.requestinput
  - name: " "
  - name: As
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.ValueTuple{Shared.Geography.Enums.TerrID,System.Boolean,System.Nullable{System.Int32}}.MaxValue
    name: MaxValue
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-shared.geography.enums.terrid,system.boolean,system.nullable-system.int32--.maxvalue
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: )
- uid: System.ValueTuple`3
  commentId: T:System.ValueTuple`3
  name: (T1, T2, T3)
  nameWithType: (T1, T2, T3)
  fullName: (T1, T2, T3)
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: )
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: )
- uid: Model.Core.Regulator.ClaimOrReinforce*
  commentId: Overload:Model.Core.Regulator.ClaimOrReinforce
  href: Model.Core.Regulator.html#Model_Core_Regulator_ClaimOrReinforce_Shared_Geography_Enums_TerrID_
  name: ClaimOrReinforce
  nameWithType: Regulator.ClaimOrReinforce
  fullName: Model.Core.Regulator.ClaimOrReinforce
- uid: Shared.Interfaces.Model.IRegulator.ClaimOrReinforce(Shared.Geography.Enums.TerrID)
  commentId: M:Shared.Interfaces.Model.IRegulator.ClaimOrReinforce(Shared.Geography.Enums.TerrID)
  parent: Shared.Interfaces.Model.IRegulator
  href: Shared.Interfaces.Model.IRegulator.html#Shared_Interfaces_Model_IRegulator_ClaimOrReinforce_Shared_Geography_Enums_TerrID_
  name: ClaimOrReinforce(TerrID)
  nameWithType: IRegulator.ClaimOrReinforce(TerrID)
  fullName: Shared.Interfaces.Model.IRegulator.ClaimOrReinforce(Shared.Geography.Enums.TerrID)
  spec.csharp:
  - uid: Shared.Interfaces.Model.IRegulator.ClaimOrReinforce(Shared.Geography.Enums.TerrID)
    name: ClaimOrReinforce
    href: Shared.Interfaces.Model.IRegulator.html#Shared_Interfaces_Model_IRegulator_ClaimOrReinforce_Shared_Geography_Enums_TerrID_
  - name: (
  - uid: Shared.Geography.Enums.TerrID
    name: TerrID
    href: Shared.Geography.Enums.TerrID.html
  - name: )
  spec.vb:
  - uid: Shared.Interfaces.Model.IRegulator.ClaimOrReinforce(Shared.Geography.Enums.TerrID)
    name: ClaimOrReinforce
    href: Shared.Interfaces.Model.IRegulator.html#Shared_Interfaces_Model_IRegulator_ClaimOrReinforce_Shared_Geography_Enums_TerrID_
  - name: (
  - uid: Shared.Geography.Enums.TerrID
    name: TerrID
    href: Shared.Geography.Enums.TerrID.html
  - name: )
- uid: Shared.Enums.GamePhase.Move
  commentId: F:Shared.Enums.GamePhase.Move
  href: Shared.Enums.GamePhase.html#Shared_Enums_GamePhase_Move
  name: Move
  nameWithType: GamePhase.Move
  fullName: Shared.Enums.GamePhase.Move
- uid: Model.Core.Regulator.MoveArmies*
  commentId: Overload:Model.Core.Regulator.MoveArmies
  href: Model.Core.Regulator.html#Model_Core_Regulator_MoveArmies_Shared_Geography_Enums_TerrID_Shared_Geography_Enums_TerrID_System_Int32_
  name: MoveArmies
  nameWithType: Regulator.MoveArmies
  fullName: Model.Core.Regulator.MoveArmies
- uid: Shared.Interfaces.Model.IRegulator.MoveArmies(Shared.Geography.Enums.TerrID,Shared.Geography.Enums.TerrID,System.Int32)
  commentId: M:Shared.Interfaces.Model.IRegulator.MoveArmies(Shared.Geography.Enums.TerrID,Shared.Geography.Enums.TerrID,System.Int32)
  parent: Shared.Interfaces.Model.IRegulator
  isExternal: true
  href: Shared.Interfaces.Model.IRegulator.html#Shared_Interfaces_Model_IRegulator_MoveArmies_Shared_Geography_Enums_TerrID_Shared_Geography_Enums_TerrID_System_Int32_
  name: MoveArmies(TerrID, TerrID, int)
  nameWithType: IRegulator.MoveArmies(TerrID, TerrID, int)
  fullName: Shared.Interfaces.Model.IRegulator.MoveArmies(Shared.Geography.Enums.TerrID, Shared.Geography.Enums.TerrID, int)
  nameWithType.vb: IRegulator.MoveArmies(TerrID, TerrID, Integer)
  fullName.vb: Shared.Interfaces.Model.IRegulator.MoveArmies(Shared.Geography.Enums.TerrID, Shared.Geography.Enums.TerrID, Integer)
  name.vb: MoveArmies(TerrID, TerrID, Integer)
  spec.csharp:
  - uid: Shared.Interfaces.Model.IRegulator.MoveArmies(Shared.Geography.Enums.TerrID,Shared.Geography.Enums.TerrID,System.Int32)
    name: MoveArmies
    href: Shared.Interfaces.Model.IRegulator.html#Shared_Interfaces_Model_IRegulator_MoveArmies_Shared_Geography_Enums_TerrID_Shared_Geography_Enums_TerrID_System_Int32_
  - name: (
  - uid: Shared.Geography.Enums.TerrID
    name: TerrID
    href: Shared.Geography.Enums.TerrID.html
  - name: ','
  - name: " "
  - uid: Shared.Geography.Enums.TerrID
    name: TerrID
    href: Shared.Geography.Enums.TerrID.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Shared.Interfaces.Model.IRegulator.MoveArmies(Shared.Geography.Enums.TerrID,Shared.Geography.Enums.TerrID,System.Int32)
    name: MoveArmies
    href: Shared.Interfaces.Model.IRegulator.html#Shared_Interfaces_Model_IRegulator_MoveArmies_Shared_Geography_Enums_TerrID_Shared_Geography_Enums_TerrID_System_Int32_
  - name: (
  - uid: Shared.Geography.Enums.TerrID
    name: TerrID
    href: Shared.Geography.Enums.TerrID.html
  - name: ','
  - name: " "
  - uid: Shared.Geography.Enums.TerrID
    name: TerrID
    href: Shared.Geography.Enums.TerrID.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Model.Core.Regulator.Battle*
  commentId: Overload:Model.Core.Regulator.Battle
  href: Model.Core.Regulator.html#Model_Core_Regulator_Battle_Shared_Geography_Enums_TerrID_Shared_Geography_Enums_TerrID_System_ValueTuple_System_Int32_System_Int32____
  name: Battle
  nameWithType: Regulator.Battle
  fullName: Model.Core.Regulator.Battle
- uid: Shared.Interfaces.Model.IRegulator.Battle(Shared.Geography.Enums.TerrID,Shared.Geography.Enums.TerrID,System.ValueTuple{System.Int32,System.Int32}[])
  commentId: M:Shared.Interfaces.Model.IRegulator.Battle(Shared.Geography.Enums.TerrID,Shared.Geography.Enums.TerrID,System.ValueTuple{System.Int32,System.Int32}[])
  parent: Shared.Interfaces.Model.IRegulator
  isExternal: true
  href: Shared.Interfaces.Model.IRegulator.html#Shared_Interfaces_Model_IRegulator_Battle_Shared_Geography_Enums_TerrID_Shared_Geography_Enums_TerrID_System_ValueTuple_System_Int32_System_Int32____
  name: Battle(TerrID, TerrID, (int AttackRoll, int DefenseRoll)[])
  nameWithType: IRegulator.Battle(TerrID, TerrID, (int AttackRoll, int DefenseRoll)[])
  fullName: Shared.Interfaces.Model.IRegulator.Battle(Shared.Geography.Enums.TerrID, Shared.Geography.Enums.TerrID, (int AttackRoll, int DefenseRoll)[])
  nameWithType.vb: IRegulator.Battle(TerrID, TerrID, (AttackRoll As Integer, DefenseRoll As Integer)())
  fullName.vb: Shared.Interfaces.Model.IRegulator.Battle(Shared.Geography.Enums.TerrID, Shared.Geography.Enums.TerrID, (AttackRoll As Integer, DefenseRoll As Integer)())
  name.vb: Battle(TerrID, TerrID, (AttackRoll As Integer, DefenseRoll As Integer)())
  spec.csharp:
  - uid: Shared.Interfaces.Model.IRegulator.Battle(Shared.Geography.Enums.TerrID,Shared.Geography.Enums.TerrID,System.ValueTuple{System.Int32,System.Int32}[])
    name: Battle
    href: Shared.Interfaces.Model.IRegulator.html#Shared_Interfaces_Model_IRegulator_Battle_Shared_Geography_Enums_TerrID_Shared_Geography_Enums_TerrID_System_ValueTuple_System_Int32_System_Int32____
  - name: (
  - uid: Shared.Geography.Enums.TerrID
    name: TerrID
    href: Shared.Geography.Enums.TerrID.html
  - name: ','
  - name: " "
  - uid: Shared.Geography.Enums.TerrID
    name: TerrID
    href: Shared.Geography.Enums.TerrID.html
  - name: ','
  - name: " "
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32}.AttackRoll
    name: AttackRoll
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32-.attackroll
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32}.DefenseRoll
    name: DefenseRoll
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32-.defenseroll
  - name: )
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Shared.Interfaces.Model.IRegulator.Battle(Shared.Geography.Enums.TerrID,Shared.Geography.Enums.TerrID,System.ValueTuple{System.Int32,System.Int32}[])
    name: Battle
    href: Shared.Interfaces.Model.IRegulator.html#Shared_Interfaces_Model_IRegulator_Battle_Shared_Geography_Enums_TerrID_Shared_Geography_Enums_TerrID_System_ValueTuple_System_Int32_System_Int32____
  - name: (
  - uid: Shared.Geography.Enums.TerrID
    name: TerrID
    href: Shared.Geography.Enums.TerrID.html
  - name: ','
  - name: " "
  - uid: Shared.Geography.Enums.TerrID
    name: TerrID
    href: Shared.Geography.Enums.TerrID.html
  - name: ','
  - name: " "
  - name: (
  - uid: System.ValueTuple{System.Int32,System.Int32}.AttackRoll
    name: AttackRoll
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32-.attackroll
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32}.DefenseRoll
    name: DefenseRoll
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32-.defenseroll
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  - name: (
  - name: )
  - name: )
- uid: System.ValueTuple{System.Int32,System.Int32}[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: (int AttackRoll, int DefenseRoll)[]
  nameWithType: (int AttackRoll, int DefenseRoll)[]
  fullName: (int AttackRoll, int DefenseRoll)[]
  nameWithType.vb: (AttackRoll As Integer, DefenseRoll As Integer)()
  fullName.vb: (AttackRoll As Integer, DefenseRoll As Integer)()
  name.vb: (AttackRoll As Integer, DefenseRoll As Integer)()
  spec.csharp:
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32}.AttackRoll
    name: AttackRoll
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32-.attackroll
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32}.DefenseRoll
    name: DefenseRoll
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32-.defenseroll
  - name: )
  - name: '['
  - name: ']'
  spec.vb:
  - name: (
  - uid: System.ValueTuple{System.Int32,System.Int32}.AttackRoll
    name: AttackRoll
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32-.attackroll
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32}.DefenseRoll
    name: DefenseRoll
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32-.defenseroll
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  - name: (
  - name: )
- uid: Shared.Interfaces.Model.IPlayer.Hand
  commentId: P:Shared.Interfaces.Model.IPlayer.Hand
  parent: Shared.Interfaces.Model.IPlayer
  href: Shared.Interfaces.Model.IPlayer.html#Shared_Interfaces_Model_IPlayer_Hand
  name: Hand
  nameWithType: IPlayer.Hand
  fullName: Shared.Interfaces.Model.IPlayer.Hand
- uid: Shared.Interfaces.Model.ICardSet
  commentId: T:Shared.Interfaces.Model.ICardSet
  parent: Shared.Interfaces.Model
  href: Shared.Interfaces.Model.ICardSet.html
  name: ICardSet
  nameWithType: ICardSet
  fullName: Shared.Interfaces.Model.ICardSet
- uid: Model.Core.Regulator.CanTradeInCards*
  commentId: Overload:Model.Core.Regulator.CanTradeInCards
  href: Model.Core.Regulator.html#Model_Core_Regulator_CanTradeInCards_System_Int32_System_Int32___
  name: CanTradeInCards
  nameWithType: Regulator.CanTradeInCards
  fullName: Model.Core.Regulator.CanTradeInCards
- uid: Shared.Interfaces.Model.IRegulator.CanTradeInCards(System.Int32,System.Int32[])
  commentId: M:Shared.Interfaces.Model.IRegulator.CanTradeInCards(System.Int32,System.Int32[])
  parent: Shared.Interfaces.Model.IRegulator
  isExternal: true
  href: Shared.Interfaces.Model.IRegulator.html#Shared_Interfaces_Model_IRegulator_CanTradeInCards_System_Int32_System_Int32___
  name: CanTradeInCards(int, int[])
  nameWithType: IRegulator.CanTradeInCards(int, int[])
  fullName: Shared.Interfaces.Model.IRegulator.CanTradeInCards(int, int[])
  nameWithType.vb: IRegulator.CanTradeInCards(Integer, Integer())
  fullName.vb: Shared.Interfaces.Model.IRegulator.CanTradeInCards(Integer, Integer())
  name.vb: CanTradeInCards(Integer, Integer())
  spec.csharp:
  - uid: Shared.Interfaces.Model.IRegulator.CanTradeInCards(System.Int32,System.Int32[])
    name: CanTradeInCards
    href: Shared.Interfaces.Model.IRegulator.html#Shared_Interfaces_Model_IRegulator_CanTradeInCards_System_Int32_System_Int32___
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Shared.Interfaces.Model.IRegulator.CanTradeInCards(System.Int32,System.Int32[])
    name: CanTradeInCards
    href: Shared.Interfaces.Model.IRegulator.html#Shared_Interfaces_Model_IRegulator_CanTradeInCards_System_Int32_System_Int32___
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
  - name: )
- uid: System.Int32[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int[]
  nameWithType: int[]
  fullName: int[]
  nameWithType.vb: Integer()
  fullName.vb: Integer()
  name.vb: Integer()
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
- uid: Shared.Interfaces.Model.IPlayer
  commentId: T:Shared.Interfaces.Model.IPlayer
  parent: Shared.Interfaces.Model
  href: Shared.Interfaces.Model.IPlayer.html
  name: IPlayer
  nameWithType: IPlayer
  fullName: Shared.Interfaces.Model.IPlayer
- uid: Model.Core.Regulator.TradeInCards*
  commentId: Overload:Model.Core.Regulator.TradeInCards
  href: Model.Core.Regulator.html#Model_Core_Regulator_TradeInCards_System_Int32_System_Int32___
  name: TradeInCards
  nameWithType: Regulator.TradeInCards
  fullName: Model.Core.Regulator.TradeInCards
- uid: Shared.Interfaces.Model.IRegulator.TradeInCards(System.Int32,System.Int32[])
  commentId: M:Shared.Interfaces.Model.IRegulator.TradeInCards(System.Int32,System.Int32[])
  parent: Shared.Interfaces.Model.IRegulator
  isExternal: true
  href: Shared.Interfaces.Model.IRegulator.html#Shared_Interfaces_Model_IRegulator_TradeInCards_System_Int32_System_Int32___
  name: TradeInCards(int, int[])
  nameWithType: IRegulator.TradeInCards(int, int[])
  fullName: Shared.Interfaces.Model.IRegulator.TradeInCards(int, int[])
  nameWithType.vb: IRegulator.TradeInCards(Integer, Integer())
  fullName.vb: Shared.Interfaces.Model.IRegulator.TradeInCards(Integer, Integer())
  name.vb: TradeInCards(Integer, Integer())
  spec.csharp:
  - uid: Shared.Interfaces.Model.IRegulator.TradeInCards(System.Int32,System.Int32[])
    name: TradeInCards
    href: Shared.Interfaces.Model.IRegulator.html#Shared_Interfaces_Model_IRegulator_TradeInCards_System_Int32_System_Int32___
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Shared.Interfaces.Model.IRegulator.TradeInCards(System.Int32,System.Int32[])
    name: TradeInCards
    href: Shared.Interfaces.Model.IRegulator.html#Shared_Interfaces_Model_IRegulator_TradeInCards_System_Int32_System_Int32___
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
  - name: )
- uid: Shared.Interfaces.Model.ICard.Target
  commentId: P:Shared.Interfaces.Model.ICard.Target
  parent: Shared.Interfaces.Model.ICard
  href: Shared.Interfaces.Model.ICard.html#Shared_Interfaces_Model_ICard_Target
  name: Target
  nameWithType: ICard.Target
  fullName: Shared.Interfaces.Model.ICard.Target
- uid: Model.Core.Regulator.AwardTradeInBonus*
  commentId: Overload:Model.Core.Regulator.AwardTradeInBonus
  href: Model.Core.Regulator.html#Model_Core_Regulator_AwardTradeInBonus_Shared_Geography_Enums_TerrID_
  name: AwardTradeInBonus
  nameWithType: Regulator.AwardTradeInBonus
  fullName: Model.Core.Regulator.AwardTradeInBonus
- uid: Shared.Interfaces.Model.IRegulator.AwardTradeInBonus(Shared.Geography.Enums.TerrID)
  commentId: M:Shared.Interfaces.Model.IRegulator.AwardTradeInBonus(Shared.Geography.Enums.TerrID)
  parent: Shared.Interfaces.Model.IRegulator
  href: Shared.Interfaces.Model.IRegulator.html#Shared_Interfaces_Model_IRegulator_AwardTradeInBonus_Shared_Geography_Enums_TerrID_
  name: AwardTradeInBonus(TerrID)
  nameWithType: IRegulator.AwardTradeInBonus(TerrID)
  fullName: Shared.Interfaces.Model.IRegulator.AwardTradeInBonus(Shared.Geography.Enums.TerrID)
  spec.csharp:
  - uid: Shared.Interfaces.Model.IRegulator.AwardTradeInBonus(Shared.Geography.Enums.TerrID)
    name: AwardTradeInBonus
    href: Shared.Interfaces.Model.IRegulator.html#Shared_Interfaces_Model_IRegulator_AwardTradeInBonus_Shared_Geography_Enums_TerrID_
  - name: (
  - uid: Shared.Geography.Enums.TerrID
    name: TerrID
    href: Shared.Geography.Enums.TerrID.html
  - name: )
  spec.vb:
  - uid: Shared.Interfaces.Model.IRegulator.AwardTradeInBonus(Shared.Geography.Enums.TerrID)
    name: AwardTradeInBonus
    href: Shared.Interfaces.Model.IRegulator.html#Shared_Interfaces_Model_IRegulator_AwardTradeInBonus_Shared_Geography_Enums_TerrID_
  - name: (
  - uid: Shared.Geography.Enums.TerrID
    name: TerrID
    href: Shared.Geography.Enums.TerrID.html
  - name: )
- uid: Model.Core.Regulator.DeliverCardReward*
  commentId: Overload:Model.Core.Regulator.DeliverCardReward
  href: Model.Core.Regulator.html#Model_Core_Regulator_DeliverCardReward
  name: DeliverCardReward
  nameWithType: Regulator.DeliverCardReward
  fullName: Model.Core.Regulator.DeliverCardReward
- uid: Shared.Interfaces.Model.IRegulator.DeliverCardReward
  commentId: M:Shared.Interfaces.Model.IRegulator.DeliverCardReward
  parent: Shared.Interfaces.Model.IRegulator
  href: Shared.Interfaces.Model.IRegulator.html#Shared_Interfaces_Model_IRegulator_DeliverCardReward
  name: DeliverCardReward()
  nameWithType: IRegulator.DeliverCardReward()
  fullName: Shared.Interfaces.Model.IRegulator.DeliverCardReward()
  spec.csharp:
  - uid: Shared.Interfaces.Model.IRegulator.DeliverCardReward
    name: DeliverCardReward
    href: Shared.Interfaces.Model.IRegulator.html#Shared_Interfaces_Model_IRegulator_DeliverCardReward
  - name: (
  - name: )
  spec.vb:
  - uid: Shared.Interfaces.Model.IRegulator.DeliverCardReward
    name: DeliverCardReward
    href: Shared.Interfaces.Model.IRegulator.html#Shared_Interfaces_Model_IRegulator_DeliverCardReward
  - name: (
  - name: )
- uid: Model.Core.Regulator.GetBinarySerials*
  commentId: Overload:Model.Core.Regulator.GetBinarySerials
  href: Model.Core.Regulator.html#Model_Core_Regulator_GetBinarySerials
  name: GetBinarySerials
  nameWithType: Regulator.GetBinarySerials
  fullName: Model.Core.Regulator.GetBinarySerials
- uid: Shared.Interfaces.Model.IBinarySerializable.GetBinarySerials
  commentId: M:Shared.Interfaces.Model.IBinarySerializable.GetBinarySerials
  parent: Shared.Interfaces.Model.IBinarySerializable
  href: Shared.Interfaces.Model.IBinarySerializable.html#Shared_Interfaces_Model_IBinarySerializable_GetBinarySerials
  name: GetBinarySerials()
  nameWithType: IBinarySerializable.GetBinarySerials()
  fullName: Shared.Interfaces.Model.IBinarySerializable.GetBinarySerials()
  spec.csharp:
  - uid: Shared.Interfaces.Model.IBinarySerializable.GetBinarySerials
    name: GetBinarySerials
    href: Shared.Interfaces.Model.IBinarySerializable.html#Shared_Interfaces_Model_IBinarySerializable_GetBinarySerials
  - name: (
  - name: )
  spec.vb:
  - uid: Shared.Interfaces.Model.IBinarySerializable.GetBinarySerials
    name: GetBinarySerials
    href: Shared.Interfaces.Model.IBinarySerializable.html#Shared_Interfaces_Model_IBinarySerializable_GetBinarySerials
  - name: (
  - name: )
- uid: System.Threading.Tasks.Task{Shared.Services.Serializer.SerializedData[]}
  commentId: T:System.Threading.Tasks.Task{Shared.Services.Serializer.SerializedData[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<SerializedData[]>
  nameWithType: Task<SerializedData[]>
  fullName: System.Threading.Tasks.Task<Shared.Services.Serializer.SerializedData[]>
  nameWithType.vb: Task(Of SerializedData())
  fullName.vb: System.Threading.Tasks.Task(Of Shared.Services.Serializer.SerializedData())
  name.vb: Task(Of SerializedData())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Shared.Services.Serializer.SerializedData
    name: SerializedData
    href: Shared.Services.Serializer.SerializedData.html
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Shared.Services.Serializer.SerializedData
    name: SerializedData
    href: Shared.Services.Serializer.SerializedData.html
  - name: (
  - name: )
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: System.IO.BinaryReader.BaseStream
  commentId: P:System.IO.BinaryReader.BaseStream
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.binaryreader.basestream
  name: BaseStream
  nameWithType: BinaryReader.BaseStream
  fullName: System.IO.BinaryReader.BaseStream
- uid: Shared.Services.Serializer.BinarySerializer
  commentId: T:Shared.Services.Serializer.BinarySerializer
  href: Shared.Services.Serializer.BinarySerializer.html
  name: BinarySerializer
  nameWithType: BinarySerializer
  fullName: Shared.Services.Serializer.BinarySerializer
- uid: Model.Core.Regulator.LoadFromBinary*
  commentId: Overload:Model.Core.Regulator.LoadFromBinary
  href: Model.Core.Regulator.html#Model_Core_Regulator_LoadFromBinary_System_IO_BinaryReader_
  name: LoadFromBinary
  nameWithType: Regulator.LoadFromBinary
  fullName: Model.Core.Regulator.LoadFromBinary
- uid: Shared.Interfaces.Model.IBinarySerializable.LoadFromBinary(System.IO.BinaryReader)
  commentId: M:Shared.Interfaces.Model.IBinarySerializable.LoadFromBinary(System.IO.BinaryReader)
  parent: Shared.Interfaces.Model.IBinarySerializable
  isExternal: true
  href: Shared.Interfaces.Model.IBinarySerializable.html#Shared_Interfaces_Model_IBinarySerializable_LoadFromBinary_System_IO_BinaryReader_
  name: LoadFromBinary(BinaryReader)
  nameWithType: IBinarySerializable.LoadFromBinary(BinaryReader)
  fullName: Shared.Interfaces.Model.IBinarySerializable.LoadFromBinary(System.IO.BinaryReader)
  spec.csharp:
  - uid: Shared.Interfaces.Model.IBinarySerializable.LoadFromBinary(System.IO.BinaryReader)
    name: LoadFromBinary
    href: Shared.Interfaces.Model.IBinarySerializable.html#Shared_Interfaces_Model_IBinarySerializable_LoadFromBinary_System_IO_BinaryReader_
  - name: (
  - uid: System.IO.BinaryReader
    name: BinaryReader
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.binaryreader
  - name: )
  spec.vb:
  - uid: Shared.Interfaces.Model.IBinarySerializable.LoadFromBinary(System.IO.BinaryReader)
    name: LoadFromBinary
    href: Shared.Interfaces.Model.IBinarySerializable.html#Shared_Interfaces_Model_IBinarySerializable_LoadFromBinary_System_IO_BinaryReader_
  - name: (
  - uid: System.IO.BinaryReader
    name: BinaryReader
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.binaryreader
  - name: )
- uid: System.IO.BinaryReader
  commentId: T:System.IO.BinaryReader
  parent: System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.binaryreader
  name: BinaryReader
  nameWithType: BinaryReader
  fullName: System.IO.BinaryReader
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
