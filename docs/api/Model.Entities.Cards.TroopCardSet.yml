### YamlMime:ManagedReference
items:
- uid: Model.Entities.Cards.TroopCardSet
  commentId: T:Model.Entities.Cards.TroopCardSet
  id: TroopCardSet
  parent: Model.Entities.Cards
  children:
  - Model.Entities.Cards.TroopCardSet.Cards
  - Model.Entities.Cards.TroopCardSet.FindTradeSets(Shared.Interfaces.Model.ICard[])
  - Model.Entities.Cards.TroopCardSet.ForcesTrade
  - Model.Entities.Cards.TroopCardSet.IsValidTrade(Shared.Interfaces.Model.ICard[])
  - Model.Entities.Cards.TroopCardSet.JData
  - Model.Entities.Cards.TroopCardSet.MemberTypeName
  - Model.Entities.Cards.TroopCardSet.TypeName
  langs:
  - csharp
  - vb
  name: TroopCardSet
  nameWithType: TroopCardSet
  fullName: Model.Entities.Cards.TroopCardSet
  type: Class
  source:
    remote:
      path: Model/Entities/Cards/TroopCardSet.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: TroopCardSet
    path: ../Model/Entities/Cards/TroopCardSet.cs
    startLine: 7
  assemblies:
  - Model
  namespace: Model.Entities.Cards
  summary: The card set for the game's default card type, <xref href="Model.Entities.Cards.TroopCard" data-throw-if-not-resolved="false"></xref>.
  remarks: >-
    <xref href="Shared.Interfaces.Model.ICardSet" data-throw-if-not-resolved="false"></xref> is initialized in two steps: <br />

    (1) By <xref href="Model.DataAccess.Cards.ICardSetDataJConverter" data-throw-if-not-resolved="false"></xref>. See also <xref href="Shared.Interfaces.Model.ICardSetData" data-throw-if-not-resolved="false"></xref> and <xref href="Shared.Interfaces.Model.IDataProvider" data-throw-if-not-resolved="false"></xref>.

    (2) By <xref href="Model.DataAccess.AssetFactory.BuildTroopCards(Shared.Interfaces.Model.ICardSet)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: 'public class TroopCardSet : ICardSet'
    content.vb: Public Class TroopCardSet Implements ICardSet
  inheritance:
  - System.Object
  implements:
  - Shared.Interfaces.Model.ICardSet
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Model.Entities.Cards.TroopCardSet.TypeName
  commentId: P:Model.Entities.Cards.TroopCardSet.TypeName
  id: TypeName
  parent: Model.Entities.Cards.TroopCardSet
  langs:
  - csharp
  - vb
  name: TypeName
  nameWithType: TroopCardSet.TypeName
  fullName: Model.Entities.Cards.TroopCardSet.TypeName
  type: Property
  source:
    remote:
      path: Model/Entities/Cards/TroopCardSet.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: TypeName
    path: ../Model/Entities/Cards/TroopCardSet.cs
    startLine: 10
  assemblies:
  - Model
  namespace: Model.Entities.Cards
  summary: Gets the name of this card set's type.
  remarks: 'A cached value to help avoid multiple reflection method calls (e.g.: .GetType()).'
  example: []
  syntax:
    content: public string TypeName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property TypeName As String
  overload: Model.Entities.Cards.TroopCardSet.TypeName*
  implements:
  - Shared.Interfaces.Model.ICardSet.TypeName
- uid: Model.Entities.Cards.TroopCardSet.JData
  commentId: P:Model.Entities.Cards.TroopCardSet.JData
  id: JData
  parent: Model.Entities.Cards.TroopCardSet
  langs:
  - csharp
  - vb
  name: JData
  nameWithType: TroopCardSet.JData
  fullName: Model.Entities.Cards.TroopCardSet.JData
  type: Property
  source:
    remote:
      path: Model/Entities/Cards/TroopCardSet.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: JData
    path: ../Model/Entities/Cards/TroopCardSet.cs
    startLine: 12
  assemblies:
  - Model
  namespace: Model.Entities.Cards
  summary: Gets the '.json' data object for this card set.
  remarks: This is provided by the DAL in new games, but will remain <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> when loading from a save file.
  example: []
  syntax:
    content: public ITroopCardSetData? JData { get; set; }
    parameters: []
    return:
      type: Model.Entities.Cards.ITroopCardSetData
      description: A card set if it has been loaded by the DAL; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
    content.vb: Public Property JData As ITroopCardSetData
  overload: Model.Entities.Cards.TroopCardSet.JData*
- uid: Model.Entities.Cards.TroopCardSet.MemberTypeName
  commentId: P:Model.Entities.Cards.TroopCardSet.MemberTypeName
  id: MemberTypeName
  parent: Model.Entities.Cards.TroopCardSet
  langs:
  - csharp
  - vb
  name: MemberTypeName
  nameWithType: TroopCardSet.MemberTypeName
  fullName: Model.Entities.Cards.TroopCardSet.MemberTypeName
  type: Property
  source:
    remote:
      path: Model/Entities/Cards/TroopCardSet.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: MemberTypeName
    path: ../Model/Entities/Cards/TroopCardSet.cs
    startLine: 15
  assemblies:
  - Model
  namespace: Model.Entities.Cards
  summary: >-
    Gets the name of the type which is the intended member of this collection.

    <br /> E.g. "TroopCard", see <xref href="Model.Entities.Cards.TroopCard" data-throw-if-not-resolved="false"></xref>.
  remarks: Relationships between <xref href="Shared.Interfaces.Model.ICard" data-throw-if-not-resolved="false"></xref>s, <xref href="Shared.Interfaces.Model.ICardSet" data-throw-if-not-resolved="false"></xref>, and <xref href="Shared.Interfaces.Model.ICardSetData" data-throw-if-not-resolved="false"></xref> are established by <xref href="Shared.Services.Registry.ITypeRegister%601" data-throw-if-not-resolved="false"></xref>, which gets initial values from <xref href="Shared.Services.Registry.RegistryInitializer" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public string MemberTypeName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property MemberTypeName As String
  overload: Model.Entities.Cards.TroopCardSet.MemberTypeName*
  implements:
  - Shared.Interfaces.Model.ICardSet.MemberTypeName
- uid: Model.Entities.Cards.TroopCardSet.Cards
  commentId: P:Model.Entities.Cards.TroopCardSet.Cards
  id: Cards
  parent: Model.Entities.Cards.TroopCardSet
  langs:
  - csharp
  - vb
  name: Cards
  nameWithType: TroopCardSet.Cards
  fullName: Model.Entities.Cards.TroopCardSet.Cards
  type: Property
  source:
    remote:
      path: Model/Entities/Cards/TroopCardSet.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: Cards
    path: ../Model/Entities/Cards/TroopCardSet.cs
    startLine: 17
  assemblies:
  - Model
  namespace: Model.Entities.Cards
  summary: Gets or sets a list of cards in this card set.
  example: []
  syntax:
    content: public List<ICard> Cards { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Shared.Interfaces.Model.ICard}
    content.vb: Public Property Cards As List(Of ICard)
  overload: Model.Entities.Cards.TroopCardSet.Cards*
  implements:
  - Shared.Interfaces.Model.ICardSet.Cards
- uid: Model.Entities.Cards.TroopCardSet.ForcesTrade
  commentId: P:Model.Entities.Cards.TroopCardSet.ForcesTrade
  id: ForcesTrade
  parent: Model.Entities.Cards.TroopCardSet
  langs:
  - csharp
  - vb
  name: ForcesTrade
  nameWithType: TroopCardSet.ForcesTrade
  fullName: Model.Entities.Cards.TroopCardSet.ForcesTrade
  type: Property
  source:
    remote:
      path: Model/Entities/Cards/TroopCardSet.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: ForcesTrade
    path: ../Model/Entities/Cards/TroopCardSet.cs
    startLine: 19
  assemblies:
  - Model
  namespace: Model.Entities.Cards
  summary: Gets a flag indicating if a trade should be forced when a matching set of <xref href="Shared.Interfaces.Model.ICard" data-throw-if-not-resolved="false"></xref>s from this set are obtained.
  example: []
  syntax:
    content: public bool ForcesTrade { get; }
    parameters: []
    return:
      type: System.Boolean
      description: >-
        <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if obtaining matching cards (satisfying <xref href="Shared.Interfaces.Model.ICardSet.IsValidTrade(Shared.Interfaces.Model.ICard%5b%5d)" data-throw-if-not-resolved="false"></xref>) should force an <xref href="Shared.Interfaces.Model.IPlayer" data-throw-if-not-resolved="false"></xref> to trade (via <xref href="Shared.Interfaces.Model.IRegulator.TradeInCards(System.Int32%2cSystem.Int32%5b%5d)" data-throw-if-not-resolved="false"></xref>).

        <br /> Otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public ReadOnly Property ForcesTrade As Boolean
  overload: Model.Entities.Cards.TroopCardSet.ForcesTrade*
  implements:
  - Shared.Interfaces.Model.ICardSet.ForcesTrade
- uid: Model.Entities.Cards.TroopCardSet.FindTradeSets(Shared.Interfaces.Model.ICard[])
  commentId: M:Model.Entities.Cards.TroopCardSet.FindTradeSets(Shared.Interfaces.Model.ICard[])
  id: FindTradeSets(Shared.Interfaces.Model.ICard[])
  parent: Model.Entities.Cards.TroopCardSet
  langs:
  - csharp
  - vb
  name: FindTradeSets(ICard[])
  nameWithType: TroopCardSet.FindTradeSets(ICard[])
  fullName: Model.Entities.Cards.TroopCardSet.FindTradeSets(Shared.Interfaces.Model.ICard[])
  type: Method
  source:
    remote:
      path: Model/Entities/Cards/TroopCardSet.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: FindTradeSets
    path: ../Model/Entities/Cards/TroopCardSet.cs
    startLine: 26
  assemblies:
  - Model
  namespace: Model.Entities.Cards
  summary: Identifies any number of matching trade sets present in any <xref href="Shared.Interfaces.Model.ICard" data-throw-if-not-resolved="false"></xref>s.
  remarks: >-
    This method solves the 'combination generation' problem; the included solution is brute-force and should be replaced with standard <br />

    optimal solutions if 'n' (number of cards) or 'k' (number in a match) gets large.
  example: []
  syntax:
    content: public ICard[][]? FindTradeSets(ICard[] cards)
    parameters:
    - id: cards
      type: Shared.Interfaces.Model.ICard[]
      description: An array of cards in which to search for matching trade-sets.
    return:
      type: Shared.Interfaces.Model.ICard[][]
      description: A staggered array of cards containing each valid trade-set found within <code class="paramref">cards</code>.
    content.vb: Public Function FindTradeSets(cards As ICard()) As ICard()()
  overload: Model.Entities.Cards.TroopCardSet.FindTradeSets*
  implements:
  - Shared.Interfaces.Model.ICardSet.FindTradeSets(Shared.Interfaces.Model.ICard[])
  nameWithType.vb: TroopCardSet.FindTradeSets(ICard())
  fullName.vb: Model.Entities.Cards.TroopCardSet.FindTradeSets(Shared.Interfaces.Model.ICard())
  name.vb: FindTradeSets(ICard())
- uid: Model.Entities.Cards.TroopCardSet.IsValidTrade(Shared.Interfaces.Model.ICard[])
  commentId: M:Model.Entities.Cards.TroopCardSet.IsValidTrade(Shared.Interfaces.Model.ICard[])
  id: IsValidTrade(Shared.Interfaces.Model.ICard[])
  parent: Model.Entities.Cards.TroopCardSet
  langs:
  - csharp
  - vb
  name: IsValidTrade(ICard[])
  nameWithType: TroopCardSet.IsValidTrade(ICard[])
  fullName: Model.Entities.Cards.TroopCardSet.IsValidTrade(Shared.Interfaces.Model.ICard[])
  type: Method
  source:
    remote:
      path: Model/Entities/Cards/TroopCardSet.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: IsValidTrade
    path: ../Model/Entities/Cards/TroopCardSet.cs
    startLine: 59
  assemblies:
  - Model
  namespace: Model.Entities.Cards
  summary: Determines whether a group of cards is a valid set for trade-in.
  remarks: >-
    <xref href="Model.Entities.Cards.TroopCard" data-throw-if-not-resolved="false"></xref>, as the default card set, stipulates a matching set of <xref href="Shared.Interfaces.Model.ICard" data-throw-if-not-resolved="false"></xref>: <br />

    (1) contains three cards <br />

    (2) contains only tradeble cards (see <xref href="Shared.Interfaces.Model.ICard.IsTradeable" data-throw-if-not-resolved="false"></xref>) <br />

    (3) contains <xref href="Model.Entities.Cards.TroopCard" data-throw-if-not-resolved="false"></xref>s with all identical OR all different <xref href="Model.Entities.Cards.TroopInsignia" data-throw-if-not-resolved="false"></xref> (after wilds).
  example: []
  syntax:
    content: public bool IsValidTrade(ICard[] cards)
    parameters:
    - id: cards
      type: Shared.Interfaces.Model.ICard[]
      description: An array of cards to test.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the collection <code class="paramref">cards</code> qualifies exactly as a valid trade-set. Otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Function IsValidTrade(cards As ICard()) As Boolean
  overload: Model.Entities.Cards.TroopCardSet.IsValidTrade*
  implements:
  - Shared.Interfaces.Model.ICardSet.IsValidTrade(Shared.Interfaces.Model.ICard[])
  nameWithType.vb: TroopCardSet.IsValidTrade(ICard())
  fullName.vb: Model.Entities.Cards.TroopCardSet.IsValidTrade(Shared.Interfaces.Model.ICard())
  name.vb: IsValidTrade(ICard())
references:
- uid: Model.Entities.Cards.TroopCard
  commentId: T:Model.Entities.Cards.TroopCard
  href: Model.Entities.Cards.TroopCard.html
  name: TroopCard
  nameWithType: TroopCard
  fullName: Model.Entities.Cards.TroopCard
- uid: Shared.Interfaces.Model.ICardSet
  commentId: T:Shared.Interfaces.Model.ICardSet
  parent: Shared.Interfaces.Model
  href: Shared.Interfaces.Model.ICardSet.html
  name: ICardSet
  nameWithType: ICardSet
  fullName: Shared.Interfaces.Model.ICardSet
- uid: Model.DataAccess.Cards.ICardSetDataJConverter
  commentId: T:Model.DataAccess.Cards.ICardSetDataJConverter
  parent: Model.DataAccess.Cards
  href: Model.DataAccess.Cards.ICardSetDataJConverter.html
  name: ICardSetDataJConverter
  nameWithType: ICardSetDataJConverter
  fullName: Model.DataAccess.Cards.ICardSetDataJConverter
- uid: Shared.Interfaces.Model.ICardSetData
  commentId: T:Shared.Interfaces.Model.ICardSetData
  parent: Shared.Interfaces.Model
  href: Shared.Interfaces.Model.ICardSetData.html
  name: ICardSetData
  nameWithType: ICardSetData
  fullName: Shared.Interfaces.Model.ICardSetData
- uid: Shared.Interfaces.Model.IDataProvider
  commentId: T:Shared.Interfaces.Model.IDataProvider
  parent: Shared.Interfaces.Model
  href: Shared.Interfaces.Model.IDataProvider.html
  name: IDataProvider
  nameWithType: IDataProvider
  fullName: Shared.Interfaces.Model.IDataProvider
- uid: Model.DataAccess.AssetFactory.BuildTroopCards(Shared.Interfaces.Model.ICardSet)
  commentId: M:Model.DataAccess.AssetFactory.BuildTroopCards(Shared.Interfaces.Model.ICardSet)
  href: Model.DataAccess.AssetFactory.html#Model_DataAccess_AssetFactory_BuildTroopCards_Shared_Interfaces_Model_ICardSet_
  name: BuildTroopCards(ICardSet)
  nameWithType: AssetFactory.BuildTroopCards(ICardSet)
  fullName: Model.DataAccess.AssetFactory.BuildTroopCards(Shared.Interfaces.Model.ICardSet)
  spec.csharp:
  - uid: Model.DataAccess.AssetFactory.BuildTroopCards(Shared.Interfaces.Model.ICardSet)
    name: BuildTroopCards
    href: Model.DataAccess.AssetFactory.html#Model_DataAccess_AssetFactory_BuildTroopCards_Shared_Interfaces_Model_ICardSet_
  - name: (
  - uid: Shared.Interfaces.Model.ICardSet
    name: ICardSet
    href: Shared.Interfaces.Model.ICardSet.html
  - name: )
  spec.vb:
  - uid: Model.DataAccess.AssetFactory.BuildTroopCards(Shared.Interfaces.Model.ICardSet)
    name: BuildTroopCards
    href: Model.DataAccess.AssetFactory.html#Model_DataAccess_AssetFactory_BuildTroopCards_Shared_Interfaces_Model_ICardSet_
  - name: (
  - uid: Shared.Interfaces.Model.ICardSet
    name: ICardSet
    href: Shared.Interfaces.Model.ICardSet.html
  - name: )
- uid: Model.Entities.Cards
  commentId: N:Model.Entities.Cards
  href: Model.html
  name: Model.Entities.Cards
  nameWithType: Model.Entities.Cards
  fullName: Model.Entities.Cards
  spec.csharp:
  - uid: Model
    name: Model
    href: Model.html
  - name: .
  - uid: Model.Entities
    name: Entities
    href: Model.Entities.html
  - name: .
  - uid: Model.Entities.Cards
    name: Cards
    href: Model.Entities.Cards.html
  spec.vb:
  - uid: Model
    name: Model
    href: Model.html
  - name: .
  - uid: Model.Entities
    name: Entities
    href: Model.Entities.html
  - name: .
  - uid: Model.Entities.Cards
    name: Cards
    href: Model.Entities.Cards.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Shared.Interfaces.Model
  commentId: N:Shared.Interfaces.Model
  href: Shared.html
  name: Shared.Interfaces.Model
  nameWithType: Shared.Interfaces.Model
  fullName: Shared.Interfaces.Model
  spec.csharp:
  - uid: Shared
    name: Shared
    href: Shared.html
  - name: .
  - uid: Shared.Interfaces
    name: Interfaces
    href: Shared.Interfaces.html
  - name: .
  - uid: Shared.Interfaces.Model
    name: Model
    href: Shared.Interfaces.Model.html
  spec.vb:
  - uid: Shared
    name: Shared
    href: Shared.html
  - name: .
  - uid: Shared.Interfaces
    name: Interfaces
    href: Shared.Interfaces.html
  - name: .
  - uid: Shared.Interfaces.Model
    name: Model
    href: Shared.Interfaces.Model.html
- uid: Model.DataAccess.Cards
  commentId: N:Model.DataAccess.Cards
  href: Model.html
  name: Model.DataAccess.Cards
  nameWithType: Model.DataAccess.Cards
  fullName: Model.DataAccess.Cards
  spec.csharp:
  - uid: Model
    name: Model
    href: Model.html
  - name: .
  - uid: Model.DataAccess
    name: DataAccess
    href: Model.DataAccess.html
  - name: .
  - uid: Model.DataAccess.Cards
    name: Cards
    href: Model.DataAccess.Cards.html
  spec.vb:
  - uid: Model
    name: Model
    href: Model.html
  - name: .
  - uid: Model.DataAccess
    name: DataAccess
    href: Model.DataAccess.html
  - name: .
  - uid: Model.DataAccess.Cards
    name: Cards
    href: Model.DataAccess.Cards.html
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Model.Entities.Cards.TroopCardSet.TypeName*
  commentId: Overload:Model.Entities.Cards.TroopCardSet.TypeName
  href: Model.Entities.Cards.TroopCardSet.html#Model_Entities_Cards_TroopCardSet_TypeName
  name: TypeName
  nameWithType: TroopCardSet.TypeName
  fullName: Model.Entities.Cards.TroopCardSet.TypeName
- uid: Shared.Interfaces.Model.ICardSet.TypeName
  commentId: P:Shared.Interfaces.Model.ICardSet.TypeName
  parent: Shared.Interfaces.Model.ICardSet
  href: Shared.Interfaces.Model.ICardSet.html#Shared_Interfaces_Model_ICardSet_TypeName
  name: TypeName
  nameWithType: ICardSet.TypeName
  fullName: Shared.Interfaces.Model.ICardSet.TypeName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Model.Entities.Cards.TroopCardSet.JData*
  commentId: Overload:Model.Entities.Cards.TroopCardSet.JData
  href: Model.Entities.Cards.TroopCardSet.html#Model_Entities_Cards_TroopCardSet_JData
  name: JData
  nameWithType: TroopCardSet.JData
  fullName: Model.Entities.Cards.TroopCardSet.JData
- uid: Model.Entities.Cards.ITroopCardSetData
  commentId: T:Model.Entities.Cards.ITroopCardSetData
  parent: Model.Entities.Cards
  href: Model.Entities.Cards.ITroopCardSetData.html
  name: ITroopCardSetData
  nameWithType: ITroopCardSetData
  fullName: Model.Entities.Cards.ITroopCardSetData
- uid: Shared.Interfaces.Model.ICard
  commentId: T:Shared.Interfaces.Model.ICard
  parent: Shared.Interfaces.Model
  href: Shared.Interfaces.Model.ICard.html
  name: ICard
  nameWithType: ICard
  fullName: Shared.Interfaces.Model.ICard
- uid: Shared.Services.Registry.ITypeRegister`1
  commentId: T:Shared.Services.Registry.ITypeRegister`1
  href: Shared.Services.Registry.ITypeRegister-1.html
  name: ITypeRegister<T>
  nameWithType: ITypeRegister<T>
  fullName: Shared.Services.Registry.ITypeRegister<T>
  nameWithType.vb: ITypeRegister(Of T)
  fullName.vb: Shared.Services.Registry.ITypeRegister(Of T)
  name.vb: ITypeRegister(Of T)
  spec.csharp:
  - uid: Shared.Services.Registry.ITypeRegister`1
    name: ITypeRegister
    href: Shared.Services.Registry.ITypeRegister-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Shared.Services.Registry.ITypeRegister`1
    name: ITypeRegister
    href: Shared.Services.Registry.ITypeRegister-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Shared.Services.Registry.RegistryInitializer
  commentId: T:Shared.Services.Registry.RegistryInitializer
  href: Shared.Services.Registry.RegistryInitializer.html
  name: RegistryInitializer
  nameWithType: RegistryInitializer
  fullName: Shared.Services.Registry.RegistryInitializer
- uid: Model.Entities.Cards.TroopCardSet.MemberTypeName*
  commentId: Overload:Model.Entities.Cards.TroopCardSet.MemberTypeName
  href: Model.Entities.Cards.TroopCardSet.html#Model_Entities_Cards_TroopCardSet_MemberTypeName
  name: MemberTypeName
  nameWithType: TroopCardSet.MemberTypeName
  fullName: Model.Entities.Cards.TroopCardSet.MemberTypeName
- uid: Shared.Interfaces.Model.ICardSet.MemberTypeName
  commentId: P:Shared.Interfaces.Model.ICardSet.MemberTypeName
  parent: Shared.Interfaces.Model.ICardSet
  href: Shared.Interfaces.Model.ICardSet.html#Shared_Interfaces_Model_ICardSet_MemberTypeName
  name: MemberTypeName
  nameWithType: ICardSet.MemberTypeName
  fullName: Shared.Interfaces.Model.ICardSet.MemberTypeName
- uid: Model.Entities.Cards.TroopCardSet.Cards*
  commentId: Overload:Model.Entities.Cards.TroopCardSet.Cards
  href: Model.Entities.Cards.TroopCardSet.html#Model_Entities_Cards_TroopCardSet_Cards
  name: Cards
  nameWithType: TroopCardSet.Cards
  fullName: Model.Entities.Cards.TroopCardSet.Cards
- uid: Shared.Interfaces.Model.ICardSet.Cards
  commentId: P:Shared.Interfaces.Model.ICardSet.Cards
  parent: Shared.Interfaces.Model.ICardSet
  href: Shared.Interfaces.Model.ICardSet.html#Shared_Interfaces_Model_ICardSet_Cards
  name: Cards
  nameWithType: ICardSet.Cards
  fullName: Shared.Interfaces.Model.ICardSet.Cards
- uid: System.Collections.Generic.List{Shared.Interfaces.Model.ICard}
  commentId: T:System.Collections.Generic.List{Shared.Interfaces.Model.ICard}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<ICard>
  nameWithType: List<ICard>
  fullName: System.Collections.Generic.List<Shared.Interfaces.Model.ICard>
  nameWithType.vb: List(Of ICard)
  fullName.vb: System.Collections.Generic.List(Of Shared.Interfaces.Model.ICard)
  name.vb: List(Of ICard)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Shared.Interfaces.Model.ICard
    name: ICard
    href: Shared.Interfaces.Model.ICard.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Shared.Interfaces.Model.ICard
    name: ICard
    href: Shared.Interfaces.Model.ICard.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Shared.Interfaces.Model.ICardSet.IsValidTrade(Shared.Interfaces.Model.ICard[])
  commentId: M:Shared.Interfaces.Model.ICardSet.IsValidTrade(Shared.Interfaces.Model.ICard[])
  parent: Shared.Interfaces.Model.ICardSet
  href: Shared.Interfaces.Model.ICardSet.html#Shared_Interfaces_Model_ICardSet_IsValidTrade_Shared_Interfaces_Model_ICard___
  name: IsValidTrade(ICard[])
  nameWithType: ICardSet.IsValidTrade(ICard[])
  fullName: Shared.Interfaces.Model.ICardSet.IsValidTrade(Shared.Interfaces.Model.ICard[])
  nameWithType.vb: ICardSet.IsValidTrade(ICard())
  fullName.vb: Shared.Interfaces.Model.ICardSet.IsValidTrade(Shared.Interfaces.Model.ICard())
  name.vb: IsValidTrade(ICard())
  spec.csharp:
  - uid: Shared.Interfaces.Model.ICardSet.IsValidTrade(Shared.Interfaces.Model.ICard[])
    name: IsValidTrade
    href: Shared.Interfaces.Model.ICardSet.html#Shared_Interfaces_Model_ICardSet_IsValidTrade_Shared_Interfaces_Model_ICard___
  - name: (
  - uid: Shared.Interfaces.Model.ICard
    name: ICard
    href: Shared.Interfaces.Model.ICard.html
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Shared.Interfaces.Model.ICardSet.IsValidTrade(Shared.Interfaces.Model.ICard[])
    name: IsValidTrade
    href: Shared.Interfaces.Model.ICardSet.html#Shared_Interfaces_Model_ICardSet_IsValidTrade_Shared_Interfaces_Model_ICard___
  - name: (
  - uid: Shared.Interfaces.Model.ICard
    name: ICard
    href: Shared.Interfaces.Model.ICard.html
  - name: (
  - name: )
  - name: )
- uid: Shared.Interfaces.Model.IPlayer
  commentId: T:Shared.Interfaces.Model.IPlayer
  parent: Shared.Interfaces.Model
  href: Shared.Interfaces.Model.IPlayer.html
  name: IPlayer
  nameWithType: IPlayer
  fullName: Shared.Interfaces.Model.IPlayer
- uid: Shared.Interfaces.Model.IRegulator.TradeInCards(System.Int32,System.Int32[])
  commentId: M:Shared.Interfaces.Model.IRegulator.TradeInCards(System.Int32,System.Int32[])
  parent: Shared.Interfaces.Model.IRegulator
  isExternal: true
  href: Shared.Interfaces.Model.IRegulator.html#Shared_Interfaces_Model_IRegulator_TradeInCards_System_Int32_System_Int32___
  name: TradeInCards(int, int[])
  nameWithType: IRegulator.TradeInCards(int, int[])
  fullName: Shared.Interfaces.Model.IRegulator.TradeInCards(int, int[])
  nameWithType.vb: IRegulator.TradeInCards(Integer, Integer())
  fullName.vb: Shared.Interfaces.Model.IRegulator.TradeInCards(Integer, Integer())
  name.vb: TradeInCards(Integer, Integer())
  spec.csharp:
  - uid: Shared.Interfaces.Model.IRegulator.TradeInCards(System.Int32,System.Int32[])
    name: TradeInCards
    href: Shared.Interfaces.Model.IRegulator.html#Shared_Interfaces_Model_IRegulator_TradeInCards_System_Int32_System_Int32___
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Shared.Interfaces.Model.IRegulator.TradeInCards(System.Int32,System.Int32[])
    name: TradeInCards
    href: Shared.Interfaces.Model.IRegulator.html#Shared_Interfaces_Model_IRegulator_TradeInCards_System_Int32_System_Int32___
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
  - name: )
- uid: Model.Entities.Cards.TroopCardSet.ForcesTrade*
  commentId: Overload:Model.Entities.Cards.TroopCardSet.ForcesTrade
  href: Model.Entities.Cards.TroopCardSet.html#Model_Entities_Cards_TroopCardSet_ForcesTrade
  name: ForcesTrade
  nameWithType: TroopCardSet.ForcesTrade
  fullName: Model.Entities.Cards.TroopCardSet.ForcesTrade
- uid: Shared.Interfaces.Model.ICardSet.ForcesTrade
  commentId: P:Shared.Interfaces.Model.ICardSet.ForcesTrade
  parent: Shared.Interfaces.Model.ICardSet
  href: Shared.Interfaces.Model.ICardSet.html#Shared_Interfaces_Model_ICardSet_ForcesTrade
  name: ForcesTrade
  nameWithType: ICardSet.ForcesTrade
  fullName: Shared.Interfaces.Model.ICardSet.ForcesTrade
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Shared.Interfaces.Model.IRegulator
  commentId: T:Shared.Interfaces.Model.IRegulator
  parent: Shared.Interfaces.Model
  href: Shared.Interfaces.Model.IRegulator.html
  name: IRegulator
  nameWithType: IRegulator
  fullName: Shared.Interfaces.Model.IRegulator
- uid: Model.Entities.Cards.TroopCardSet.FindTradeSets*
  commentId: Overload:Model.Entities.Cards.TroopCardSet.FindTradeSets
  href: Model.Entities.Cards.TroopCardSet.html#Model_Entities_Cards_TroopCardSet_FindTradeSets_Shared_Interfaces_Model_ICard___
  name: FindTradeSets
  nameWithType: TroopCardSet.FindTradeSets
  fullName: Model.Entities.Cards.TroopCardSet.FindTradeSets
- uid: Shared.Interfaces.Model.ICardSet.FindTradeSets(Shared.Interfaces.Model.ICard[])
  commentId: M:Shared.Interfaces.Model.ICardSet.FindTradeSets(Shared.Interfaces.Model.ICard[])
  parent: Shared.Interfaces.Model.ICardSet
  href: Shared.Interfaces.Model.ICardSet.html#Shared_Interfaces_Model_ICardSet_FindTradeSets_Shared_Interfaces_Model_ICard___
  name: FindTradeSets(ICard[])
  nameWithType: ICardSet.FindTradeSets(ICard[])
  fullName: Shared.Interfaces.Model.ICardSet.FindTradeSets(Shared.Interfaces.Model.ICard[])
  nameWithType.vb: ICardSet.FindTradeSets(ICard())
  fullName.vb: Shared.Interfaces.Model.ICardSet.FindTradeSets(Shared.Interfaces.Model.ICard())
  name.vb: FindTradeSets(ICard())
  spec.csharp:
  - uid: Shared.Interfaces.Model.ICardSet.FindTradeSets(Shared.Interfaces.Model.ICard[])
    name: FindTradeSets
    href: Shared.Interfaces.Model.ICardSet.html#Shared_Interfaces_Model_ICardSet_FindTradeSets_Shared_Interfaces_Model_ICard___
  - name: (
  - uid: Shared.Interfaces.Model.ICard
    name: ICard
    href: Shared.Interfaces.Model.ICard.html
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Shared.Interfaces.Model.ICardSet.FindTradeSets(Shared.Interfaces.Model.ICard[])
    name: FindTradeSets
    href: Shared.Interfaces.Model.ICardSet.html#Shared_Interfaces_Model_ICardSet_FindTradeSets_Shared_Interfaces_Model_ICard___
  - name: (
  - uid: Shared.Interfaces.Model.ICard
    name: ICard
    href: Shared.Interfaces.Model.ICard.html
  - name: (
  - name: )
  - name: )
- uid: Shared.Interfaces.Model.ICard[]
  isExternal: true
  href: Shared.Interfaces.Model.ICard.html
  name: ICard[]
  nameWithType: ICard[]
  fullName: Shared.Interfaces.Model.ICard[]
  nameWithType.vb: ICard()
  fullName.vb: Shared.Interfaces.Model.ICard()
  name.vb: ICard()
  spec.csharp:
  - uid: Shared.Interfaces.Model.ICard
    name: ICard
    href: Shared.Interfaces.Model.ICard.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Shared.Interfaces.Model.ICard
    name: ICard
    href: Shared.Interfaces.Model.ICard.html
  - name: (
  - name: )
- uid: Shared.Interfaces.Model.ICard[][]
  isExternal: true
  href: Shared.Interfaces.Model.ICard.html
  name: ICard[][]
  nameWithType: ICard[][]
  fullName: Shared.Interfaces.Model.ICard[][]
  nameWithType.vb: ICard()()
  fullName.vb: Shared.Interfaces.Model.ICard()()
  name.vb: ICard()()
  spec.csharp:
  - uid: Shared.Interfaces.Model.ICard
    name: ICard
    href: Shared.Interfaces.Model.ICard.html
  - name: '['
  - name: ']'
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Shared.Interfaces.Model.ICard
    name: ICard
    href: Shared.Interfaces.Model.ICard.html
  - name: (
  - name: )
  - name: (
  - name: )
- uid: Shared.Interfaces.Model.ICard.IsTradeable
  commentId: P:Shared.Interfaces.Model.ICard.IsTradeable
  parent: Shared.Interfaces.Model.ICard
  href: Shared.Interfaces.Model.ICard.html#Shared_Interfaces_Model_ICard_IsTradeable
  name: IsTradeable
  nameWithType: ICard.IsTradeable
  fullName: Shared.Interfaces.Model.ICard.IsTradeable
- uid: Model.Entities.Cards.TroopInsignia
  commentId: T:Model.Entities.Cards.TroopInsignia
  parent: Model.Entities.Cards
  href: Model.Entities.Cards.TroopInsignia.html
  name: TroopInsignia
  nameWithType: TroopInsignia
  fullName: Model.Entities.Cards.TroopInsignia
- uid: Model.Entities.Cards.TroopCardSet.IsValidTrade*
  commentId: Overload:Model.Entities.Cards.TroopCardSet.IsValidTrade
  href: Model.Entities.Cards.TroopCardSet.html#Model_Entities_Cards_TroopCardSet_IsValidTrade_Shared_Interfaces_Model_ICard___
  name: IsValidTrade
  nameWithType: TroopCardSet.IsValidTrade
  fullName: Model.Entities.Cards.TroopCardSet.IsValidTrade
