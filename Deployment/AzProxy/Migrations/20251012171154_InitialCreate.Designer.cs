// <auto-generated />
using System;
using AzProxy.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AzProxy.Migrations
{
    [DbContext(typeof(GameStatsDbContext))]
    [Migration("20251012171154_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AzProxy.Entities.AttackActionEntity", b =>
                {
                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ActionId")
                        .HasColumnType("int");

                    b.Property<int>("AttackerDice")
                        .HasColumnType("int");

                    b.Property<int>("AttackerInitialArmies")
                        .HasColumnType("int");

                    b.Property<int>("AttackerLoss")
                        .HasColumnType("int");

                    b.Property<bool>("Conquered")
                        .HasColumnType("bit");

                    b.Property<int>("DefenderDice")
                        .HasColumnType("int");

                    b.Property<int>("DefenderInitialArmies")
                        .HasColumnType("int");

                    b.Property<int>("DefenderLoss")
                        .HasColumnType("int");

                    b.Property<string>("DefenderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("InstallID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDemo")
                        .HasColumnType("bit");

                    b.Property<string>("PlayerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Retreated")
                        .HasColumnType("bit");

                    b.Property<string>("SourceTerritory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetTerritory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GameId", "ActionId");

                    b.HasIndex("DefenderName", "InstallID");

                    b.HasIndex("PlayerName", "InstallID");

                    b.ToTable("AttackActions");
                });

            modelBuilder.Entity("AzProxy.Entities.GameSessionEntity", b =>
                {
                    b.Property<Guid>("GameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("InstallId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDemo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.Property<int?>("Winner")
                        .HasColumnType("int");

                    b.HasKey("GameId");

                    b.ToTable("GameSessions");
                });

            modelBuilder.Entity("AzProxy.Entities.MoveActionEntity", b =>
                {
                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ActionId")
                        .HasColumnType("int");

                    b.Property<Guid>("InstallID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDemo")
                        .HasColumnType("bit");

                    b.Property<bool>("MaxAdvanced")
                        .HasColumnType("bit");

                    b.Property<string>("PlayerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SourceTerritory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetTerritory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GameId", "ActionId");

                    b.HasIndex("PlayerName", "InstallID");

                    b.ToTable("MoveActions");
                });

            modelBuilder.Entity("AzProxy.Entities.PlayerStatsEntity", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("InstallId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AttackDiceRolled")
                        .HasColumnType("int");

                    b.Property<int>("AttacksLost")
                        .HasColumnType("int");

                    b.Property<int>("AttacksTied")
                        .HasColumnType("int");

                    b.Property<int>("AttacksWon")
                        .HasColumnType("int");

                    b.Property<int>("Conquests")
                        .HasColumnType("int");

                    b.Property<int>("DefenseDiceRolled")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FirstGameCompleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FirstGameStarted")
                        .HasColumnType("datetime2");

                    b.Property<int>("ForcedRetreats")
                        .HasColumnType("int");

                    b.Property<int>("GamesCompleted")
                        .HasColumnType("int");

                    b.Property<int>("GamesStarted")
                        .HasColumnType("int");

                    b.Property<int>("GamesWon")
                        .HasColumnType("int");

                    b.Property<bool>("IsDemo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastGameCompleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastGameStarted")
                        .HasColumnType("datetime2");

                    b.Property<int>("MaxAdvances")
                        .HasColumnType("int");

                    b.Property<int>("Moves")
                        .HasColumnType("int");

                    b.Property<int>("Retreats")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("TotalGamesDuration")
                        .HasColumnType("time");

                    b.Property<int>("TotalOccupationBonus")
                        .HasColumnType("int");

                    b.Property<int>("TradeIns")
                        .HasColumnType("int");

                    b.HasKey("Name", "InstallId");

                    b.ToTable("PlayerStats");
                });

            modelBuilder.Entity("AzProxy.Entities.TradeActionEntity", b =>
                {
                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ActionId")
                        .HasColumnType("int");

                    b.Property<string>("CardTargets")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("InstallID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDemo")
                        .HasColumnType("bit");

                    b.Property<int>("OccupiedBonus")
                        .HasColumnType("int");

                    b.Property<string>("PlayerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TradeValue")
                        .HasColumnType("int");

                    b.HasKey("GameId", "ActionId");

                    b.HasIndex("PlayerName", "InstallID");

                    b.ToTable("TradeActions");
                });

            modelBuilder.Entity("AzProxy.Entities.AttackActionEntity", b =>
                {
                    b.HasOne("AzProxy.Entities.GameSessionEntity", "GameSession")
                        .WithMany("AttackActions")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AzProxy.Entities.PlayerStatsEntity", null)
                        .WithMany()
                        .HasForeignKey("DefenderName", "InstallID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AzProxy.Entities.PlayerStatsEntity", null)
                        .WithMany()
                        .HasForeignKey("PlayerName", "InstallID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("GameSession");
                });

            modelBuilder.Entity("AzProxy.Entities.MoveActionEntity", b =>
                {
                    b.HasOne("AzProxy.Entities.GameSessionEntity", "GameSession")
                        .WithMany("MoveActions")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AzProxy.Entities.PlayerStatsEntity", null)
                        .WithMany()
                        .HasForeignKey("PlayerName", "InstallID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("GameSession");
                });

            modelBuilder.Entity("AzProxy.Entities.TradeActionEntity", b =>
                {
                    b.HasOne("AzProxy.Entities.GameSessionEntity", "GameSession")
                        .WithMany("TradeActions")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AzProxy.Entities.PlayerStatsEntity", null)
                        .WithMany()
                        .HasForeignKey("PlayerName", "InstallID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("GameSession");
                });

            modelBuilder.Entity("AzProxy.Entities.GameSessionEntity", b =>
                {
                    b.Navigation("AttackActions");

                    b.Navigation("MoveActions");

                    b.Navigation("TradeActions");
                });
#pragma warning restore 612, 618
        }
    }
}
