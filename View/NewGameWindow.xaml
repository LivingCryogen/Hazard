<Window x:Class="View.NewGameWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:validate="clr-namespace:View.Validators"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        Title="New Game Options"
        Name="NewGameOptionsWindow" 
        SizeToContent="WidthAndHeight"
        WindowStartupLocation="CenterScreen"
        Style="{StaticResource DefaultWindowStyle}"
        Background="{StaticResource DeepOceanBlue}"
        Foreground="Beige"
        >
    <Window.Resources>
            <Style TargetType="TextBlock">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="FontSize" Value="28" />
            <Setter Property="Padding" Value="2" />
        </Style>
        <Style TargetType="ComboBox">
            <Setter Property="Background" Value="{StaticResource OceanBlack}" />
            <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Margin" Value="15,0,0,0" />
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
                    </Trigger>
                    <Trigger Property="SelectedItem" Value="{x:Null}">

                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="TextBox">
            <Setter Property="Background" Value="{StaticResource OceanBlack}" />
            <Setter Property="Foreground" Value="{StaticResource OceanHighlight}" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="FontSize" Value="26" />
            <Setter Property="HorizontalAlignment" Value="Right" />
                <Setter Property="Width" Value="221"/>
                <Setter Property="Margin" Value="15,0,0,0" />
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="CheckBox">
            <Setter Property="Background" Value="{StaticResource OceanBlack}" />
            <Setter Property="Foreground" Value="{StaticResource OceanHighlight}" />
            <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Margin" Value="15,0,0,0" />
            </Style>
            <Style TargetType="WrapPanel">
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="HorizontalAlignment" Value="Center" />
            </Style>

        <DataTemplate x:Key="ColorComboTemplate">
            <StackPanel>
                <Rectangle Height="40" Width="150" Fill="{Binding Item2}" Stroke="Black" />
            </StackPanel>
        </DataTemplate>
    </Window.Resources>

    <Border Margin="25,20,25,20" BorderThickness="2" BorderBrush="Black" CornerRadius="4">
        <Grid Name="NewGameGrid" VerticalAlignment="Center" Margin="15">
            <Grid.RowDefinitions>
                <RowDefinition Height="72" />
                <RowDefinition Height="72" />
                <RowDefinition Height="72" />
                <RowDefinition Height="72" />
                <RowDefinition Height="72" />
                <RowDefinition Height="72" />
                <RowDefinition Height="72" />
                <RowDefinition Height="72" />
                <RowDefinition Height="118" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="340"/>
                <ColumnDefinition Width="320"/>
                <ColumnDefinition Width="340"/>
            </Grid.ColumnDefinitions>



            <WrapPanel Name="NumPlayersWrap" Grid.RowSpan="2" Grid.Column="0" HorizontalAlignment="Left">
                <StackPanel>
                    <TextBlock Text="Players" />
                    <ComboBox Name="NumPlayers" IsEnabled="True" SelectionChanged="NumPlayers_SelectionChanged" Width="55" Height="35" Padding="5">
                    <ComboBoxItem IsEnabled="False">
                        <sys:Char>1</sys:Char>
                    </ComboBoxItem>
                    <ComboBoxItem>
                        <sys:Char>2</sys:Char>
                    </ComboBoxItem>
                    <ComboBoxItem>
                        <sys:Char>3</sys:Char>
                    </ComboBoxItem>
                    <ComboBoxItem>
                        <sys:Char>4</sys:Char>
                    </ComboBoxItem>
                    <ComboBoxItem>
                        <sys:Char>5</sys:Char>
                    </ComboBoxItem>
                    <ComboBoxItem>
                        <sys:Char>6</sys:Char>
                    </ComboBoxItem>
                </ComboBox>
                </StackPanel>
            </WrapPanel>

            <WrapPanel Grid.RowSpan="2" Grid.Column="2" HorizontalAlignment="Right">
                <StackPanel Orientation="Vertical">
                    <TextBlock Text="Secret" Grid.Column="3" HorizontalAlignment="Center" TextWrapping="WrapWithOverflow" />
                    <TextBlock Text="Missions" HorizontalAlignment="Center"/>
                </StackPanel>
                <CheckBox Name="SecretMissionCheck" Grid.Column="3" BorderThickness="1.5" HorizontalAlignment="Center">
                    <CheckBox.LayoutTransform>
                        <ScaleTransform ScaleX="2" ScaleY="2" />
                    </CheckBox.LayoutTransform>
                </CheckBox>
            </WrapPanel>

            <Decorator Grid.RowSpan="2" Grid.ColumnSpan="3" HorizontalAlignment="Center" Grid.Column="0" Margin="-25">
                <StackPanel>
                    <RibbonTwoLineText Text="HAZARD" FontSize="155" Margin="0,-25,0,0"/>
                    <RibbonTwoLineText Text="Nothing ventured, nothing gained." FontSize="30" Grid.ColumnSpan="2" Margin="0,-25,0,0"/>
                </StackPanel>
            </Decorator>

            <TextBlock Grid.Row="2" Text="Player 1" HorizontalAlignment="Center" />
            <WrapPanel Name="Player1NameWrap" Grid.Row="2" Grid.Column="1">
                <TextBlock Text="Name" />
                <TextBox Name="Player1NameBox">
                    <TextBox.Text>
                        <Binding Path="NewPlayerName[0]" Mode="OneWayToSource" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <validate:NameValidationRule />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
            </WrapPanel>
            <WrapPanel Name="Player1ColorWrap" Grid.Row="2" Grid.Column="2" Margin="25,0,0,0">
                <TextBlock Text="Color" />
                <ComboBox Name="Player1ColorBox" ItemsSource="{Binding ColorsRemaining[0], UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" ItemTemplate="{StaticResource ColorComboTemplate}" Width="150" Height="40" SelectionChanged="PlayerColorBox_SelectionChanged" DropDownOpened="PlayerColorBox_DropDownOpened">
                    <ComboBox.SelectedItem>
                        <Binding Path="NewPlayerColor[0]" Mode="OneWayToSource" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <validate:ColorValidationRule />
                            </Binding.ValidationRules>
                        </Binding>
                    </ComboBox.SelectedItem>
                </ComboBox>
            </WrapPanel>

            <TextBlock Grid.Row="3" Text="Player 2" HorizontalAlignment="Center" />
            <WrapPanel Name="Player2NameWrap" Grid.Row="3" Grid.Column="1">
                <TextBlock Text="Name" />
                <TextBox Name="Player2NameBox">
                    <TextBox.Text>
                        <Binding Path="NewPlayerName[1]" Mode="OneWayToSource"  UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <validate:NameValidationRule />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>

            </WrapPanel>
            <WrapPanel Name="Player2ColorWrap" Grid.Row="3" Grid.Column="2" Margin="25,0,0,0">
                <TextBlock Text="Color" />
                <ComboBox Name="Player2ColorBox" ItemsSource="{Binding ColorsRemaining[1], UpdateSourceTrigger=PropertyChanged}" ItemTemplate="{StaticResource ColorComboTemplate}" Width="150" Height="40" SelectionChanged="PlayerColorBox_SelectionChanged" DropDownOpened="PlayerColorBox_DropDownOpened">
                    <ComboBox.SelectedItem>
                        <Binding Path="NewPlayerColor[1]" Mode="OneWayToSource" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <validate:ColorValidationRule />
                            </Binding.ValidationRules>
                        </Binding>
                    </ComboBox.SelectedItem>
                </ComboBox>
            </WrapPanel>

            <TextBlock Grid.Row="4" Text="Player 3" HorizontalAlignment="Center" />
            <WrapPanel Name="Player3NameWrap" Grid.Row="4" Grid.Column="1">
                <TextBlock Text="Name" />
                <TextBox Name="Player3NameBox">
                    <TextBox.Text>
                        <Binding Path="NewPlayerName[2]" Mode="OneWayToSource"  UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <validate:NameValidationRule />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
            </WrapPanel>
            <WrapPanel Name="Player3ColorWrap" Grid.Row="4" Grid.Column="2" Margin="25,0,0,0">
                <TextBlock Text="Color" />
                <ComboBox Name="Player3ColorBox" ItemsSource="{Binding ColorsRemaining[2], UpdateSourceTrigger=PropertyChanged}" ItemTemplate="{StaticResource ColorComboTemplate}" Width="150" Height="40" SelectionChanged="PlayerColorBox_SelectionChanged" DropDownOpened="PlayerColorBox_DropDownOpened">
                    <ComboBox.SelectedItem>
                        <Binding Path="NewPlayerColor[2]" Mode="OneWayToSource" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <validate:ColorValidationRule />
                            </Binding.ValidationRules>
                        </Binding>
                    </ComboBox.SelectedItem>
                </ComboBox>
            </WrapPanel>

            <TextBlock Grid.Row="5" Text="Player 4" HorizontalAlignment="Center" />
            <WrapPanel Name ="Player4NameWrap" Grid.Row="5" Grid.Column="1">
                <TextBlock Text="Name" />
                <TextBox Name="Player4NameBox">
                    <TextBox.Text>
                        <Binding Path="NewPlayerName[3]" Mode="OneWayToSource"  UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <validate:NameValidationRule />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
            </WrapPanel>
            <WrapPanel Name ="Player4ColorWrap" Grid.Row="5" Grid.Column="2" Margin="25,0,0,0">
                <TextBlock Text="Color" />
                <ComboBox Name="Player4ColorBox" ItemsSource="{Binding ColorsRemaining[3], UpdateSourceTrigger=PropertyChanged}" ItemTemplate="{StaticResource ColorComboTemplate}" Width="150" Height="40" SelectionChanged="PlayerColorBox_SelectionChanged" DropDownOpened="PlayerColorBox_DropDownOpened">
                    <ComboBox.SelectedItem>
                        <Binding Path="NewPlayerColor[3]" Mode="OneWayToSource" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <validate:ColorValidationRule />
                            </Binding.ValidationRules>
                        </Binding>
                    </ComboBox.SelectedItem>
                </ComboBox>
            </WrapPanel>

            <TextBlock Grid.Row="6" Text="Player 5" HorizontalAlignment="Center" />
            <WrapPanel Name ="Player5NameWrap" Grid.Row="6" Grid.Column="1">
                <TextBlock Text="Name" />
                <TextBox Name="Player5NameBox">
                    <TextBox.Text>
                        <Binding Path="NewPlayerName[4]" Mode="OneWayToSource"  UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <validate:NameValidationRule />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
            </WrapPanel>
            <WrapPanel Name ="Player5ColorWrap" Grid.Row="6" Grid.Column="2" Margin="25,0,0,0">
                <TextBlock Text="Color" />
                <ComboBox Name="Player5ColorBox" ItemsSource="{Binding ColorsRemaining[4], UpdateSourceTrigger=PropertyChanged}" ItemTemplate="{StaticResource ColorComboTemplate}" Width="150" Height="40" SelectionChanged="PlayerColorBox_SelectionChanged" DropDownOpened="PlayerColorBox_DropDownOpened">
                    <ComboBox.SelectedItem>
                        <Binding Path="NewPlayerColor[4]" Mode="OneWayToSource" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <validate:ColorValidationRule />
                            </Binding.ValidationRules>
                        </Binding>
                    </ComboBox.SelectedItem>
                </ComboBox>
            </WrapPanel>

            <TextBlock Grid.Row="7" Text="Player 6" HorizontalAlignment="Center" />
            <WrapPanel Name="Player6NameWrap" Grid.Row="7" Grid.Column="1">
                <TextBlock Text="Name" />
                <TextBox Name="Player6NameBox">
                    <TextBox.Text>
                        <Binding Path="NewPlayerName[5]" Mode="OneWayToSource"  UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <validate:NameValidationRule />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
            </WrapPanel>
            <WrapPanel Name="Player6ColorWrap" Grid.Row="7" Grid.Column="2" Margin="25,0,0,0">
                <TextBlock Text="Color" />
                <ComboBox Name="Player6ColorBox" ItemsSource="{Binding ColorsRemaining[5], UpdateSourceTrigger=PropertyChanged}" ItemTemplate="{StaticResource ColorComboTemplate}" Width="150" Height="40" SelectionChanged="PlayerColorBox_SelectionChanged" DropDownOpened="PlayerColorBox_DropDownOpened">
                    <ComboBox.SelectedItem>
                        <Binding Path="NewPlayerColor[5]" Mode="OneWayToSource" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <validate:ColorValidationRule />
                            </Binding.ValidationRules>
                        </Binding>
                    </ComboBox.SelectedItem>
                </ComboBox>
            </WrapPanel>

            <Button Name="NewGameButton" Grid.Row="8" Grid.ColumnSpan="3" Margin="25" Content="Let the Game Begin!" Background="{StaticResource OceanBlue}" Foreground="{StaticResource OceanHighlight}" BorderThickness="0" Click="NewGameButton_Click" FontSize="22" FontWeight="Heavy">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="IsEnabled" Value="False" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=Player1NameBox, Path=(Validation.HasError)}" Value="True">
                                <Setter Property="IsEnabled" Value="False" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=Player2NameBox, Path=(Validation.HasError)}" Value="True">
                                <Setter Property="IsEnabled" Value="False" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=Player3NameBox, Path=(Validation.HasError)}" Value="True">
                                <Setter Property="IsEnabled" Value="False" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=Player4NameBox, Path=(Validation.HasError)}" Value="True">
                                <Setter Property="IsEnabled" Value="False" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=Player5NameBox, Path=(Validation.HasError)}" Value="True">
                                <Setter Property="IsEnabled" Value="False" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=Player6NameBox, Path=(Validation.HasError)}" Value="True">
                                <Setter Property="IsEnabled" Value="False" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=Player1ColorBox, Path=(Validation.HasError)}" Value="True">
                                <Setter Property="IsEnabled" Value="False" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=Player2ColorBox, Path=(Validation.HasError)}" Value="True">
                                <Setter Property="IsEnabled" Value="False" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=Player3ColorBox, Path=(Validation.HasError)}" Value="True">
                                <Setter Property="IsEnabled" Value="False" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=Player4ColorBox, Path=(Validation.HasError)}" Value="True">
                                <Setter Property="IsEnabled" Value="False" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=Player5ColorBox, Path=(Validation.HasError)}" Value="True">
                                <Setter Property="IsEnabled" Value="False" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=Player6ColorBox, Path=(Validation.HasError)}" Value="True">
                                <Setter Property="IsEnabled" Value="False" />
                            </DataTrigger>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=NumPlayers, Path=SelectedIndex}" Value="1" />
                                    <Condition Binding="{Binding ElementName=Player1NameBox, Path=(Validation.HasError)}" Value="False" />
                                    <Condition Binding="{Binding ElementName=Player2NameBox, Path=(Validation.HasError)}" Value="False" />
                                    <Condition Binding="{Binding ElementName=Player1ColorBox, Path=(Validation.HasError)}" Value="False" />
                                    <Condition Binding="{Binding ElementName=Player2ColorBox, Path=(Validation.HasError)}" Value="False" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="IsEnabled" Value="True" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=NumPlayers, Path=SelectedIndex}" Value="2" />
                                    <Condition Binding="{Binding ElementName=Player1NameBox, Path=(Validation.HasError)}" Value="False" />
                                    <Condition Binding="{Binding ElementName=Player2NameBox, Path=(Validation.HasError)}" Value="False" />
                                    <Condition Binding="{Binding ElementName=Player3NameBox, Path=(Validation.HasError)}" Value="False" />
                                    <Condition Binding="{Binding ElementName=Player1ColorBox, Path=(Validation.HasError)}" Value="False" />
                                    <Condition Binding="{Binding ElementName=Player2ColorBox, Path=(Validation.HasError)}" Value="False" />
                                    <Condition Binding="{Binding ElementName=Player3ColorBox, Path=(Validation.HasError)}" Value="False" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="IsEnabled" Value="True" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=NumPlayers, Path=SelectedIndex}" Value="3" />
                                    <Condition Binding="{Binding ElementName=Player1NameBox, Path=(Validation.HasError)}" Value="False" />
                                    <Condition Binding="{Binding ElementName=Player2NameBox, Path=(Validation.HasError)}" Value="False" />
                                    <Condition Binding="{Binding ElementName=Player3NameBox, Path=(Validation.HasError)}" Value="False" />
                                    <Condition Binding="{Binding ElementName=Player4NameBox, Path=(Validation.HasError)}" Value="False" />
                                    <Condition Binding="{Binding ElementName=Player1ColorBox, Path=(Validation.HasError)}" Value="False" />
                                    <Condition Binding="{Binding ElementName=Player2ColorBox, Path=(Validation.HasError)}" Value="False" />
                                    <Condition Binding="{Binding ElementName=Player3ColorBox, Path=(Validation.HasError)}" Value="False" />
                                    <Condition Binding="{Binding ElementName=Player4ColorBox, Path=(Validation.HasError)}" Value="False" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="IsEnabled" Value="True" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=NumPlayers, Path=SelectedIndex}" Value="4" />
                                    <Condition Binding="{Binding ElementName=Player1NameBox, Path=(Validation.HasError)}" Value="False" />
                                    <Condition Binding="{Binding ElementName=Player2NameBox, Path=(Validation.HasError)}" Value="False" />
                                    <Condition Binding="{Binding ElementName=Player3NameBox, Path=(Validation.HasError)}" Value="False" />
                                    <Condition Binding="{Binding ElementName=Player4NameBox, Path=(Validation.HasError)}" Value="False" />
                                    <Condition Binding="{Binding ElementName=Player5NameBox, Path=(Validation.HasError)}" Value="False" />
                                    <Condition Binding="{Binding ElementName=Player1ColorBox, Path=(Validation.HasError)}" Value="False" />
                                    <Condition Binding="{Binding ElementName=Player2ColorBox, Path=(Validation.HasError)}" Value="False" />
                                    <Condition Binding="{Binding ElementName=Player3ColorBox, Path=(Validation.HasError)}" Value="False" />
                                    <Condition Binding="{Binding ElementName=Player4ColorBox, Path=(Validation.HasError)}" Value="False" />
                                    <Condition Binding="{Binding ElementName=Player5ColorBox, Path=(Validation.HasError)}" Value="False" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="IsEnabled" Value="True" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=NumPlayers, Path=SelectedIndex}" Value="5" />
                                    <Condition Binding="{Binding ElementName=Player1NameBox, Path=(Validation.HasError)}" Value="False" />
                                    <Condition Binding="{Binding ElementName=Player2NameBox, Path=(Validation.HasError)}" Value="False" />
                                    <Condition Binding="{Binding ElementName=Player3NameBox, Path=(Validation.HasError)}" Value="False" />
                                    <Condition Binding="{Binding ElementName=Player4NameBox, Path=(Validation.HasError)}" Value="False" />
                                    <Condition Binding="{Binding ElementName=Player5NameBox, Path=(Validation.HasError)}" Value="False" />
                                    <Condition Binding="{Binding ElementName=Player6NameBox, Path=(Validation.HasError)}" Value="False" />
                                    <Condition Binding="{Binding ElementName=Player1ColorBox, Path=(Validation.HasError)}" Value="False" />
                                    <Condition Binding="{Binding ElementName=Player2ColorBox, Path=(Validation.HasError)}" Value="False" />
                                    <Condition Binding="{Binding ElementName=Player3ColorBox, Path=(Validation.HasError)}" Value="False" />
                                    <Condition Binding="{Binding ElementName=Player4ColorBox, Path=(Validation.HasError)}" Value="False" />
                                    <Condition Binding="{Binding ElementName=Player5ColorBox, Path=(Validation.HasError)}" Value="False" />
                                    <Condition Binding="{Binding ElementName=Player6ColorBox, Path=(Validation.HasError)}" Value="False" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="IsEnabled" Value="True" />
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </Grid>
    </Border>
</Window>
