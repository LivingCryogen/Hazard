<Window x:Class="View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:enum="clr-namespace:Shared.Enums;assembly=Model"
        xmlns:local="clr-namespace:View"
        xmlns:conv="clr-namespace:View.Converters"
        mc:Ignorable="d"
        Name="GameWindow" Title="Hazard! : Nothing ventured, nothing gained."
        WindowStartupLocation="CenterScreen" 
        WindowStyle="SingleBorderWindow"
        Background="{StaticResource DeepOceanBlue}"
        Foreground="FloralWhite"
        Closing="Window_Closing"
        >
    <Window.Resources>
        <ResourceDictionary>
            <conv:PlayerNumbertoColorConverter x:Key="NumbertoColor" />
            <conv:TurnEqualsPlayerNumber x:Key="TurnEqualsPlayerNumber" />

            <MultiBinding x:Key="ControlNumberToColorBinding" Converter="{StaticResource ResourceKey=NumbertoColor}">
                <Binding ElementName="GameWindow" Path="PlayerColors" />
                <Binding Path="Number" />
            </MultiBinding>

            <DataTemplate x:Key="OverviewTabTemplate">
                <DataTemplate.Resources>
                    <Style TargetType="TextBlock">
                        <Style.Setters>
                            <Setter Property="Padding" Value="2" />
                            <Setter Property="FontSize" Value="14" />
                        </Style.Setters>
                    </Style>
                    <Style x:Key="HighlighterDataStyle" TargetType="TextBlock">
                        <Style.Triggers>
                            <DataTrigger Value="False">
                                <DataTrigger.Binding>
                                    <MultiBinding Converter="{StaticResource TurnEqualsPlayerNumber}">
                                        <Binding Path="VMInstance.PlayerTurn"/>
                                        <Binding Path="Number" />
                                    </MultiBinding>
                                </DataTrigger.Binding>
                                <DataTrigger.Setters>
                                    <Setter Property="Text" Value="{Binding ArmyBonus}" />
                                </DataTrigger.Setters>
                            </DataTrigger>
                            <DataTrigger Value="{x:Static enum:GamePhase.Null}">
                                <DataTrigger.Binding>
                                    <Binding Path="VMInstance.CurrentPhase" />
                                </DataTrigger.Binding>
                                <DataTrigger.Setters>
                                    <Setter Property="Text" Value="" />
                                </DataTrigger.Setters>
                            </DataTrigger>
                            <DataTrigger Value="{x:Static enum:GamePhase.GameOver}">
                                <DataTrigger.Binding>
                                    <Binding Path="VMInstance.CurrentPhase" />
                                </DataTrigger.Binding>
                                <DataTrigger.Setters>
                                    <Setter Property="Text" Value="{Binding ArmyBonus}" />
                                </DataTrigger.Setters>
                            </DataTrigger>
                            <DataTrigger Value="{x:Static enum:GamePhase.DefaultSetup}">
                                <DataTrigger.Binding>
                                    <Binding Path="VMInstance.CurrentPhase" />
                                </DataTrigger.Binding>
                                <DataTrigger.Setters>
                                    <Setter Property="Text" Value="{Binding ArmyPool}" />
                                </DataTrigger.Setters>
                            </DataTrigger>
                            <DataTrigger Value="{x:Static enum:GamePhase.TwoPlayerSetup}">
                                <DataTrigger.Binding>
                                    <Binding Path="VMInstance.CurrentPhase" />
                                </DataTrigger.Binding>
                                <DataTrigger.Setters>
                                    <Setter Property="Text" Value="{Binding ArmyPool}" />
                                </DataTrigger.Setters>
                            </DataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Value="True">
                                        <Condition.Binding>
                                            <MultiBinding Converter="{StaticResource TurnEqualsPlayerNumber}">
                                                <Binding Path="VMInstance.PlayerTurn"/>
                                                <Binding Path="Number" />
                                            </MultiBinding>
                                        </Condition.Binding>
                                    </Condition>
                                    <Condition Value="{x:Static enum:GamePhase.Place}">
                                        <Condition.Binding>
                                            <Binding Path="VMInstance.CurrentPhase" />
                                        </Condition.Binding>
                                    </Condition>
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="Text" Value="{Binding ArmyPool}" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Value="True">
                                        <Condition.Binding>
                                            <MultiBinding Converter="{StaticResource TurnEqualsPlayerNumber}">
                                                <Binding Path="VMInstance.PlayerTurn"/>
                                                <Binding Path="Number" />
                                            </MultiBinding>
                                        </Condition.Binding>
                                    </Condition>
                                    <Condition Value="{x:Static enum:GamePhase.Null}">
                                        <Condition.Binding>
                                            <Binding Path="VMInstance.CurrentPhase" />
                                        </Condition.Binding>
                                    </Condition>
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="Text" Value="" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Value="True">
                                        <Condition.Binding>
                                            <MultiBinding Converter="{StaticResource TurnEqualsPlayerNumber}">
                                                <Binding Path="VMInstance.PlayerTurn"/>
                                                <Binding Path="Number" />
                                            </MultiBinding>
                                        </Condition.Binding>
                                    </Condition>
                                    <Condition Value="{x:Static enum:GamePhase.Move}" Binding="{Binding VMInstance.CurrentPhase}" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="Text" Value="{Binding NumArmies}" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Value="True">
                                        <Condition.Binding>
                                            <MultiBinding Converter="{StaticResource TurnEqualsPlayerNumber}">
                                                <Binding Path="VMInstance.PlayerTurn"/>
                                                <Binding Path="Number" />
                                            </MultiBinding>
                                        </Condition.Binding>
                                    </Condition>
                                    <Condition Value="{x:Static enum:GamePhase.Attack}" Binding="{Binding VMInstance.CurrentPhase}" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="Text" Value="{Binding NumTerritories}" />
                                    <Setter Property="FontSize" Value="12" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                    <Style x:Key="HighlighterLabelStyle" TargetType="TextBlock">
                        <Style.Triggers>
                            <DataTrigger Value="False">
                                <DataTrigger.Binding>
                                    <MultiBinding Converter="{StaticResource TurnEqualsPlayerNumber}">
                                        <Binding Path="VMInstance.PlayerTurn"/>
                                        <Binding Path="Number" />
                                    </MultiBinding>
                                </DataTrigger.Binding>
                                <DataTrigger.Setters>
                                    <Setter Property="Text" Value="Bonus" />
                                </DataTrigger.Setters>
                            </DataTrigger>
                            <DataTrigger Value="{x:Static enum:GamePhase.Null}" Binding="{Binding VMInstance.CurrentPhase}">
                                <DataTrigger.Setters>
                                    <Setter Property="Text" Value="" />
                                </DataTrigger.Setters>
                            </DataTrigger>
                            <DataTrigger Value="{x:Static enum:GamePhase.GameOver}" Binding="{Binding VMInstance.CurrentPhase}">
                                <DataTrigger.Setters>
                                    <Setter Property="Text" Value="Bonus" />
                                </DataTrigger.Setters>
                            </DataTrigger>
                            <DataTrigger Value="{x:Static enum:GamePhase.DefaultSetup}" Binding="{Binding VMInstance.CurrentPhase}">
                                <DataTrigger.Setters>
                                    <Setter Property="Text" Value="Pool" />
                                </DataTrigger.Setters>
                            </DataTrigger>
                            <DataTrigger Value="{x:Static enum:GamePhase.TwoPlayerSetup}" Binding="{Binding VMInstance.CurrentPhase}">
                                <DataTrigger.Setters>
                                    <Setter Property="Text" Value="Pool" />
                                </DataTrigger.Setters>
                            </DataTrigger>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Value="True">
                                        <Condition.Binding>
                                            <MultiBinding Converter="{StaticResource TurnEqualsPlayerNumber}">
                                                <Binding Path="VMInstance.PlayerTurn"/>
                                                <Binding Path="Number" />
                                            </MultiBinding>
                                        </Condition.Binding>
                                    </Condition>
                                    <Condition Value="{x:Static enum:GamePhase.Place}" Binding="{Binding VMInstance.CurrentPhase}" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="Text" Value="Pool" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Value="True">
                                        <Condition.Binding>
                                            <MultiBinding Converter="{StaticResource TurnEqualsPlayerNumber}">
                                                <Binding Path="VMInstance.PlayerTurn"/>
                                                <Binding Path="Number" />
                                            </MultiBinding>
                                        </Condition.Binding>
                                    </Condition>
                                    <Condition Value="{x:Static enum:GamePhase.Attack}" Binding="{Binding VMInstance.CurrentPhase}" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="Text" Value="Territories" />
                                    <Setter Property="FontSize" Value="12" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Value="True">
                                        <Condition.Binding>
                                            <MultiBinding Converter="{StaticResource TurnEqualsPlayerNumber}">
                                                <Binding Path="VMInstance.PlayerTurn"/>
                                                <Binding Path="Number" />
                                            </MultiBinding>
                                        </Condition.Binding>
                                    </Condition>
                                    <Condition Value="{x:Static enum:GamePhase.Move}" Binding="{Binding VMInstance.CurrentPhase}" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="Text" Value="Armies" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </DataTemplate.Resources>
                <StackPanel>
                    <WrapPanel ItemHeight="20" Width="220">
                        <TextBlock Text="Player " Margin="2,0,0,0"/>
                        <TextBlock Text="{Binding DisplayNumber}"/>
                        <TextBlock Text="{Binding Name}" Margin="10,0,0,0" />
                    </WrapPanel>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="80"/>
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Ellipse Grid.Column="0" Grid.Row="0" Height="75" Width="75" Fill="{StaticResource ResourceKey=ControlNumberToColorBinding}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,-5,0,0"/>
                        <TextBlock Name="HighlighterData" Style="{StaticResource HighlighterDataStyle}" FontSize="40" Grid.Column="0" Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="BlanchedAlmond"/>
                        <TextBlock Name="HighlighterLabel" Style="{StaticResource HighlighterLabelStyle}" Grid.Column="0" Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Bottom" />
                        <Grid Grid.Column="1" Grid.Row="0">
                            <Grid.Resources>
                                <Style TargetType="TextBlock">
                                    <Style.Setters>
                                        <Setter Property="FontSize" Value="11" />
                                    </Style.Setters>
                                </Style>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="30"/>
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="36"/>
                                <RowDefinition Height="36"/>
                                <RowDefinition Height="36"/>
                            </Grid.RowDefinitions>
                            <Rectangle Grid.Column="0" Grid.Row="0" Height="25" Width="25" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{StaticResource ResourceKey=ControlNumberToColorBinding}" />
                            <TextBlock Name="NumTerritoriesDataTextBlock" Text="{Binding NumTerritories}" Grid.Column="0" Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="16" Foreground="BlanchedAlmond"/>
                            <Rectangle Grid.Column="0" Grid.Row="1" Height="25" Width="25" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{StaticResource ResourceKey=ControlNumberToColorBinding}" />
                            <TextBlock Name="NumArmiesDataTextBlock" Text="{Binding NumArmies}" Grid.Column="0" Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="16" Foreground="BlanchedAlmond"/>
                            <Rectangle Grid.Column="0" Grid.Row="2" Height="25" Width="25" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{StaticResource ResourceKey=ControlNumberToColorBinding}" />
                            <TextBlock Text="{Binding Hand.Count}" Grid.Column="0" Grid.Row="2" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="16" Foreground="BlanchedAlmond"/>
                            <TextBlock Text="Total Armies" Grid.Column="1" Grid.Row="1" VerticalAlignment="Center"/>
                            <TextBlock Text="Territories" Grid.Column="1" Grid.Row="0" VerticalAlignment="Center"/>
                            <TextBlock Text="Cards" Grid.Column="1" Grid.Row="2" VerticalAlignment="Center"/>
                        </Grid>
                    </Grid>
                </StackPanel>
            </DataTemplate>

            <!-- At least for now each of these templates needs to be seperated to go with the appropriate HandViewButton Click event-->
            <DataTemplate x:Key="HandTabTemplate0">
                <Grid Name="HandTabGrid" Tag="0">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition MaxHeight="18"/>
                    </Grid.RowDefinitions>
                    <ListBox Grid.Row="0" Name="CardsInHandListBox" Style="{StaticResource HandListBoxStyle_0}" ItemsSource="{Binding Hand}" />
                    <Button Name="HandViewButton" Content="Hand View" Grid.Row="1" Click="HandViewButton_Click1" />
                </Grid>
            </DataTemplate>
            <DataTemplate x:Key="HandTabTemplate1">
                <Grid Name="HandTabGrid">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition MaxHeight="18"/>
                    </Grid.RowDefinitions>
                    <ListBox Grid.Row="0" Name="CardsInHandListBox" Style="{StaticResource HandListBoxStyle_1}" ItemsSource="{Binding Hand}" />
                    <Button Name="HandViewButton" Content="Hand View" Grid.Row="1" Click="HandViewButton_Click2" />
                </Grid>
            </DataTemplate>
            <DataTemplate x:Key="HandTabTemplate2">
                <Grid Name="HandTabGrid">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition MaxHeight="18"/>
                    </Grid.RowDefinitions>
                    <ListBox Grid.Row="0" Name="CardsInHandListBox" Style="{StaticResource HandListBoxStyle_2}" ItemsSource="{Binding Hand}" />
                    <Button Name="HandViewButton" Content="Hand View" Grid.Row="1" Click="HandViewButton_Click3" />
                </Grid>
            </DataTemplate>
            <DataTemplate x:Key="HandTabTemplate3">
                <Grid Name="HandTabGrid">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition MaxHeight="18"/>
                    </Grid.RowDefinitions>
                    <ListBox Grid.Row="0" Name="CardsInHandListBox" Style="{StaticResource HandListBoxStyle_3}" ItemsSource="{Binding Hand}" />
                    <Button Name="HandViewButton" Content="Hand View" Grid.Row="1" Click="HandViewButton_Click4" />
                </Grid>
            </DataTemplate>
            <DataTemplate x:Key="HandTabTemplate4">
                <Grid Name="HandTabGrid">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition MaxHeight="18"/>
                    </Grid.RowDefinitions>
                    <ListBox Grid.Row="0" Name="CardsInHandListBox" Style="{StaticResource HandListBoxStyle_4}" ItemsSource="{Binding Hand}" />
                    <Button Name="HandViewButton" Content="Hand View" Grid.Row="1" Click="HandViewButton_Click5" />
                </Grid>
            </DataTemplate>
            <DataTemplate x:Key="HandTabTemplate5">
                <Grid Name="HandTabGrid">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition MaxHeight="18"/>
                    </Grid.RowDefinitions>
                    <ListBox Grid.Row="0" Name="CardsInHandListBox" Style="{StaticResource HandListBoxStyle_5}" ItemsSource="{Binding Hand}" />
                    <Button Name="HandViewButton" Content="Hand View" Grid.Row="1" Click="HandViewButton_Click6" />
                </Grid>
            </DataTemplate>

            <Style TargetType="RibbonTwoLineText">
                <Setter Property="Foreground" Value="{StaticResource OceanHighlight}" />
            </Style>
            <Style TargetType="local:TerritoryElement">
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Trigger.EnterActions>
                            <BeginStoryboard Name="IsSelectedBeginStoryboard">
                                <Storyboard>
                                    <ColorAnimation Duration="0:0:1.5" Storyboard.TargetProperty="(local:TerritoryElement.Color).Color" To="GreenYellow" AutoReverse="True" RepeatBehavior="Forever"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                    </Trigger>
                    <Trigger Property="IsSelected" Value="False">
                        <Trigger.EnterActions>
                            <RemoveStoryboard BeginStoryboardName="IsSelectedBeginStoryboard" />
                        </Trigger.EnterActions>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="PhaseHintTextStyle" TargetType="TextBlock">
                <Style.Setters>
                    <Setter Property="HorizontalAlignment" Value="Center" />
                    <Setter Property="FontSize" Value="40" />
                    <Setter Property="Padding" Value="4" />
                </Style.Setters>
                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Value="{x:Static enum:GamePhase.DefaultSetup}" Binding="{Binding CurrentPhase}" />
                            <Condition Value="False" Binding="{Binding PhaseStageTwo}" />
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter Property="Text" Value="Claim a Territory" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Value="{x:Static enum:GamePhase.DefaultSetup}" Binding="{Binding CurrentPhase}" />
                            <Condition Value="True" Binding="{Binding PhaseStageTwo}" />
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter Property="Text" Value="Reinforce a Territory" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Value="{x:Static enum:GamePhase.TwoPlayerSetup}" Binding="{Binding CurrentPhase}" />
                            <Condition Value="False">
                                <Condition.Binding>
                                    <Binding Path="PhaseStageTwo" />
                                </Condition.Binding>
                            </Condition>
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter Property="Text" Value="Reinforce your Territories" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Value="{x:Static enum:GamePhase.TwoPlayerSetup}" Binding="{Binding CurrentPhase}" />
                            <Condition Value="True" Binding="{Binding PhaseStageTwo}" />
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter Property="Text" Value="Reinforce Neutral Territories" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Value="{x:Static enum:GamePhase.Move}" Binding="{Binding CurrentPhase}" />
                            <Condition Value="False" Binding="{Binding PhaseStageTwo}" />
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter Property="Text" Value="Move from a Territory?&#10;SHIFT+SPACE to End.&#10;SHIFT+ESC to Cancel." />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Value="{x:Static enum:GamePhase.Move}" Binding="{Binding CurrentPhase}" />
                            <Condition Value="True" Binding="{Binding PhaseStageTwo}" />
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter Property="Text" Value="Move to a Territory?&#10;SHIFT+SPACE to End.&#10;SHIFT+ESC to Cancel." />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                    <DataTrigger Value="{x:Static enum:GamePhase.Place}" Binding="{Binding CurrentPhase}">
                        <DataTrigger.Setters>
                            <Setter Property="Text" Value="Place your Armies" />
                        </DataTrigger.Setters>
                    </DataTrigger>
                    <DataTrigger Value="{x:Static enum:GamePhase.Attack}" Binding="{Binding CurrentPhase}">
                        <DataTrigger.Setters>
                            <Setter Property="Text" Value="Attack from a Territory?&#10;SHIFT+SPACE to End.&#10;SHIFT+ESC to Cancel." xml:space="preserve"/> <!-- &#10; is a "new line" character, xml:space "preserve" is needed as well -->
                        </DataTrigger.Setters>
                    </DataTrigger>
                    <DataTrigger Value="{x:Static enum:GamePhase.GameOver}" Binding="{Binding CurrentPhase}">
                        <DataTrigger.Setters>
                            <Setter Property="Text" Value="Game Over!" />
                        </DataTrigger.Setters>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </Window.Resources>
    <Window.Style>
        <Style TargetType="local:MainWindow" BasedOn="{StaticResource DefaultWindowStyle}">
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Value="{x:Static enum:GamePhase.Attack}" Binding="{Binding CurrentPhase}" />
                        <Condition Value="{x:Static enum:GamePhase.Null}" Binding="{Binding CurrentPhase}" />
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="ConfirmNoticeVisibility" Value="Collapsed" />
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Style>
    <Window.CommandBindings>
        <CommandBinding Command="New" CanExecute="CommandBindingNew_CanExecute" Executed="CommandBindingNew_Executed" />
        <CommandBinding Command="Close" CanExecute="CommandBindingClose_CanExecute" Executed="CommandBindingClose_Executed" />
        <CommandBinding Command="Save" CanExecute="CommandBindingSave_CanExecute" Executed="CommandBindingSave_Executed" />
        <CommandBinding Command="SaveAs" CanExecute="CommandBindingSaveAs_CanExecute" Executed="CommandBindingSaveAs_Executed" />
        <CommandBinding Command="Open" CanExecute="CommandBindingOpen_CanExecute" Executed="CommandBindingOpen_Executed" />
    </Window.CommandBindings>
    <Window.InputBindings>
        <KeyBinding Gesture="Ctrl+Shift+s" Command="SaveAs" />
        <KeyBinding Gesture="Ctrl+Alt+x" Command="Close" />
        <KeyBinding Gesture="Shift+Space" Command="{Binding ConfirmInputCommand}" HotkeyManager.RegisterGlobalHotkey="True"/>
        <KeyBinding Gesture="Shift+Enter" Command="{Binding SkipPlayerTurnCommand}" HotkeyManager.RegisterGlobalHotkey="True" />
        <KeyBinding Gesture="Shift+Esc" Command="{Binding CancelSelectCommand}" HotkeyManager.RegisterGlobalHotkey="True" />
        <KeyBinding Gesture="Shift+Back" Command="{Binding UndoConfirmInputCommand}" HotkeyManager.RegisterGlobalHotkey="True"/>
    </Window.InputBindings>
    <Canvas Name="MainCanvas">
        <Image Name="MainMapImage" Source="{StaticResource WorldMap}" HorizontalAlignment="Left" VerticalAlignment="Top"/>
        <Menu IsMainMenu="True" Name="MainMenu" AllowDrop="True" Background="Transparent" Margin="8" DataContext="{Binding}">
            <Menu.Resources>
                <Style TargetType="MenuItem">
                    <Style.Setters>
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="Foreground" Value="Black" />
                        <Setter Property="FontSize" Value="16" />
                    </Style.Setters>
                </Style>
            </Menu.Resources>
            <MenuItem Header="File" AllowDrop="True" Foreground="{StaticResource OceanHighlight}">
                <MenuItem Command="New" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:MainWindow}}"/>
                <MenuItem Command="Open" />
                <MenuItem Command="Save" />
                <MenuItem Command="SaveAs" />
                <MenuItem Command="Close" />
            </MenuItem>
            <MenuItem Header="Help" AllowDrop="True" Foreground="{StaticResource OceanHighlight}">
                <MenuItem Header="Rules" AllowDrop="True">
                    <TextBlock Text="Hazard! follows the rules of Hasbro, Inc.'s Risk board game, which can be referenced via the following link : https://instructions.hasbro.com/en-us/instruction/Risk-Game" Foreground="Black"/>
                </MenuItem>
                <MenuItem Header="Keyboard Commands" AllowDrop="True">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <TextBlock Grid.ColumnSpan="2" Grid.Row="0" Text="Application Commands" FontWeight="Bold"/>
                        <StackPanel Grid.Column="0" Grid.Row="1">
                            <TextBlock Text="New Game" />
                            <TextBlock Text="Open" />
                            <TextBlock Text="Save As" />
                            <TextBlock Text="Save" />
                            <TextBlock Text="Close" />
                        </StackPanel>
                        <StackPanel Grid.Column="1" Grid.Row="1">
                            <TextBlock Text=" : CTRL + N" />
                            <TextBlock Text=" : CTRL + O" />
                            <TextBlock Text=" : CTRL + SHIFT + S" />
                            <TextBlock Text=" : CTRL + S" />
                            <TextBlock Text=" : CTRL + ALT + X" />
                        </StackPanel>
                        <TextBlock Grid.ColumnSpan="2" Grid.Row="2" Text="Game Commands" FontWeight="Bold" />
                        <StackPanel Grid.Column="0" Grid.Row="3">
                            <TextBlock Text="Confirm" />
                            <TextBlock Text="Undo Confirm" />
                            <TextBlock Text="Cancel Select" />
                            <TextBlock Text="Skip Turn" />
                        </StackPanel>
                        <StackPanel Grid.Column="1" Grid.Row="3">
                            <TextBlock Text=" : SHIFT + SPACE" />
                            <TextBlock Text=" : SHIFT + BACKSPACE" />
                            <TextBlock Text=" : SHIFT + ESC" />
                            <TextBlock Text=" : SHIFT + ENTER" />
                        </StackPanel>
                    </Grid>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="About" AllowDrop="True" Foreground="{StaticResource OceanHighlight}">
                <TextBlock TextWrapping="Wrap" FontWeight="Bold" FontSize="16" Padding="1" xml:space="preserve" Foreground="Black">
                    <TextBlock.Text>
                        All source code © Joshua McKnight, 2024. All rights reserved.  
                        Artwork © Kiah Baxter-Ferguson and Joshua McKnight, 2024. All rights reserved.
                        Hazard! emulates basic game mechanics and rules from 'Risk:The Game of Global Domination' by Hasbro, Inc.
                        'Risk:The Game of Global Domination' is © 2020 Hasbro, Inc. All Rights Reserved.
                    </TextBlock.Text>
                </TextBlock>
            </MenuItem>
        </Menu>
        <Border Canvas.Left="1600" Canvas.Top="0" Height="1062" Width="220" Background="{StaticResource OceanBlack}">
            <StackPanel Name="PlayerDetails" VerticalAlignment="Center"/>
        </Border>
        <Border Canvas.Left="506" Canvas.Top="813" Background="{StaticResource OceanBlackSemiOpaque}" Height="240" Width="219">
            <Border BorderBrush="{StaticResource OceanBlue}" BorderThickness="3" Margin="8" Padding="5">
                <Grid>
                    <Grid.Resources>
                        <Style TargetType="TextBlock">
                            <Style.Setters>
                                <Setter Property="Padding" Value="5" />
                                <Setter Property="Margin" Value="0" />
                                <Setter Property="FontSize" Value="18"/>
                                <Setter Property="FontWeight" Value="Light"/>
                            </Style.Setters>
                        </Style>
                    </Grid.Resources>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="146*" />
                        <ColumnDefinition Width="41*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0" Text="Bonuses" FontSize="20" FontWeight="Medium" Width="96" Grid.ColumnSpan="2" HorizontalAlignment="Center"/>
                    <TextBlock Grid.Row="1" Grid.Column="0" Text="North America" Foreground="{StaticResource #NorthAmerica}" />
                    <TextBlock Grid.Row="2" Grid.Column="0" Text="South America" Foreground="{StaticResource #SouthAmerica}"/>
                    <TextBlock Grid.Row="3" Grid.Column="0" Text="Europe" Foreground="{StaticResource #Europe}" />
                    <TextBlock Grid.Row="4" Grid.Column="0" Text="Africa" Foreground="{StaticResource #Africa}"/>
                    <TextBlock Grid.Row="5" Grid.Column="0" Text="Asia" Foreground="{StaticResource #Asia}" />
                    <TextBlock Grid.Row="6" Grid.Column="0" Text="Oceania" Foreground="{StaticResource #Oceania}" />

                    <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding ContinentBonuses[0], FallbackValue=0}" Foreground="{StaticResource #NorthAmerica}" HorizontalAlignment="Right"/>
                    <TextBlock Grid.Row="2" Grid.Column="1" Text="{Binding ContinentBonuses[1], FallbackValue=0}" Foreground="{StaticResource #SouthAmerica}" HorizontalAlignment="Right"/>
                    <TextBlock Grid.Row="3" Grid.Column="1" Text="{Binding ContinentBonuses[2], FallbackValue=0}" Foreground="{StaticResource #Europe}" HorizontalAlignment="Right"/>
                    <TextBlock Grid.Row="4" Grid.Column="1" Text="{Binding ContinentBonuses[3], FallbackValue=0}" Foreground="{StaticResource #Africa}" HorizontalAlignment="Right"/>
                    <TextBlock Grid.Row="5" Grid.Column="1" Text="{Binding ContinentBonuses[4], FallbackValue=0}" Foreground="{StaticResource #Asia}" HorizontalAlignment="Right"/>
                    <TextBlock Grid.Row="6" Grid.Column="1" Text="{Binding ContinentBonuses[5], FallbackValue=0}" Foreground="{StaticResource #Oceania}" HorizontalAlignment="Right"/>
                </Grid>
            </Border>
        </Border>
        <Border Name="StateInfoBorder" Canvas.Left="645" Canvas.Bottom="25" Height="151" Width="310" Canvas.Top="0" BorderBrush="{StaticResource DeepOceanBlue}" BorderThickness="3" Background="{StaticResource DeepOceanBlue}" HorizontalAlignment="Center" VerticalAlignment="Top">
            <Border BorderBrush="{StaticResource OceanBlue}" BorderThickness="3" Background="{StaticResource OceanBlack}">
                <StackPanel>
                    <Border Name="NoticeBorder" Grid.Row="0">
                        <StackPanel Name="NoticesPanel" HorizontalAlignment="Center">
                            <StackPanel.Resources>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Foreground" Value="FloralWhite" />
                                    <Setter Property="FontSize" Value="20" />
                                    <Setter Property="Padding" Value="2" />
                                </Style>
                            </StackPanel.Resources>
                            <WrapPanel Name="TurnNoticeWrap" HorizontalAlignment="Center">
                                <TextBlock Text="Turn " />
                                <TextBlock Text="{Binding Round}" />
                                <TextBlock Text=": Player " />
                                <TextBlock Text="{Binding DisplayPlayerTurn}" />
                            </WrapPanel>
                            <Line Width="50" Height="3" StrokeThickness="5" Fill="Beige" />
                            <RibbonTwoLineText Name="PhaseNotice" FontSize="30" HorizontalAlignment="Center">
                                <RibbonTwoLineText.Style>
                                    <Style TargetType="RibbonTwoLineText">
                                        <Style.Setters>
                                            <Setter Property="Text" Value="{Binding CurrentPhase}" />
                                        </Style.Setters>
                                        <Style.Triggers>
                                            <DataTrigger Value="{x:Static enum:GamePhase.DefaultSetup}" Binding="{Binding CurrentPhase}">
                                                <DataTrigger.Setters>
                                                    <Setter Property="Text" Value="Game Setup" />
                                                </DataTrigger.Setters>
                                            </DataTrigger>
                                            <DataTrigger Value="{x:Static enum:GamePhase.TwoPlayerSetup}" Binding="{Binding CurrentPhase}">
                                                <DataTrigger.Setters>
                                                    <Setter Property="Text" Value="Game Setup" />
                                                </DataTrigger.Setters>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </RibbonTwoLineText.Style>
                            </RibbonTwoLineText>
                        </StackPanel>
                    </Border>
                    <TextBlock Grid.Row="1" Name="PhaseHintText" Style="{StaticResource PhaseHintTextStyle}" HorizontalAlignment="Center" TextAlignment="Center" TextWrapping="Wrap" Foreground="Beige" FontSize="18">
                        <TextBlock.Triggers>
                            <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:2" BeginTime="0:0:0" Storyboard.TargetProperty="Opacity" From="1" To="0" AutoReverse="True" RepeatBehavior="Forever">
                                            <DoubleAnimation.AccelerationRatio>
                                                .9
                                            </DoubleAnimation.AccelerationRatio>
                                            <DoubleAnimation.DecelerationRatio>
                                                .1
                                            </DoubleAnimation.DecelerationRatio>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </TextBlock.Triggers>
                    </TextBlock>
                </StackPanel>
            </Border>
        </Border>
    </Canvas>
</Window>