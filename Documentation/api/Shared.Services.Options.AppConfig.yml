### YamlMime:ManagedReference
items:
- uid: Shared.Services.Options.AppConfig
  commentId: T:Shared.Services.Options.AppConfig
  id: AppConfig
  parent: Shared.Services.Options
  children:
  - Shared.Services.Options.AppConfig.AppPath
  - Shared.Services.Options.AppConfig.CardDataSearchString
  - Shared.Services.Options.AppConfig.DataFileMap
  - Shared.Services.Options.AppConfig.SoundFileMap
  langs:
  - csharp
  - vb
  name: AppConfig
  nameWithType: AppConfig
  fullName: Shared.Services.Options.AppConfig
  type: Class
  source:
    remote:
      path: Shared/Services/Options/AppConfig.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: AppConfig
    path: ../Shared/Services/Options/AppConfig.cs
    startLine: 4
  assemblies:
  - Model
  namespace: Shared.Services.Options
  summary: Contains values needed for run-time Options to be set and configured by the DI system.
  example: []
  syntax:
    content: public class AppConfig
    content.vb: Public Class AppConfig
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Shared.Services.Options.AppConfig.AppPath
  commentId: P:Shared.Services.Options.AppConfig.AppPath
  id: AppPath
  parent: Shared.Services.Options.AppConfig
  langs:
  - csharp
  - vb
  name: AppPath
  nameWithType: AppConfig.AppPath
  fullName: Shared.Services.Options.AppConfig.AppPath
  type: Property
  source:
    remote:
      path: Shared/Services/Options/AppConfig.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: AppPath
    path: ../Shared/Services/Options/AppConfig.cs
    startLine: 12
  assemblies:
  - Model
  namespace: Shared.Services.Options
  summary: Gets or sets the path of the current running Application's root folder.
  remarks: In developer mode, it should be set by <xref href="System.IO.Path.GetDirectoryName(System.String)" data-throw-if-not-resolved="false"></xref> of <xref href="System.Reflection.Assembly.GetExecutingAssembly" data-throw-if-not-resolved="false"></xref>; in production, to the MSIX package installation path (since containerized).
  example: []
  syntax:
    content: public string AppPath { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property AppPath As String
  overload: Shared.Services.Options.AppConfig.AppPath*
- uid: Shared.Services.Options.AppConfig.DataFileMap
  commentId: P:Shared.Services.Options.AppConfig.DataFileMap
  id: DataFileMap
  parent: Shared.Services.Options.AppConfig
  langs:
  - csharp
  - vb
  name: DataFileMap
  nameWithType: AppConfig.DataFileMap
  fullName: Shared.Services.Options.AppConfig.DataFileMap
  type: Property
  source:
    remote:
      path: Shared/Services/Options/AppConfig.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: DataFileMap
    path: ../Shared/Services/Options/AppConfig.cs
    startLine: 20
  assemblies:
  - Model
  namespace: Shared.Services.Options
  summary: Gets or sets a map of data file paths keyed by their filenames (with extension).
  example: []
  syntax:
    content: public Dictionary<string, string> DataFileMap { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.String}
      description: >-
        Each key should be a data file name with extension, read from the 'DataFileNames' property of 'appsettings.json.' <br />

        Their values are the full, absolute paths to these files, determined at runtime.
    content.vb: Public Property DataFileMap As Dictionary(Of String, String)
  overload: Shared.Services.Options.AppConfig.DataFileMap*
- uid: Shared.Services.Options.AppConfig.SoundFileMap
  commentId: P:Shared.Services.Options.AppConfig.SoundFileMap
  id: SoundFileMap
  parent: Shared.Services.Options.AppConfig
  langs:
  - csharp
  - vb
  name: SoundFileMap
  nameWithType: AppConfig.SoundFileMap
  fullName: Shared.Services.Options.AppConfig.SoundFileMap
  type: Property
  source:
    remote:
      path: Shared/Services/Options/AppConfig.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: SoundFileMap
    path: ../Shared/Services/Options/AppConfig.cs
    startLine: 28
  assemblies:
  - Model
  namespace: Shared.Services.Options
  summary: Gets or sets a map of sound file paths keyed by their filenames (with extension).
  example: []
  syntax:
    content: public Dictionary<string, string> SoundFileMap { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.String}
      description: >-
        Each key should be a sound file name with extension, read from the 'SoundFileNames' property of 'appsettings.json.' <br />

        Their values are the full, absolute paths to these files, determined at runtime.
    content.vb: Public Property SoundFileMap As Dictionary(Of String, String)
  overload: Shared.Services.Options.AppConfig.SoundFileMap*
- uid: Shared.Services.Options.AppConfig.CardDataSearchString
  commentId: P:Shared.Services.Options.AppConfig.CardDataSearchString
  id: CardDataSearchString
  parent: Shared.Services.Options.AppConfig
  langs:
  - csharp
  - vb
  name: CardDataSearchString
  nameWithType: AppConfig.CardDataSearchString
  fullName: Shared.Services.Options.AppConfig.CardDataSearchString
  type: Property
  source:
    remote:
      path: Shared/Services/Options/AppConfig.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: CardDataSearchString
    path: ../Shared/Services/Options/AppConfig.cs
    startLine: 35
  assemblies:
  - Model
  namespace: Shared.Services.Options
  summary: Gets or sets the string used to search for CardSet datafiles at startup..
  remarks: See <xref href="Model.DataAccess.AssetFetcher.FetchCardSets" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public string CardDataSearchString { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property CardDataSearchString As String
  overload: Shared.Services.Options.AppConfig.CardDataSearchString*
references:
- uid: Shared.Services.Options
  commentId: N:Shared.Services.Options
  href: Shared.html
  name: Shared.Services.Options
  nameWithType: Shared.Services.Options
  fullName: Shared.Services.Options
  spec.csharp:
  - uid: Shared
    name: Shared
    href: Shared.html
  - name: .
  - uid: Shared.Services
    name: Services
    href: Shared.Services.html
  - name: .
  - uid: Shared.Services.Options
    name: Options
    href: Shared.Services.Options.html
  spec.vb:
  - uid: Shared
    name: Shared
    href: Shared.html
  - name: .
  - uid: Shared.Services
    name: Services
    href: Shared.Services.html
  - name: .
  - uid: Shared.Services.Options
    name: Options
    href: Shared.Services.Options.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.IO.Path.GetDirectoryName(System.String)
  commentId: M:System.IO.Path.GetDirectoryName(System.String)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.path.getdirectoryname#system-io-path-getdirectoryname(system-string)
  name: GetDirectoryName(string)
  nameWithType: Path.GetDirectoryName(string)
  fullName: System.IO.Path.GetDirectoryName(string)
  nameWithType.vb: Path.GetDirectoryName(String)
  fullName.vb: System.IO.Path.GetDirectoryName(String)
  name.vb: GetDirectoryName(String)
  spec.csharp:
  - uid: System.IO.Path.GetDirectoryName(System.String)
    name: GetDirectoryName
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.path.getdirectoryname#system-io-path-getdirectoryname(system-string)
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: System.IO.Path.GetDirectoryName(System.String)
    name: GetDirectoryName
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.path.getdirectoryname#system-io-path-getdirectoryname(system-string)
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Reflection.Assembly.GetExecutingAssembly
  commentId: M:System.Reflection.Assembly.GetExecutingAssembly
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.reflection.assembly.getexecutingassembly
  name: GetExecutingAssembly()
  nameWithType: Assembly.GetExecutingAssembly()
  fullName: System.Reflection.Assembly.GetExecutingAssembly()
  spec.csharp:
  - uid: System.Reflection.Assembly.GetExecutingAssembly
    name: GetExecutingAssembly
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.assembly.getexecutingassembly
  - name: (
  - name: )
  spec.vb:
  - uid: System.Reflection.Assembly.GetExecutingAssembly
    name: GetExecutingAssembly
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.assembly.getexecutingassembly
  - name: (
  - name: )
- uid: Shared.Services.Options.AppConfig.AppPath*
  commentId: Overload:Shared.Services.Options.AppConfig.AppPath
  href: Shared.Services.Options.AppConfig.html#Shared_Services_Options_AppConfig_AppPath
  name: AppPath
  nameWithType: AppConfig.AppPath
  fullName: Shared.Services.Options.AppConfig.AppPath
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Shared.Services.Options.AppConfig.DataFileMap*
  commentId: Overload:Shared.Services.Options.AppConfig.DataFileMap
  href: Shared.Services.Options.AppConfig.html#Shared_Services_Options_AppConfig_DataFileMap
  name: DataFileMap
  nameWithType: AppConfig.DataFileMap
  fullName: Shared.Services.Options.AppConfig.DataFileMap
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<string, string>
  nameWithType: Dictionary<string, string>
  fullName: System.Collections.Generic.Dictionary<string, string>
  nameWithType.vb: Dictionary(Of String, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of String, String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Shared.Services.Options.AppConfig.SoundFileMap*
  commentId: Overload:Shared.Services.Options.AppConfig.SoundFileMap
  href: Shared.Services.Options.AppConfig.html#Shared_Services_Options_AppConfig_SoundFileMap
  name: SoundFileMap
  nameWithType: AppConfig.SoundFileMap
  fullName: Shared.Services.Options.AppConfig.SoundFileMap
- uid: Model.DataAccess.AssetFetcher.FetchCardSets
  commentId: M:Model.DataAccess.AssetFetcher.FetchCardSets
  href: Model.DataAccess.AssetFetcher.html#Model_DataAccess_AssetFetcher_FetchCardSets
  name: FetchCardSets()
  nameWithType: AssetFetcher.FetchCardSets()
  fullName: Model.DataAccess.AssetFetcher.FetchCardSets()
  spec.csharp:
  - uid: Model.DataAccess.AssetFetcher.FetchCardSets
    name: FetchCardSets
    href: Model.DataAccess.AssetFetcher.html#Model_DataAccess_AssetFetcher_FetchCardSets
  - name: (
  - name: )
  spec.vb:
  - uid: Model.DataAccess.AssetFetcher.FetchCardSets
    name: FetchCardSets
    href: Model.DataAccess.AssetFetcher.html#Model_DataAccess_AssetFetcher_FetchCardSets
  - name: (
  - name: )
- uid: Shared.Services.Options.AppConfig.CardDataSearchString*
  commentId: Overload:Shared.Services.Options.AppConfig.CardDataSearchString
  href: Shared.Services.Options.AppConfig.html#Shared_Services_Options_AppConfig_CardDataSearchString
  name: CardDataSearchString
  nameWithType: AppConfig.CardDataSearchString
  fullName: Shared.Services.Options.AppConfig.CardDataSearchString
