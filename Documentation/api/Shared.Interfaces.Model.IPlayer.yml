### YamlMime:ManagedReference
items:
- uid: Shared.Interfaces.Model.IPlayer
  commentId: T:Shared.Interfaces.Model.IPlayer
  id: IPlayer
  parent: Shared.Interfaces.Model
  children:
  - Shared.Interfaces.Model.IPlayer.AddCard(Shared.Interfaces.Model.ICard)
  - Shared.Interfaces.Model.IPlayer.AddTerritory(Shared.Geography.Enums.TerrID)
  - Shared.Interfaces.Model.IPlayer.ArmyBonus
  - Shared.Interfaces.Model.IPlayer.ArmyPool
  - Shared.Interfaces.Model.IPlayer.ContinentBonus
  - Shared.Interfaces.Model.IPlayer.ControlledTerritories
  - Shared.Interfaces.Model.IPlayer.FindCardSet
  - Shared.Interfaces.Model.IPlayer.GetControlledTargets(Shared.Geography.Enums.TerrID[])
  - Shared.Interfaces.Model.IPlayer.GetsTradeBonus(System.Int32)
  - Shared.Interfaces.Model.IPlayer.Hand
  - Shared.Interfaces.Model.IPlayer.HasCardSet
  - Shared.Interfaces.Model.IPlayer.Name
  - Shared.Interfaces.Model.IPlayer.Number
  - Shared.Interfaces.Model.IPlayer.PlayerChanged
  - Shared.Interfaces.Model.IPlayer.PlayerLost
  - Shared.Interfaces.Model.IPlayer.RemoveCard(System.Int32)
  - Shared.Interfaces.Model.IPlayer.RemoveTerritory(Shared.Geography.Enums.TerrID)
  langs:
  - csharp
  - vb
  name: IPlayer
  nameWithType: IPlayer
  fullName: Shared.Interfaces.Model.IPlayer
  type: Interface
  source:
    remote:
      path: Shared/Interfaces/Model/IPlayer.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: IPlayer
    path: ../Shared/Interfaces/Model/IPlayer.cs
    startLine: 6
  assemblies:
  - Model
  namespace: Shared.Interfaces.Model
  summary: Represents a player in the game.
  example: []
  syntax:
    content: 'public interface IPlayer : IBinarySerializable'
    content.vb: Public Interface IPlayer Inherits IBinarySerializable
  inheritedMembers:
  - Shared.Interfaces.Model.IBinarySerializable.LoadFromBinary(System.IO.BinaryReader)
  - Shared.Interfaces.Model.IBinarySerializable.GetBinarySerials
- uid: Shared.Interfaces.Model.IPlayer.PlayerChanged
  commentId: E:Shared.Interfaces.Model.IPlayer.PlayerChanged
  id: PlayerChanged
  parent: Shared.Interfaces.Model.IPlayer
  langs:
  - csharp
  - vb
  name: PlayerChanged
  nameWithType: IPlayer.PlayerChanged
  fullName: Shared.Interfaces.Model.IPlayer.PlayerChanged
  type: Event
  source:
    remote:
      path: Shared/Interfaces/Model/IPlayer.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: PlayerChanged
    path: ../Shared/Interfaces/Model/IPlayer.cs
    startLine: 11
  assemblies:
  - Model
  namespace: Shared.Interfaces.Model
  summary: Should fire when this IPlayer's property values change.
  example: []
  syntax:
    content: event EventHandler<IPlayerChangedEventArgs>? PlayerChanged
    return:
      type: System.EventHandler{Shared.Interfaces.Model.IPlayerChangedEventArgs}
    content.vb: Event PlayerChanged As EventHandler(Of IPlayerChangedEventArgs)
- uid: Shared.Interfaces.Model.IPlayer.PlayerLost
  commentId: E:Shared.Interfaces.Model.IPlayer.PlayerLost
  id: PlayerLost
  parent: Shared.Interfaces.Model.IPlayer
  langs:
  - csharp
  - vb
  name: PlayerLost
  nameWithType: IPlayer.PlayerLost
  fullName: Shared.Interfaces.Model.IPlayer.PlayerLost
  type: Event
  source:
    remote:
      path: Shared/Interfaces/Model/IPlayer.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: PlayerLost
    path: ../Shared/Interfaces/Model/IPlayer.cs
    startLine: 15
  assemblies:
  - Model
  namespace: Shared.Interfaces.Model
  summary: Fires when this IPlayer has lost the game (by default, when they control no territories).
  example: []
  syntax:
    content: event EventHandler? PlayerLost
    return:
      type: System.EventHandler
    content.vb: Event PlayerLost As EventHandler
- uid: Shared.Interfaces.Model.IPlayer.Name
  commentId: P:Shared.Interfaces.Model.IPlayer.Name
  id: Name
  parent: Shared.Interfaces.Model.IPlayer
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: IPlayer.Name
  fullName: Shared.Interfaces.Model.IPlayer.Name
  type: Property
  source:
    remote:
      path: Shared/Interfaces/Model/IPlayer.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: Name
    path: ../Shared/Interfaces/Model/IPlayer.cs
    startLine: 25
  assemblies:
  - Model
  namespace: Shared.Interfaces.Model
  summary: Gets or sets the name of the player.
  example: []
  syntax:
    content: string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property Name As String
  overload: Shared.Interfaces.Model.IPlayer.Name*
- uid: Shared.Interfaces.Model.IPlayer.Number
  commentId: P:Shared.Interfaces.Model.IPlayer.Number
  id: Number
  parent: Shared.Interfaces.Model.IPlayer
  langs:
  - csharp
  - vb
  name: Number
  nameWithType: IPlayer.Number
  fullName: Shared.Interfaces.Model.IPlayer.Number
  type: Property
  source:
    remote:
      path: Shared/Interfaces/Model/IPlayer.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: Number
    path: ../Shared/Interfaces/Model/IPlayer.cs
    startLine: 32
  assemblies:
  - Model
  namespace: Shared.Interfaces.Model
  summary: Gets the number of the player.
  example: []
  syntax:
    content: int Number { get; }
    parameters: []
    return:
      type: System.Int32
      description: An integer from 0-5.
    content.vb: ReadOnly Property Number As Integer
  overload: Shared.Interfaces.Model.IPlayer.Number*
- uid: Shared.Interfaces.Model.IPlayer.HasCardSet
  commentId: P:Shared.Interfaces.Model.IPlayer.HasCardSet
  id: HasCardSet
  parent: Shared.Interfaces.Model.IPlayer
  langs:
  - csharp
  - vb
  name: HasCardSet
  nameWithType: IPlayer.HasCardSet
  fullName: Shared.Interfaces.Model.IPlayer.HasCardSet
  type: Property
  source:
    remote:
      path: Shared/Interfaces/Model/IPlayer.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: HasCardSet
    path: ../Shared/Interfaces/Model/IPlayer.cs
    startLine: 38
  assemblies:
  - Model
  namespace: Shared.Interfaces.Model
  summary: Gets a flag indicating whether the player holds a valid trade set of cards.
  example: []
  syntax:
    content: bool HasCardSet { get; set; }
    parameters: []
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if <xref href="Shared.Interfaces.Model.IPlayer.Hand" data-throw-if-not-resolved="false"></xref> contains cards that satisfy their set's <xref href="Shared.Interfaces.Model.ICardSet.IsValidTrade(Shared.Interfaces.Model.ICard%5b%5d)" data-throw-if-not-resolved="false"></xref>; otherwise <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Property HasCardSet As Boolean
  overload: Shared.Interfaces.Model.IPlayer.HasCardSet*
- uid: Shared.Interfaces.Model.IPlayer.ArmyBonus
  commentId: P:Shared.Interfaces.Model.IPlayer.ArmyBonus
  id: ArmyBonus
  parent: Shared.Interfaces.Model.IPlayer
  langs:
  - csharp
  - vb
  name: ArmyBonus
  nameWithType: IPlayer.ArmyBonus
  fullName: Shared.Interfaces.Model.IPlayer.ArmyBonus
  type: Property
  source:
    remote:
      path: Shared/Interfaces/Model/IPlayer.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: ArmyBonus
    path: ../Shared/Interfaces/Model/IPlayer.cs
    startLine: 49
  assemblies:
  - Model
  namespace: Shared.Interfaces.Model
  summary: Gets the bonus a player receives to their army pool each turn.
  remarks: Should be recalculated at the start of each turn (during <xref href="Shared.Enums.GamePhase.Place" data-throw-if-not-resolved="false"></xref>)
  example: []
  syntax:
    content: int ArmyBonus { get; }
    parameters: []
    return:
      type: System.Int32
      description: >-
        The default rules never allow this to fall below 3 (<xref href="Shared.Interfaces.Model.IRuleValues.MinimumArmyBonus" data-throw-if-not-resolved="false"></xref>).<br />

        It is calculated by <xref href="Shared.Interfaces.Model.IRuleValues.CalculateArmyBonus(System.Int32%2cSystem.Collections.Generic.List%7bShared.Geography.Enums.ContID%7d)" data-throw-if-not-resolved="false"></xref>.
    content.vb: ReadOnly Property ArmyBonus As Integer
  overload: Shared.Interfaces.Model.IPlayer.ArmyBonus*
- uid: Shared.Interfaces.Model.IPlayer.ContinentBonus
  commentId: P:Shared.Interfaces.Model.IPlayer.ContinentBonus
  id: ContinentBonus
  parent: Shared.Interfaces.Model.IPlayer
  langs:
  - csharp
  - vb
  name: ContinentBonus
  nameWithType: IPlayer.ContinentBonus
  fullName: Shared.Interfaces.Model.IPlayer.ContinentBonus
  type: Property
  source:
    remote:
      path: Shared/Interfaces/Model/IPlayer.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: ContinentBonus
    path: ../Shared/Interfaces/Model/IPlayer.cs
    startLine: 56
  assemblies:
  - Model
  namespace: Shared.Interfaces.Model
  summary: Gets or sets the increase to <xref href="Shared.Interfaces.Model.IPlayer.ArmyBonus" data-throw-if-not-resolved="false"></xref> a player receives from controlling continents.
  example: []
  syntax:
    content: int ContinentBonus { get; set; }
    parameters: []
    return:
      type: System.Int32
      description: A natural number (0 or positive integer) determined by <xref href="Shared.Interfaces.Model.IRuleValues.ContinentBonus" data-throw-if-not-resolved="false"></xref> and the extent of the player's <xref href="Shared.Interfaces.Model.IPlayer.ControlledTerritories" data-throw-if-not-resolved="false"></xref>.
    content.vb: Property ContinentBonus As Integer
  overload: Shared.Interfaces.Model.IPlayer.ContinentBonus*
- uid: Shared.Interfaces.Model.IPlayer.ArmyPool
  commentId: P:Shared.Interfaces.Model.IPlayer.ArmyPool
  id: ArmyPool
  parent: Shared.Interfaces.Model.IPlayer
  langs:
  - csharp
  - vb
  name: ArmyPool
  nameWithType: IPlayer.ArmyPool
  fullName: Shared.Interfaces.Model.IPlayer.ArmyPool
  type: Property
  source:
    remote:
      path: Shared/Interfaces/Model/IPlayer.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: ArmyPool
    path: ../Shared/Interfaces/Model/IPlayer.cs
    startLine: 63
  assemblies:
  - Model
  namespace: Shared.Interfaces.Model
  summary: Gets or sets the current number of armies a player has left to place.
  example: []
  syntax:
    content: int ArmyPool { get; set; }
    parameters: []
    return:
      type: System.Int32
      description: An integer with an initial value equal to <xref href="Shared.Interfaces.Model.IPlayer.ArmyBonus" data-throw-if-not-resolved="false"></xref> that is reduced when an <xref href="Shared.Interfaces.Model.IPlayer" data-throw-if-not-resolved="false"></xref> places an army during <xref href="Shared.Enums.GamePhase.Place" data-throw-if-not-resolved="false"></xref>.
    content.vb: Property ArmyPool As Integer
  overload: Shared.Interfaces.Model.IPlayer.ArmyPool*
- uid: Shared.Interfaces.Model.IPlayer.ControlledTerritories
  commentId: P:Shared.Interfaces.Model.IPlayer.ControlledTerritories
  id: ControlledTerritories
  parent: Shared.Interfaces.Model.IPlayer
  langs:
  - csharp
  - vb
  name: ControlledTerritories
  nameWithType: IPlayer.ControlledTerritories
  fullName: Shared.Interfaces.Model.IPlayer.ControlledTerritories
  type: Property
  source:
    remote:
      path: Shared/Interfaces/Model/IPlayer.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: ControlledTerritories
    path: ../Shared/Interfaces/Model/IPlayer.cs
    startLine: 67
  assemblies:
  - Model
  namespace: Shared.Interfaces.Model
  summary: Gets the territories controlled by the player.
  example: []
  syntax:
    content: HashSet<TerrID> ControlledTerritories { get; }
    parameters: []
    return:
      type: System.Collections.Generic.HashSet{Shared.Geography.Enums.TerrID}
    content.vb: ReadOnly Property ControlledTerritories As HashSet(Of TerrID)
  overload: Shared.Interfaces.Model.IPlayer.ControlledTerritories*
- uid: Shared.Interfaces.Model.IPlayer.Hand
  commentId: P:Shared.Interfaces.Model.IPlayer.Hand
  id: Hand
  parent: Shared.Interfaces.Model.IPlayer
  langs:
  - csharp
  - vb
  name: Hand
  nameWithType: IPlayer.Hand
  fullName: Shared.Interfaces.Model.IPlayer.Hand
  type: Property
  source:
    remote:
      path: Shared/Interfaces/Model/IPlayer.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: Hand
    path: ../Shared/Interfaces/Model/IPlayer.cs
    startLine: 71
  assemblies:
  - Model
  namespace: Shared.Interfaces.Model
  summary: Gets a list of cards in the player's hand.
  example: []
  syntax:
    content: List<ICard> Hand { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Shared.Interfaces.Model.ICard}
    content.vb: ReadOnly Property Hand As List(Of ICard)
  overload: Shared.Interfaces.Model.IPlayer.Hand*
- uid: Shared.Interfaces.Model.IPlayer.GetsTradeBonus(System.Int32)
  commentId: M:Shared.Interfaces.Model.IPlayer.GetsTradeBonus(System.Int32)
  id: GetsTradeBonus(System.Int32)
  parent: Shared.Interfaces.Model.IPlayer
  langs:
  - csharp
  - vb
  name: GetsTradeBonus(int)
  nameWithType: IPlayer.GetsTradeBonus(int)
  fullName: Shared.Interfaces.Model.IPlayer.GetsTradeBonus(int)
  type: Method
  source:
    remote:
      path: Shared/Interfaces/Model/IPlayer.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: GetsTradeBonus
    path: ../Shared/Interfaces/Model/IPlayer.cs
    startLine: 78
  assemblies:
  - Model
  namespace: Shared.Interfaces.Model
  summary: Adds the trade-in bonus to <xref href="Shared.Interfaces.Model.IPlayer.ArmyPool" data-throw-if-not-resolved="false"></xref> when the player trades in cards.
  example: []
  syntax:
    content: void GetsTradeBonus(int tradeInBonus)
    parameters:
    - id: tradeInBonus
      type: System.Int32
      description: The bonus granted.
    content.vb: Sub GetsTradeBonus(tradeInBonus As Integer)
  overload: Shared.Interfaces.Model.IPlayer.GetsTradeBonus*
  nameWithType.vb: IPlayer.GetsTradeBonus(Integer)
  fullName.vb: Shared.Interfaces.Model.IPlayer.GetsTradeBonus(Integer)
  name.vb: GetsTradeBonus(Integer)
- uid: Shared.Interfaces.Model.IPlayer.GetControlledTargets(Shared.Geography.Enums.TerrID[])
  commentId: M:Shared.Interfaces.Model.IPlayer.GetControlledTargets(Shared.Geography.Enums.TerrID[])
  id: GetControlledTargets(Shared.Geography.Enums.TerrID[])
  parent: Shared.Interfaces.Model.IPlayer
  langs:
  - csharp
  - vb
  name: GetControlledTargets(TerrID[])
  nameWithType: IPlayer.GetControlledTargets(TerrID[])
  fullName: Shared.Interfaces.Model.IPlayer.GetControlledTargets(Shared.Geography.Enums.TerrID[])
  type: Method
  source:
    remote:
      path: Shared/Interfaces/Model/IPlayer.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: GetControlledTargets
    path: ../Shared/Interfaces/Model/IPlayer.cs
    startLine: 84
  assemblies:
  - Model
  namespace: Shared.Interfaces.Model
  summary: Gets territories controlled by this player from among a given set.
  example: []
  syntax:
    content: TerrID[] GetControlledTargets(TerrID[] targets)
    parameters:
    - id: targets
      type: Shared.Geography.Enums.TerrID[]
      description: The territories to match.
    return:
      type: Shared.Geography.Enums.TerrID[]
      description: Those territories from among <code class="paramref">targets</code> controlled by this player.
    content.vb: Function GetControlledTargets(targets As TerrID()) As TerrID()
  overload: Shared.Interfaces.Model.IPlayer.GetControlledTargets*
  nameWithType.vb: IPlayer.GetControlledTargets(TerrID())
  fullName.vb: Shared.Interfaces.Model.IPlayer.GetControlledTargets(Shared.Geography.Enums.TerrID())
  name.vb: GetControlledTargets(TerrID())
- uid: Shared.Interfaces.Model.IPlayer.FindCardSet
  commentId: M:Shared.Interfaces.Model.IPlayer.FindCardSet
  id: FindCardSet
  parent: Shared.Interfaces.Model.IPlayer
  langs:
  - csharp
  - vb
  name: FindCardSet()
  nameWithType: IPlayer.FindCardSet()
  fullName: Shared.Interfaces.Model.IPlayer.FindCardSet()
  type: Method
  source:
    remote:
      path: Shared/Interfaces/Model/IPlayer.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: FindCardSet
    path: ../Shared/Interfaces/Model/IPlayer.cs
    startLine: 92
  assemblies:
  - Model
  namespace: Shared.Interfaces.Model
  summary: Finds trade-in card sets in the player's hand.
  remarks: >-
    Determines whether the player holds a set of <xref href="Shared.Interfaces.Model.ICard" data-throw-if-not-resolved="false"></xref>s that are a tradeable set according to<br />

    <xref href="Shared.Interfaces.Model.ICardSet.FindTradeSets(Shared.Interfaces.Model.ICard%5b%5d)" data-throw-if-not-resolved="false"></xref> and <xref href="Shared.Interfaces.Model.ICardSet.IsValidTrade(Shared.Interfaces.Model.ICard%5b%5d)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: void FindCardSet()
    content.vb: Sub FindCardSet()
  overload: Shared.Interfaces.Model.IPlayer.FindCardSet*
- uid: Shared.Interfaces.Model.IPlayer.AddTerritory(Shared.Geography.Enums.TerrID)
  commentId: M:Shared.Interfaces.Model.IPlayer.AddTerritory(Shared.Geography.Enums.TerrID)
  id: AddTerritory(Shared.Geography.Enums.TerrID)
  parent: Shared.Interfaces.Model.IPlayer
  langs:
  - csharp
  - vb
  name: AddTerritory(TerrID)
  nameWithType: IPlayer.AddTerritory(TerrID)
  fullName: Shared.Interfaces.Model.IPlayer.AddTerritory(Shared.Geography.Enums.TerrID)
  type: Method
  source:
    remote:
      path: Shared/Interfaces/Model/IPlayer.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: AddTerritory
    path: ../Shared/Interfaces/Model/IPlayer.cs
    startLine: 98
  assemblies:
  - Model
  namespace: Shared.Interfaces.Model
  summary: Adds a territory to this player's control.
  example: []
  syntax:
    content: bool AddTerritory(TerrID territory)
    parameters:
    - id: territory
      type: Shared.Geography.Enums.TerrID
      description: The territory to add.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if successfully added; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Function AddTerritory(territory As TerrID) As Boolean
  overload: Shared.Interfaces.Model.IPlayer.AddTerritory*
- uid: Shared.Interfaces.Model.IPlayer.RemoveTerritory(Shared.Geography.Enums.TerrID)
  commentId: M:Shared.Interfaces.Model.IPlayer.RemoveTerritory(Shared.Geography.Enums.TerrID)
  id: RemoveTerritory(Shared.Geography.Enums.TerrID)
  parent: Shared.Interfaces.Model.IPlayer
  langs:
  - csharp
  - vb
  name: RemoveTerritory(TerrID)
  nameWithType: IPlayer.RemoveTerritory(TerrID)
  fullName: Shared.Interfaces.Model.IPlayer.RemoveTerritory(Shared.Geography.Enums.TerrID)
  type: Method
  source:
    remote:
      path: Shared/Interfaces/Model/IPlayer.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: RemoveTerritory
    path: ../Shared/Interfaces/Model/IPlayer.cs
    startLine: 107
  assemblies:
  - Model
  namespace: Shared.Interfaces.Model
  summary: Removes a territory from this player's control.
  remarks: Also fires <xref href="Shared.Interfaces.Model.IPlayer.PlayerLost" data-throw-if-not-resolved="false"></xref> if the count of <xref href="Shared.Interfaces.Model.IPlayer.ControlledTerritories" data-throw-if-not-resolved="false"></xref> falls to 0.
  example: []
  syntax:
    content: bool RemoveTerritory(TerrID territory)
    parameters:
    - id: territory
      type: Shared.Geography.Enums.TerrID
      description: The territory to remove.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if successfully removed; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Function RemoveTerritory(territory As TerrID) As Boolean
  overload: Shared.Interfaces.Model.IPlayer.RemoveTerritory*
- uid: Shared.Interfaces.Model.IPlayer.AddCard(Shared.Interfaces.Model.ICard)
  commentId: M:Shared.Interfaces.Model.IPlayer.AddCard(Shared.Interfaces.Model.ICard)
  id: AddCard(Shared.Interfaces.Model.ICard)
  parent: Shared.Interfaces.Model.IPlayer
  langs:
  - csharp
  - vb
  name: AddCard(ICard)
  nameWithType: IPlayer.AddCard(ICard)
  fullName: Shared.Interfaces.Model.IPlayer.AddCard(Shared.Interfaces.Model.ICard)
  type: Method
  source:
    remote:
      path: Shared/Interfaces/Model/IPlayer.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: AddCard
    path: ../Shared/Interfaces/Model/IPlayer.cs
    startLine: 112
  assemblies:
  - Model
  namespace: Shared.Interfaces.Model
  summary: Adds a card to this player's <xref href="Shared.Interfaces.Model.IPlayer.Hand" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: void AddCard(ICard card)
    parameters:
    - id: card
      type: Shared.Interfaces.Model.ICard
      description: The card to add.
    content.vb: Sub AddCard(card As ICard)
  overload: Shared.Interfaces.Model.IPlayer.AddCard*
- uid: Shared.Interfaces.Model.IPlayer.RemoveCard(System.Int32)
  commentId: M:Shared.Interfaces.Model.IPlayer.RemoveCard(System.Int32)
  id: RemoveCard(System.Int32)
  parent: Shared.Interfaces.Model.IPlayer
  langs:
  - csharp
  - vb
  name: RemoveCard(int)
  nameWithType: IPlayer.RemoveCard(int)
  fullName: Shared.Interfaces.Model.IPlayer.RemoveCard(int)
  type: Method
  source:
    remote:
      path: Shared/Interfaces/Model/IPlayer.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: RemoveCard
    path: ../Shared/Interfaces/Model/IPlayer.cs
    startLine: 118
  assemblies:
  - Model
  namespace: Shared.Interfaces.Model
  summary: Removes a card from this player's <xref href="Shared.Interfaces.Model.IPlayer.Hand" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: bool RemoveCard(int handIndex)
    parameters:
    - id: handIndex
      type: System.Int32
      description: The <xref href="System.Int32?text=index" data-throw-if-not-resolved="false"></xref> of <xref href="Shared.Interfaces.Model.IPlayer.Hand" data-throw-if-not-resolved="false"></xref> which holds the card to be removed.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if successfully removed; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Function RemoveCard(handIndex As Integer) As Boolean
  overload: Shared.Interfaces.Model.IPlayer.RemoveCard*
  nameWithType.vb: IPlayer.RemoveCard(Integer)
  fullName.vb: Shared.Interfaces.Model.IPlayer.RemoveCard(Integer)
  name.vb: RemoveCard(Integer)
references:
- uid: Shared.Interfaces.Model
  commentId: N:Shared.Interfaces.Model
  href: Shared.html
  name: Shared.Interfaces.Model
  nameWithType: Shared.Interfaces.Model
  fullName: Shared.Interfaces.Model
  spec.csharp:
  - uid: Shared
    name: Shared
    href: Shared.html
  - name: .
  - uid: Shared.Interfaces
    name: Interfaces
    href: Shared.Interfaces.html
  - name: .
  - uid: Shared.Interfaces.Model
    name: Model
    href: Shared.Interfaces.Model.html
  spec.vb:
  - uid: Shared
    name: Shared
    href: Shared.html
  - name: .
  - uid: Shared.Interfaces
    name: Interfaces
    href: Shared.Interfaces.html
  - name: .
  - uid: Shared.Interfaces.Model
    name: Model
    href: Shared.Interfaces.Model.html
- uid: Shared.Interfaces.Model.IBinarySerializable.LoadFromBinary(System.IO.BinaryReader)
  commentId: M:Shared.Interfaces.Model.IBinarySerializable.LoadFromBinary(System.IO.BinaryReader)
  parent: Shared.Interfaces.Model.IBinarySerializable
  isExternal: true
  href: Shared.Interfaces.Model.IBinarySerializable.html#Shared_Interfaces_Model_IBinarySerializable_LoadFromBinary_System_IO_BinaryReader_
  name: LoadFromBinary(BinaryReader)
  nameWithType: IBinarySerializable.LoadFromBinary(BinaryReader)
  fullName: Shared.Interfaces.Model.IBinarySerializable.LoadFromBinary(System.IO.BinaryReader)
  spec.csharp:
  - uid: Shared.Interfaces.Model.IBinarySerializable.LoadFromBinary(System.IO.BinaryReader)
    name: LoadFromBinary
    href: Shared.Interfaces.Model.IBinarySerializable.html#Shared_Interfaces_Model_IBinarySerializable_LoadFromBinary_System_IO_BinaryReader_
  - name: (
  - uid: System.IO.BinaryReader
    name: BinaryReader
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.binaryreader
  - name: )
  spec.vb:
  - uid: Shared.Interfaces.Model.IBinarySerializable.LoadFromBinary(System.IO.BinaryReader)
    name: LoadFromBinary
    href: Shared.Interfaces.Model.IBinarySerializable.html#Shared_Interfaces_Model_IBinarySerializable_LoadFromBinary_System_IO_BinaryReader_
  - name: (
  - uid: System.IO.BinaryReader
    name: BinaryReader
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.binaryreader
  - name: )
- uid: Shared.Interfaces.Model.IBinarySerializable.GetBinarySerials
  commentId: M:Shared.Interfaces.Model.IBinarySerializable.GetBinarySerials
  parent: Shared.Interfaces.Model.IBinarySerializable
  href: Shared.Interfaces.Model.IBinarySerializable.html#Shared_Interfaces_Model_IBinarySerializable_GetBinarySerials
  name: GetBinarySerials()
  nameWithType: IBinarySerializable.GetBinarySerials()
  fullName: Shared.Interfaces.Model.IBinarySerializable.GetBinarySerials()
  spec.csharp:
  - uid: Shared.Interfaces.Model.IBinarySerializable.GetBinarySerials
    name: GetBinarySerials
    href: Shared.Interfaces.Model.IBinarySerializable.html#Shared_Interfaces_Model_IBinarySerializable_GetBinarySerials
  - name: (
  - name: )
  spec.vb:
  - uid: Shared.Interfaces.Model.IBinarySerializable.GetBinarySerials
    name: GetBinarySerials
    href: Shared.Interfaces.Model.IBinarySerializable.html#Shared_Interfaces_Model_IBinarySerializable_GetBinarySerials
  - name: (
  - name: )
- uid: Shared.Interfaces.Model.IBinarySerializable
  commentId: T:Shared.Interfaces.Model.IBinarySerializable
  parent: Shared.Interfaces.Model
  href: Shared.Interfaces.Model.IBinarySerializable.html
  name: IBinarySerializable
  nameWithType: IBinarySerializable
  fullName: Shared.Interfaces.Model.IBinarySerializable
- uid: System.EventHandler{Shared.Interfaces.Model.IPlayerChangedEventArgs}
  commentId: T:System.EventHandler{Shared.Interfaces.Model.IPlayerChangedEventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<IPlayerChangedEventArgs>
  nameWithType: EventHandler<IPlayerChangedEventArgs>
  fullName: System.EventHandler<Shared.Interfaces.Model.IPlayerChangedEventArgs>
  nameWithType.vb: EventHandler(Of IPlayerChangedEventArgs)
  fullName.vb: System.EventHandler(Of Shared.Interfaces.Model.IPlayerChangedEventArgs)
  name.vb: EventHandler(Of IPlayerChangedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: Shared.Interfaces.Model.IPlayerChangedEventArgs
    name: IPlayerChangedEventArgs
    href: Shared.Interfaces.Model.IPlayerChangedEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: Shared.Interfaces.Model.IPlayerChangedEventArgs
    name: IPlayerChangedEventArgs
    href: Shared.Interfaces.Model.IPlayerChangedEventArgs.html
  - name: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - name: TEventArgs
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - name: TEventArgs
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.EventHandler
  commentId: T:System.EventHandler
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: Shared.Interfaces.Model.IPlayer.Name*
  commentId: Overload:Shared.Interfaces.Model.IPlayer.Name
  href: Shared.Interfaces.Model.IPlayer.html#Shared_Interfaces_Model_IPlayer_Name
  name: Name
  nameWithType: IPlayer.Name
  fullName: Shared.Interfaces.Model.IPlayer.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Shared.Interfaces.Model.IPlayer.Number*
  commentId: Overload:Shared.Interfaces.Model.IPlayer.Number
  href: Shared.Interfaces.Model.IPlayer.html#Shared_Interfaces_Model_IPlayer_Number
  name: Number
  nameWithType: IPlayer.Number
  fullName: Shared.Interfaces.Model.IPlayer.Number
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Shared.Interfaces.Model.IPlayer.Hand
  commentId: P:Shared.Interfaces.Model.IPlayer.Hand
  parent: Shared.Interfaces.Model.IPlayer
  href: Shared.Interfaces.Model.IPlayer.html#Shared_Interfaces_Model_IPlayer_Hand
  name: Hand
  nameWithType: IPlayer.Hand
  fullName: Shared.Interfaces.Model.IPlayer.Hand
- uid: Shared.Interfaces.Model.ICardSet.IsValidTrade(Shared.Interfaces.Model.ICard[])
  commentId: M:Shared.Interfaces.Model.ICardSet.IsValidTrade(Shared.Interfaces.Model.ICard[])
  parent: Shared.Interfaces.Model.ICardSet
  href: Shared.Interfaces.Model.ICardSet.html#Shared_Interfaces_Model_ICardSet_IsValidTrade_Shared_Interfaces_Model_ICard___
  name: IsValidTrade(ICard[])
  nameWithType: ICardSet.IsValidTrade(ICard[])
  fullName: Shared.Interfaces.Model.ICardSet.IsValidTrade(Shared.Interfaces.Model.ICard[])
  nameWithType.vb: ICardSet.IsValidTrade(ICard())
  fullName.vb: Shared.Interfaces.Model.ICardSet.IsValidTrade(Shared.Interfaces.Model.ICard())
  name.vb: IsValidTrade(ICard())
  spec.csharp:
  - uid: Shared.Interfaces.Model.ICardSet.IsValidTrade(Shared.Interfaces.Model.ICard[])
    name: IsValidTrade
    href: Shared.Interfaces.Model.ICardSet.html#Shared_Interfaces_Model_ICardSet_IsValidTrade_Shared_Interfaces_Model_ICard___
  - name: (
  - uid: Shared.Interfaces.Model.ICard
    name: ICard
    href: Shared.Interfaces.Model.ICard.html
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Shared.Interfaces.Model.ICardSet.IsValidTrade(Shared.Interfaces.Model.ICard[])
    name: IsValidTrade
    href: Shared.Interfaces.Model.ICardSet.html#Shared_Interfaces_Model_ICardSet_IsValidTrade_Shared_Interfaces_Model_ICard___
  - name: (
  - uid: Shared.Interfaces.Model.ICard
    name: ICard
    href: Shared.Interfaces.Model.ICard.html
  - name: (
  - name: )
  - name: )
- uid: Shared.Interfaces.Model.IPlayer.HasCardSet*
  commentId: Overload:Shared.Interfaces.Model.IPlayer.HasCardSet
  href: Shared.Interfaces.Model.IPlayer.html#Shared_Interfaces_Model_IPlayer_HasCardSet
  name: HasCardSet
  nameWithType: IPlayer.HasCardSet
  fullName: Shared.Interfaces.Model.IPlayer.HasCardSet
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Shared.Interfaces.Model.IPlayer
  commentId: T:Shared.Interfaces.Model.IPlayer
  parent: Shared.Interfaces.Model
  href: Shared.Interfaces.Model.IPlayer.html
  name: IPlayer
  nameWithType: IPlayer
  fullName: Shared.Interfaces.Model.IPlayer
- uid: Shared.Interfaces.Model.ICardSet
  commentId: T:Shared.Interfaces.Model.ICardSet
  parent: Shared.Interfaces.Model
  href: Shared.Interfaces.Model.ICardSet.html
  name: ICardSet
  nameWithType: ICardSet
  fullName: Shared.Interfaces.Model.ICardSet
- uid: Shared.Interfaces.Model.IRuleValues.MinimumArmyBonus
  commentId: P:Shared.Interfaces.Model.IRuleValues.MinimumArmyBonus
  parent: Shared.Interfaces.Model.IRuleValues
  href: Shared.Interfaces.Model.IRuleValues.html#Shared_Interfaces_Model_IRuleValues_MinimumArmyBonus
  name: MinimumArmyBonus
  nameWithType: IRuleValues.MinimumArmyBonus
  fullName: Shared.Interfaces.Model.IRuleValues.MinimumArmyBonus
- uid: Shared.Interfaces.Model.IRuleValues.CalculateArmyBonus(System.Int32,System.Collections.Generic.List{Shared.Geography.Enums.ContID})
  commentId: M:Shared.Interfaces.Model.IRuleValues.CalculateArmyBonus(System.Int32,System.Collections.Generic.List{Shared.Geography.Enums.ContID})
  parent: Shared.Interfaces.Model.IRuleValues
  isExternal: true
  href: Shared.Interfaces.Model.IRuleValues.html#Shared_Interfaces_Model_IRuleValues_CalculateArmyBonus_System_Int32_System_Collections_Generic_List_Shared_Geography_Enums_ContID__
  name: CalculateArmyBonus(int, List<ContID>)
  nameWithType: IRuleValues.CalculateArmyBonus(int, List<ContID>)
  fullName: Shared.Interfaces.Model.IRuleValues.CalculateArmyBonus(int, System.Collections.Generic.List<Shared.Geography.Enums.ContID>)
  nameWithType.vb: IRuleValues.CalculateArmyBonus(Integer, List(Of ContID))
  fullName.vb: Shared.Interfaces.Model.IRuleValues.CalculateArmyBonus(Integer, System.Collections.Generic.List(Of Shared.Geography.Enums.ContID))
  name.vb: CalculateArmyBonus(Integer, List(Of ContID))
  spec.csharp:
  - uid: Shared.Interfaces.Model.IRuleValues.CalculateArmyBonus(System.Int32,System.Collections.Generic.List{Shared.Geography.Enums.ContID})
    name: CalculateArmyBonus
    href: Shared.Interfaces.Model.IRuleValues.html#Shared_Interfaces_Model_IRuleValues_CalculateArmyBonus_System_Int32_System_Collections_Generic_List_Shared_Geography_Enums_ContID__
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Shared.Geography.Enums.ContID
    name: ContID
    href: Shared.Geography.Enums.ContID.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: Shared.Interfaces.Model.IRuleValues.CalculateArmyBonus(System.Int32,System.Collections.Generic.List{Shared.Geography.Enums.ContID})
    name: CalculateArmyBonus
    href: Shared.Interfaces.Model.IRuleValues.html#Shared_Interfaces_Model_IRuleValues_CalculateArmyBonus_System_Int32_System_Collections_Generic_List_Shared_Geography_Enums_ContID__
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Shared.Geography.Enums.ContID
    name: ContID
    href: Shared.Geography.Enums.ContID.html
  - name: )
  - name: )
- uid: Shared.Enums.GamePhase.Place
  commentId: F:Shared.Enums.GamePhase.Place
  href: Shared.Enums.GamePhase.html#Shared_Enums_GamePhase_Place
  name: Place
  nameWithType: GamePhase.Place
  fullName: Shared.Enums.GamePhase.Place
- uid: Shared.Interfaces.Model.IPlayer.ArmyBonus*
  commentId: Overload:Shared.Interfaces.Model.IPlayer.ArmyBonus
  href: Shared.Interfaces.Model.IPlayer.html#Shared_Interfaces_Model_IPlayer_ArmyBonus
  name: ArmyBonus
  nameWithType: IPlayer.ArmyBonus
  fullName: Shared.Interfaces.Model.IPlayer.ArmyBonus
- uid: Shared.Interfaces.Model.IRuleValues
  commentId: T:Shared.Interfaces.Model.IRuleValues
  parent: Shared.Interfaces.Model
  href: Shared.Interfaces.Model.IRuleValues.html
  name: IRuleValues
  nameWithType: IRuleValues
  fullName: Shared.Interfaces.Model.IRuleValues
- uid: Shared.Interfaces.Model.IPlayer.ArmyBonus
  commentId: P:Shared.Interfaces.Model.IPlayer.ArmyBonus
  parent: Shared.Interfaces.Model.IPlayer
  href: Shared.Interfaces.Model.IPlayer.html#Shared_Interfaces_Model_IPlayer_ArmyBonus
  name: ArmyBonus
  nameWithType: IPlayer.ArmyBonus
  fullName: Shared.Interfaces.Model.IPlayer.ArmyBonus
- uid: Shared.Interfaces.Model.IRuleValues.ContinentBonus
  commentId: P:Shared.Interfaces.Model.IRuleValues.ContinentBonus
  parent: Shared.Interfaces.Model.IRuleValues
  href: Shared.Interfaces.Model.IRuleValues.html#Shared_Interfaces_Model_IRuleValues_ContinentBonus
  name: ContinentBonus
  nameWithType: IRuleValues.ContinentBonus
  fullName: Shared.Interfaces.Model.IRuleValues.ContinentBonus
- uid: Shared.Interfaces.Model.IPlayer.ControlledTerritories
  commentId: P:Shared.Interfaces.Model.IPlayer.ControlledTerritories
  parent: Shared.Interfaces.Model.IPlayer
  href: Shared.Interfaces.Model.IPlayer.html#Shared_Interfaces_Model_IPlayer_ControlledTerritories
  name: ControlledTerritories
  nameWithType: IPlayer.ControlledTerritories
  fullName: Shared.Interfaces.Model.IPlayer.ControlledTerritories
- uid: Shared.Interfaces.Model.IPlayer.ContinentBonus*
  commentId: Overload:Shared.Interfaces.Model.IPlayer.ContinentBonus
  href: Shared.Interfaces.Model.IPlayer.html#Shared_Interfaces_Model_IPlayer_ContinentBonus
  name: ContinentBonus
  nameWithType: IPlayer.ContinentBonus
  fullName: Shared.Interfaces.Model.IPlayer.ContinentBonus
- uid: Shared.Interfaces.Model.IPlayer.ArmyPool*
  commentId: Overload:Shared.Interfaces.Model.IPlayer.ArmyPool
  href: Shared.Interfaces.Model.IPlayer.html#Shared_Interfaces_Model_IPlayer_ArmyPool
  name: ArmyPool
  nameWithType: IPlayer.ArmyPool
  fullName: Shared.Interfaces.Model.IPlayer.ArmyPool
- uid: Shared.Interfaces.Model.IPlayer.ControlledTerritories*
  commentId: Overload:Shared.Interfaces.Model.IPlayer.ControlledTerritories
  href: Shared.Interfaces.Model.IPlayer.html#Shared_Interfaces_Model_IPlayer_ControlledTerritories
  name: ControlledTerritories
  nameWithType: IPlayer.ControlledTerritories
  fullName: Shared.Interfaces.Model.IPlayer.ControlledTerritories
- uid: System.Collections.Generic.HashSet{Shared.Geography.Enums.TerrID}
  commentId: T:System.Collections.Generic.HashSet{Shared.Geography.Enums.TerrID}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.HashSet`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  name: HashSet<TerrID>
  nameWithType: HashSet<TerrID>
  fullName: System.Collections.Generic.HashSet<Shared.Geography.Enums.TerrID>
  nameWithType.vb: HashSet(Of TerrID)
  fullName.vb: System.Collections.Generic.HashSet(Of Shared.Geography.Enums.TerrID)
  name.vb: HashSet(Of TerrID)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - uid: Shared.Geography.Enums.TerrID
    name: TerrID
    href: Shared.Geography.Enums.TerrID.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - uid: Shared.Geography.Enums.TerrID
    name: TerrID
    href: Shared.Geography.Enums.TerrID.html
  - name: )
- uid: System.Collections.Generic.HashSet`1
  commentId: T:System.Collections.Generic.HashSet`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  name: HashSet<T>
  nameWithType: HashSet<T>
  fullName: System.Collections.Generic.HashSet<T>
  nameWithType.vb: HashSet(Of T)
  fullName.vb: System.Collections.Generic.HashSet(Of T)
  name.vb: HashSet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Shared.Interfaces.Model.IPlayer.Hand*
  commentId: Overload:Shared.Interfaces.Model.IPlayer.Hand
  href: Shared.Interfaces.Model.IPlayer.html#Shared_Interfaces_Model_IPlayer_Hand
  name: Hand
  nameWithType: IPlayer.Hand
  fullName: Shared.Interfaces.Model.IPlayer.Hand
- uid: System.Collections.Generic.List{Shared.Interfaces.Model.ICard}
  commentId: T:System.Collections.Generic.List{Shared.Interfaces.Model.ICard}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<ICard>
  nameWithType: List<ICard>
  fullName: System.Collections.Generic.List<Shared.Interfaces.Model.ICard>
  nameWithType.vb: List(Of ICard)
  fullName.vb: System.Collections.Generic.List(Of Shared.Interfaces.Model.ICard)
  name.vb: List(Of ICard)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Shared.Interfaces.Model.ICard
    name: ICard
    href: Shared.Interfaces.Model.ICard.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Shared.Interfaces.Model.ICard
    name: ICard
    href: Shared.Interfaces.Model.ICard.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Shared.Interfaces.Model.IPlayer.ArmyPool
  commentId: P:Shared.Interfaces.Model.IPlayer.ArmyPool
  parent: Shared.Interfaces.Model.IPlayer
  href: Shared.Interfaces.Model.IPlayer.html#Shared_Interfaces_Model_IPlayer_ArmyPool
  name: ArmyPool
  nameWithType: IPlayer.ArmyPool
  fullName: Shared.Interfaces.Model.IPlayer.ArmyPool
- uid: Shared.Interfaces.Model.IPlayer.GetsTradeBonus*
  commentId: Overload:Shared.Interfaces.Model.IPlayer.GetsTradeBonus
  href: Shared.Interfaces.Model.IPlayer.html#Shared_Interfaces_Model_IPlayer_GetsTradeBonus_System_Int32_
  name: GetsTradeBonus
  nameWithType: IPlayer.GetsTradeBonus
  fullName: Shared.Interfaces.Model.IPlayer.GetsTradeBonus
- uid: Shared.Interfaces.Model.IPlayer.GetControlledTargets*
  commentId: Overload:Shared.Interfaces.Model.IPlayer.GetControlledTargets
  href: Shared.Interfaces.Model.IPlayer.html#Shared_Interfaces_Model_IPlayer_GetControlledTargets_Shared_Geography_Enums_TerrID___
  name: GetControlledTargets
  nameWithType: IPlayer.GetControlledTargets
  fullName: Shared.Interfaces.Model.IPlayer.GetControlledTargets
- uid: Shared.Geography.Enums.TerrID[]
  isExternal: true
  href: Shared.Geography.Enums.TerrID.html
  name: TerrID[]
  nameWithType: TerrID[]
  fullName: Shared.Geography.Enums.TerrID[]
  nameWithType.vb: TerrID()
  fullName.vb: Shared.Geography.Enums.TerrID()
  name.vb: TerrID()
  spec.csharp:
  - uid: Shared.Geography.Enums.TerrID
    name: TerrID
    href: Shared.Geography.Enums.TerrID.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Shared.Geography.Enums.TerrID
    name: TerrID
    href: Shared.Geography.Enums.TerrID.html
  - name: (
  - name: )
- uid: Shared.Interfaces.Model.ICard
  commentId: T:Shared.Interfaces.Model.ICard
  parent: Shared.Interfaces.Model
  href: Shared.Interfaces.Model.ICard.html
  name: ICard
  nameWithType: ICard
  fullName: Shared.Interfaces.Model.ICard
- uid: Shared.Interfaces.Model.ICardSet.FindTradeSets(Shared.Interfaces.Model.ICard[])
  commentId: M:Shared.Interfaces.Model.ICardSet.FindTradeSets(Shared.Interfaces.Model.ICard[])
  parent: Shared.Interfaces.Model.ICardSet
  href: Shared.Interfaces.Model.ICardSet.html#Shared_Interfaces_Model_ICardSet_FindTradeSets_Shared_Interfaces_Model_ICard___
  name: FindTradeSets(ICard[])
  nameWithType: ICardSet.FindTradeSets(ICard[])
  fullName: Shared.Interfaces.Model.ICardSet.FindTradeSets(Shared.Interfaces.Model.ICard[])
  nameWithType.vb: ICardSet.FindTradeSets(ICard())
  fullName.vb: Shared.Interfaces.Model.ICardSet.FindTradeSets(Shared.Interfaces.Model.ICard())
  name.vb: FindTradeSets(ICard())
  spec.csharp:
  - uid: Shared.Interfaces.Model.ICardSet.FindTradeSets(Shared.Interfaces.Model.ICard[])
    name: FindTradeSets
    href: Shared.Interfaces.Model.ICardSet.html#Shared_Interfaces_Model_ICardSet_FindTradeSets_Shared_Interfaces_Model_ICard___
  - name: (
  - uid: Shared.Interfaces.Model.ICard
    name: ICard
    href: Shared.Interfaces.Model.ICard.html
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Shared.Interfaces.Model.ICardSet.FindTradeSets(Shared.Interfaces.Model.ICard[])
    name: FindTradeSets
    href: Shared.Interfaces.Model.ICardSet.html#Shared_Interfaces_Model_ICardSet_FindTradeSets_Shared_Interfaces_Model_ICard___
  - name: (
  - uid: Shared.Interfaces.Model.ICard
    name: ICard
    href: Shared.Interfaces.Model.ICard.html
  - name: (
  - name: )
  - name: )
- uid: Shared.Interfaces.Model.IPlayer.FindCardSet*
  commentId: Overload:Shared.Interfaces.Model.IPlayer.FindCardSet
  href: Shared.Interfaces.Model.IPlayer.html#Shared_Interfaces_Model_IPlayer_FindCardSet
  name: FindCardSet
  nameWithType: IPlayer.FindCardSet
  fullName: Shared.Interfaces.Model.IPlayer.FindCardSet
- uid: Shared.Interfaces.Model.IPlayer.AddTerritory*
  commentId: Overload:Shared.Interfaces.Model.IPlayer.AddTerritory
  href: Shared.Interfaces.Model.IPlayer.html#Shared_Interfaces_Model_IPlayer_AddTerritory_Shared_Geography_Enums_TerrID_
  name: AddTerritory
  nameWithType: IPlayer.AddTerritory
  fullName: Shared.Interfaces.Model.IPlayer.AddTerritory
- uid: Shared.Geography.Enums.TerrID
  commentId: T:Shared.Geography.Enums.TerrID
  parent: Shared.Geography.Enums
  href: Shared.Geography.Enums.TerrID.html
  name: TerrID
  nameWithType: TerrID
  fullName: Shared.Geography.Enums.TerrID
- uid: Shared.Geography.Enums
  commentId: N:Shared.Geography.Enums
  href: Shared.html
  name: Shared.Geography.Enums
  nameWithType: Shared.Geography.Enums
  fullName: Shared.Geography.Enums
  spec.csharp:
  - uid: Shared
    name: Shared
    href: Shared.html
  - name: .
  - uid: Shared.Geography
    name: Geography
    href: Shared.Geography.html
  - name: .
  - uid: Shared.Geography.Enums
    name: Enums
    href: Shared.Geography.Enums.html
  spec.vb:
  - uid: Shared
    name: Shared
    href: Shared.html
  - name: .
  - uid: Shared.Geography
    name: Geography
    href: Shared.Geography.html
  - name: .
  - uid: Shared.Geography.Enums
    name: Enums
    href: Shared.Geography.Enums.html
- uid: Shared.Interfaces.Model.IPlayer.PlayerLost
  commentId: E:Shared.Interfaces.Model.IPlayer.PlayerLost
  parent: Shared.Interfaces.Model.IPlayer
  href: Shared.Interfaces.Model.IPlayer.html#Shared_Interfaces_Model_IPlayer_PlayerLost
  name: PlayerLost
  nameWithType: IPlayer.PlayerLost
  fullName: Shared.Interfaces.Model.IPlayer.PlayerLost
- uid: Shared.Interfaces.Model.IPlayer.RemoveTerritory*
  commentId: Overload:Shared.Interfaces.Model.IPlayer.RemoveTerritory
  href: Shared.Interfaces.Model.IPlayer.html#Shared_Interfaces_Model_IPlayer_RemoveTerritory_Shared_Geography_Enums_TerrID_
  name: RemoveTerritory
  nameWithType: IPlayer.RemoveTerritory
  fullName: Shared.Interfaces.Model.IPlayer.RemoveTerritory
- uid: Shared.Interfaces.Model.IPlayer.AddCard*
  commentId: Overload:Shared.Interfaces.Model.IPlayer.AddCard
  href: Shared.Interfaces.Model.IPlayer.html#Shared_Interfaces_Model_IPlayer_AddCard_Shared_Interfaces_Model_ICard_
  name: AddCard
  nameWithType: IPlayer.AddCard
  fullName: Shared.Interfaces.Model.IPlayer.AddCard
- uid: Shared.Interfaces.Model.IPlayer.RemoveCard*
  commentId: Overload:Shared.Interfaces.Model.IPlayer.RemoveCard
  href: Shared.Interfaces.Model.IPlayer.html#Shared_Interfaces_Model_IPlayer_RemoveCard_System_Int32_
  name: RemoveCard
  nameWithType: IPlayer.RemoveCard
  fullName: Shared.Interfaces.Model.IPlayer.RemoveCard
