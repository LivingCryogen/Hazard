### YamlMime:ManagedReference
items:
- uid: Model.Entities.CardBase
  commentId: T:Model.Entities.CardBase
  id: CardBase
  parent: Model.Entities
  children:
  - Model.Entities.CardBase.#ctor(Microsoft.Extensions.Logging.ILoggerFactory,Shared.Services.Registry.ITypeRegister{Shared.Services.Registry.ITypeRelations})
  - Model.Entities.CardBase.CardFactory
  - Model.Entities.CardBase.GameDeck
  - Model.Entities.CardBase.GetBinarySerials
  - Model.Entities.CardBase.InitializeDiscardPile(Shared.Interfaces.Model.ICard[])
  - Model.Entities.CardBase.InitializeFromAssets(Shared.Interfaces.Model.IAssetFetcher,System.Boolean)
  - Model.Entities.CardBase.InitializeLibrary(Shared.Interfaces.Model.ICard[])
  - Model.Entities.CardBase.LoadFromBinary(System.IO.BinaryReader)
  - Model.Entities.CardBase.MapCardsToSets(Shared.Interfaces.Model.ICard[])
  - Model.Entities.CardBase.Sets
  langs:
  - csharp
  - vb
  name: CardBase
  nameWithType: CardBase
  fullName: Model.Entities.CardBase
  type: Class
  source:
    remote:
      path: Model/Entities/CardBase.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: CardBase
    path: ../Model/Entities/CardBase.cs
    startLine: 15
  assemblies:
  - Model
  namespace: Model.Entities
  summary: Encapsulates all objects primarily using <xref href="Shared.Interfaces.Model.ICard" data-throw-if-not-resolved="false"></xref>s.
  remarks: E.g. <xref href="Model.Entities.CardBase.GameDeck" data-throw-if-not-resolved="false"></xref> and <xref href="Shared.Interfaces.Model.ICardSet" data-throw-if-not-resolved="false"></xref>s.
  example: []
  syntax:
    content: 'public class CardBase : IBinarySerializable'
    content.vb: Public Class CardBase Implements IBinarySerializable
  inheritance:
  - System.Object
  implements:
  - Shared.Interfaces.Model.IBinarySerializable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Model.Entities.CardBase.#ctor(Microsoft.Extensions.Logging.ILoggerFactory,Shared.Services.Registry.ITypeRegister{Shared.Services.Registry.ITypeRelations})
  commentId: M:Model.Entities.CardBase.#ctor(Microsoft.Extensions.Logging.ILoggerFactory,Shared.Services.Registry.ITypeRegister{Shared.Services.Registry.ITypeRelations})
  id: '#ctor(Microsoft.Extensions.Logging.ILoggerFactory,Shared.Services.Registry.ITypeRegister{Shared.Services.Registry.ITypeRelations})'
  parent: Model.Entities.CardBase
  langs:
  - csharp
  - vb
  name: CardBase(ILoggerFactory, ITypeRegister<ITypeRelations>)
  nameWithType: CardBase.CardBase(ILoggerFactory, ITypeRegister<ITypeRelations>)
  fullName: Model.Entities.CardBase.CardBase(Microsoft.Extensions.Logging.ILoggerFactory, Shared.Services.Registry.ITypeRegister<Shared.Services.Registry.ITypeRelations>)
  type: Constructor
  source:
    remote:
      path: Model/Entities/CardBase.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: .ctor
    path: ../Model/Entities/CardBase.cs
    startLine: 15
  assemblies:
  - Model
  namespace: Model.Entities
  summary: Encapsulates all objects primarily using <xref href="Shared.Interfaces.Model.ICard" data-throw-if-not-resolved="false"></xref>s.
  remarks: E.g. <xref href="Model.Entities.CardBase.GameDeck" data-throw-if-not-resolved="false"></xref> and <xref href="Shared.Interfaces.Model.ICardSet" data-throw-if-not-resolved="false"></xref>s.
  example: []
  syntax:
    content: public CardBase(ILoggerFactory loggerFactory, ITypeRegister<ITypeRelations> registry)
    parameters:
    - id: loggerFactory
      type: Microsoft.Extensions.Logging.ILoggerFactory
      description: Instantiates loggers for logging debug information and errors.
    - id: registry
      type: Shared.Services.Registry.ITypeRegister{Shared.Services.Registry.ITypeRelations}
      description: The application's type registry.
    content.vb: Public Sub New(loggerFactory As ILoggerFactory, registry As ITypeRegister(Of ITypeRelations))
  overload: Model.Entities.CardBase.#ctor*
  nameWithType.vb: CardBase.New(ILoggerFactory, ITypeRegister(Of ITypeRelations))
  fullName.vb: Model.Entities.CardBase.New(Microsoft.Extensions.Logging.ILoggerFactory, Shared.Services.Registry.ITypeRegister(Of Shared.Services.Registry.ITypeRelations))
  name.vb: New(ILoggerFactory, ITypeRegister(Of ITypeRelations))
- uid: Model.Entities.CardBase.CardFactory
  commentId: P:Model.Entities.CardBase.CardFactory
  id: CardFactory
  parent: Model.Entities.CardBase
  langs:
  - csharp
  - vb
  name: CardFactory
  nameWithType: CardBase.CardFactory
  fullName: Model.Entities.CardBase.CardFactory
  type: Property
  source:
    remote:
      path: Model/Entities/CardBase.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: CardFactory
    path: ../Model/Entities/CardBase.cs
    startLine: 25
  assemblies:
  - Model
  namespace: Model.Entities
  summary: Gets a factory for making <xref href="Shared.Interfaces.Model.ICard" data-throw-if-not-resolved="false"></xref>s.
  remarks: Used when loading from a save file; see <xref href="Model.Entities.CardBase.LoadFromBinary(System.IO.BinaryReader)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public CardFactory CardFactory { get; }
    parameters: []
    return:
      type: Model.Entities.Cards.CardFactory
    content.vb: Public ReadOnly Property CardFactory As CardFactory
  overload: Model.Entities.CardBase.CardFactory*
- uid: Model.Entities.CardBase.Sets
  commentId: P:Model.Entities.CardBase.Sets
  id: Sets
  parent: Model.Entities.CardBase
  langs:
  - csharp
  - vb
  name: Sets
  nameWithType: CardBase.Sets
  fullName: Model.Entities.CardBase.Sets
  type: Property
  source:
    remote:
      path: Model/Entities/CardBase.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: Sets
    path: ../Model/Entities/CardBase.cs
    startLine: 29
  assemblies:
  - Model
  namespace: Model.Entities
  summary: Gets or sets a list of card sets.
  example: []
  syntax:
    content: public List<ICardSet> Sets { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Shared.Interfaces.Model.ICardSet}
    content.vb: Public Property Sets As List(Of ICardSet)
  overload: Model.Entities.CardBase.Sets*
- uid: Model.Entities.CardBase.GameDeck
  commentId: P:Model.Entities.CardBase.GameDeck
  id: GameDeck
  parent: Model.Entities.CardBase
  langs:
  - csharp
  - vb
  name: GameDeck
  nameWithType: CardBase.GameDeck
  fullName: Model.Entities.CardBase.GameDeck
  type: Property
  source:
    remote:
      path: Model/Entities/CardBase.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: GameDeck
    path: ../Model/Entities/CardBase.cs
    startLine: 33
  assemblies:
  - Model
  namespace: Model.Entities
  summary: Gets or sets the deck of cards to be used for this game.
  example: []
  syntax:
    content: public Deck GameDeck { get; set; }
    parameters: []
    return:
      type: Model.Entities.Deck
    content.vb: Public Property GameDeck As Deck
  overload: Model.Entities.CardBase.GameDeck*
- uid: Model.Entities.CardBase.InitializeFromAssets(Shared.Interfaces.Model.IAssetFetcher,System.Boolean)
  commentId: M:Model.Entities.CardBase.InitializeFromAssets(Shared.Interfaces.Model.IAssetFetcher,System.Boolean)
  id: InitializeFromAssets(Shared.Interfaces.Model.IAssetFetcher,System.Boolean)
  parent: Model.Entities.CardBase
  langs:
  - csharp
  - vb
  name: InitializeFromAssets(IAssetFetcher, bool)
  nameWithType: CardBase.InitializeFromAssets(IAssetFetcher, bool)
  fullName: Model.Entities.CardBase.InitializeFromAssets(Shared.Interfaces.Model.IAssetFetcher, bool)
  type: Method
  source:
    remote:
      path: Model/Entities/CardBase.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: InitializeFromAssets
    path: ../Model/Entities/CardBase.cs
    startLine: 44
  assemblies:
  - Model
  namespace: Model.Entities
  summary: Initializes a cardbase with assets provided by <xref href="Shared.Interfaces.Model.IAssetFetcher" data-throw-if-not-resolved="false"></xref>.
  remarks: >-
    When a new game is started, the <xref href="Model.Entities.CardBase" data-throw-if-not-resolved="false"></xref> will include all <xref href="Shared.Interfaces.Model.ICard" data-throw-if-not-resolved="false"></xref>s that can be found and converted from 'CardSet.json' files <br />

    (see <xref href="Shared.Interfaces.Model.IAssetFetcher.FetchCardSets" data-throw-if-not-resolved="false"></xref>, and <xref href="Shared.Interfaces.Model.IAssetFactory.GetAsset(System.String)" data-throw-if-not-resolved="false"></xref>). 

    <br /> Then, if <code class="paramref">defaultMode</code> is set to true, only <xref href="Shared.Interfaces.Model.ITroopCard" data-throw-if-not-resolved="false"></xref>s will be retained.
  example: []
  syntax:
    content: public void InitializeFromAssets(IAssetFetcher assetFetcher, bool defaultMode)
    parameters:
    - id: assetFetcher
      type: Shared.Interfaces.Model.IAssetFetcher
      description: Gets initialized assets (objects loaded from data files) for specific Model properties.
    - id: defaultMode
      type: System.Boolean
      description: A <see langwod="boolean"></see> flag to indicate whether the <xref href="Shared.Interfaces.Model.IGame" data-throw-if-not-resolved="false"></xref> is in default card mode.
    content.vb: Public Sub InitializeFromAssets(assetFetcher As IAssetFetcher, defaultMode As Boolean)
  overload: Model.Entities.CardBase.InitializeFromAssets*
  nameWithType.vb: CardBase.InitializeFromAssets(IAssetFetcher, Boolean)
  fullName.vb: Model.Entities.CardBase.InitializeFromAssets(Shared.Interfaces.Model.IAssetFetcher, Boolean)
  name.vb: InitializeFromAssets(IAssetFetcher, Boolean)
- uid: Model.Entities.CardBase.InitializeLibrary(Shared.Interfaces.Model.ICard[])
  commentId: M:Model.Entities.CardBase.InitializeLibrary(Shared.Interfaces.Model.ICard[])
  id: InitializeLibrary(Shared.Interfaces.Model.ICard[])
  parent: Model.Entities.CardBase
  langs:
  - csharp
  - vb
  name: InitializeLibrary(ICard[])
  nameWithType: CardBase.InitializeLibrary(ICard[])
  fullName: Model.Entities.CardBase.InitializeLibrary(Shared.Interfaces.Model.ICard[])
  type: Method
  source:
    remote:
      path: Model/Entities/CardBase.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: InitializeLibrary
    path: ../Model/Entities/CardBase.cs
    startLine: 73
  assemblies:
  - Model
  namespace: Model.Entities
  summary: Initializes a library when loading the game from a save file.
  example: []
  syntax:
    content: public void InitializeLibrary(ICard[] cards)
    parameters:
    - id: cards
      type: Shared.Interfaces.Model.ICard[]
      description: The library's cards built during <xref href="Model.Entities.CardBase.LoadFromBinary(System.IO.BinaryReader)" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Sub InitializeLibrary(cards As ICard())
  overload: Model.Entities.CardBase.InitializeLibrary*
  nameWithType.vb: CardBase.InitializeLibrary(ICard())
  fullName.vb: Model.Entities.CardBase.InitializeLibrary(Shared.Interfaces.Model.ICard())
  name.vb: InitializeLibrary(ICard())
- uid: Model.Entities.CardBase.InitializeDiscardPile(Shared.Interfaces.Model.ICard[])
  commentId: M:Model.Entities.CardBase.InitializeDiscardPile(Shared.Interfaces.Model.ICard[])
  id: InitializeDiscardPile(Shared.Interfaces.Model.ICard[])
  parent: Model.Entities.CardBase
  langs:
  - csharp
  - vb
  name: InitializeDiscardPile(ICard[])
  nameWithType: CardBase.InitializeDiscardPile(ICard[])
  fullName: Model.Entities.CardBase.InitializeDiscardPile(Shared.Interfaces.Model.ICard[])
  type: Method
  source:
    remote:
      path: Model/Entities/CardBase.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: InitializeDiscardPile
    path: ../Model/Entities/CardBase.cs
    startLine: 82
  assemblies:
  - Model
  namespace: Model.Entities
  summary: Initializes a discard pile when loading the game from a save file.
  example: []
  syntax:
    content: public void InitializeDiscardPile(ICard[] cards)
    parameters:
    - id: cards
      type: Shared.Interfaces.Model.ICard[]
      description: The discard pile's cards built during <xref href="Model.Entities.CardBase.LoadFromBinary(System.IO.BinaryReader)" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Sub InitializeDiscardPile(cards As ICard())
  overload: Model.Entities.CardBase.InitializeDiscardPile*
  nameWithType.vb: CardBase.InitializeDiscardPile(ICard())
  fullName.vb: Model.Entities.CardBase.InitializeDiscardPile(Shared.Interfaces.Model.ICard())
  name.vb: InitializeDiscardPile(ICard())
- uid: Model.Entities.CardBase.MapCardsToSets(Shared.Interfaces.Model.ICard[])
  commentId: M:Model.Entities.CardBase.MapCardsToSets(Shared.Interfaces.Model.ICard[])
  id: MapCardsToSets(Shared.Interfaces.Model.ICard[])
  parent: Model.Entities.CardBase
  langs:
  - csharp
  - vb
  name: MapCardsToSets(ICard[])
  nameWithType: CardBase.MapCardsToSets(ICard[])
  fullName: Model.Entities.CardBase.MapCardsToSets(Shared.Interfaces.Model.ICard[])
  type: Method
  source:
    remote:
      path: Model/Entities/CardBase.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: MapCardsToSets
    path: ../Model/Entities/CardBase.cs
    startLine: 94
  assemblies:
  - Model
  namespace: Model.Entities
  summary: Ensures cards and card sets are properly mapped.
  remarks: Necessary since application and/or game logic may depend on <xref href="Shared.Interfaces.Model.ICard.CardSet" data-throw-if-not-resolved="false"></xref> (e.g. <xref href="Shared.Interfaces.Model.ICardSet.IsValidTrade(Shared.Interfaces.Model.ICard%5b%5d)" data-throw-if-not-resolved="false"></xref>).
  example: []
  syntax:
    content: public void MapCardsToSets(ICard[] cards)
    parameters:
    - id: cards
      type: Shared.Interfaces.Model.ICard[]
      description: The cards whose sets must be discovered and mapped to.
    content.vb: Public Sub MapCardsToSets(cards As ICard())
  overload: Model.Entities.CardBase.MapCardsToSets*
  nameWithType.vb: CardBase.MapCardsToSets(ICard())
  fullName.vb: Model.Entities.CardBase.MapCardsToSets(Shared.Interfaces.Model.ICard())
  name.vb: MapCardsToSets(ICard())
- uid: Model.Entities.CardBase.GetBinarySerials
  commentId: M:Model.Entities.CardBase.GetBinarySerials
  id: GetBinarySerials
  parent: Model.Entities.CardBase
  langs:
  - csharp
  - vb
  name: GetBinarySerials()
  nameWithType: CardBase.GetBinarySerials()
  fullName: Model.Entities.CardBase.GetBinarySerials()
  type: Method
  source:
    remote:
      path: Model/Entities/CardBase.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: GetBinarySerials
    path: ../Model/Entities/CardBase.cs
    startLine: 142
  assemblies:
  - Model
  namespace: Model.Entities
  summary: Asynchronously serializes the <xref href="Shared.Interfaces.Model.IBinarySerializable" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public Task<SerializedData[]> GetBinarySerials()
    return:
      type: System.Threading.Tasks.Task{Shared.Services.Serializer.SerializedData[]}
      description: A task whose result contains serialized object data.
    content.vb: Public Function GetBinarySerials() As Task(Of SerializedData())
  overload: Model.Entities.CardBase.GetBinarySerials*
  implements:
  - Shared.Interfaces.Model.IBinarySerializable.GetBinarySerials
- uid: Model.Entities.CardBase.LoadFromBinary(System.IO.BinaryReader)
  commentId: M:Model.Entities.CardBase.LoadFromBinary(System.IO.BinaryReader)
  id: LoadFromBinary(System.IO.BinaryReader)
  parent: Model.Entities.CardBase
  langs:
  - csharp
  - vb
  name: LoadFromBinary(BinaryReader)
  nameWithType: CardBase.LoadFromBinary(BinaryReader)
  fullName: Model.Entities.CardBase.LoadFromBinary(System.IO.BinaryReader)
  type: Method
  source:
    remote:
      path: Model/Entities/CardBase.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: LoadFromBinary
    path: ../Model/Entities/CardBase.cs
    startLine: 166
  assemblies:
  - Model
  namespace: Model.Entities
  summary: Loads the <xref href="Shared.Interfaces.Model.IBinarySerializable" data-throw-if-not-resolved="false"></xref> with binary values read from a file.
  example: []
  syntax:
    content: public bool LoadFromBinary(BinaryReader reader)
    parameters:
    - id: reader
      type: System.IO.BinaryReader
      description: A reader whose <xref href="System.IO.BinaryReader.BaseStream" data-throw-if-not-resolved="false"></xref> was previously written to using <xref href="Shared.Services.Serializer.BinarySerializer" data-throw-if-not-resolved="false"></xref> and <xref href="Shared.Interfaces.Model.IBinarySerializable.GetBinarySerials" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the load succeeded without exceptions; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Function LoadFromBinary(reader As BinaryReader) As Boolean
  overload: Model.Entities.CardBase.LoadFromBinary*
  implements:
  - Shared.Interfaces.Model.IBinarySerializable.LoadFromBinary(System.IO.BinaryReader)
references:
- uid: Shared.Interfaces.Model.ICard
  commentId: T:Shared.Interfaces.Model.ICard
  parent: Shared.Interfaces.Model
  href: Shared.Interfaces.Model.ICard.html
  name: ICard
  nameWithType: ICard
  fullName: Shared.Interfaces.Model.ICard
- uid: Model.Entities.CardBase.GameDeck
  commentId: P:Model.Entities.CardBase.GameDeck
  href: Model.Entities.CardBase.html#Model_Entities_CardBase_GameDeck
  name: GameDeck
  nameWithType: CardBase.GameDeck
  fullName: Model.Entities.CardBase.GameDeck
- uid: Shared.Interfaces.Model.ICardSet
  commentId: T:Shared.Interfaces.Model.ICardSet
  parent: Shared.Interfaces.Model
  href: Shared.Interfaces.Model.ICardSet.html
  name: ICardSet
  nameWithType: ICardSet
  fullName: Shared.Interfaces.Model.ICardSet
- uid: Model.Entities
  commentId: N:Model.Entities
  href: Model.html
  name: Model.Entities
  nameWithType: Model.Entities
  fullName: Model.Entities
  spec.csharp:
  - uid: Model
    name: Model
    href: Model.html
  - name: .
  - uid: Model.Entities
    name: Entities
    href: Model.Entities.html
  spec.vb:
  - uid: Model
    name: Model
    href: Model.html
  - name: .
  - uid: Model.Entities
    name: Entities
    href: Model.Entities.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Shared.Interfaces.Model.IBinarySerializable
  commentId: T:Shared.Interfaces.Model.IBinarySerializable
  parent: Shared.Interfaces.Model
  href: Shared.Interfaces.Model.IBinarySerializable.html
  name: IBinarySerializable
  nameWithType: IBinarySerializable
  fullName: Shared.Interfaces.Model.IBinarySerializable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Shared.Interfaces.Model
  commentId: N:Shared.Interfaces.Model
  href: Shared.html
  name: Shared.Interfaces.Model
  nameWithType: Shared.Interfaces.Model
  fullName: Shared.Interfaces.Model
  spec.csharp:
  - uid: Shared
    name: Shared
    href: Shared.html
  - name: .
  - uid: Shared.Interfaces
    name: Interfaces
    href: Shared.Interfaces.html
  - name: .
  - uid: Shared.Interfaces.Model
    name: Model
    href: Shared.Interfaces.Model.html
  spec.vb:
  - uid: Shared
    name: Shared
    href: Shared.html
  - name: .
  - uid: Shared.Interfaces
    name: Interfaces
    href: Shared.Interfaces.html
  - name: .
  - uid: Shared.Interfaces.Model
    name: Model
    href: Shared.Interfaces.Model.html
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Model.Entities.CardBase.#ctor*
  commentId: Overload:Model.Entities.CardBase.#ctor
  href: Model.Entities.CardBase.html#Model_Entities_CardBase__ctor_Microsoft_Extensions_Logging_ILoggerFactory_Shared_Services_Registry_ITypeRegister_Shared_Services_Registry_ITypeRelations__
  name: CardBase
  nameWithType: CardBase.CardBase
  fullName: Model.Entities.CardBase.CardBase
  nameWithType.vb: CardBase.New
  fullName.vb: Model.Entities.CardBase.New
  name.vb: New
- uid: Microsoft.Extensions.Logging.ILoggerFactory
  commentId: T:Microsoft.Extensions.Logging.ILoggerFactory
  parent: Microsoft.Extensions.Logging
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.iloggerfactory
  name: ILoggerFactory
  nameWithType: ILoggerFactory
  fullName: Microsoft.Extensions.Logging.ILoggerFactory
- uid: Shared.Services.Registry.ITypeRegister{Shared.Services.Registry.ITypeRelations}
  commentId: T:Shared.Services.Registry.ITypeRegister{Shared.Services.Registry.ITypeRelations}
  parent: Shared.Services.Registry
  definition: Shared.Services.Registry.ITypeRegister`1
  href: Shared.Services.Registry.ITypeRegister-1.html
  name: ITypeRegister<ITypeRelations>
  nameWithType: ITypeRegister<ITypeRelations>
  fullName: Shared.Services.Registry.ITypeRegister<Shared.Services.Registry.ITypeRelations>
  nameWithType.vb: ITypeRegister(Of ITypeRelations)
  fullName.vb: Shared.Services.Registry.ITypeRegister(Of Shared.Services.Registry.ITypeRelations)
  name.vb: ITypeRegister(Of ITypeRelations)
  spec.csharp:
  - uid: Shared.Services.Registry.ITypeRegister`1
    name: ITypeRegister
    href: Shared.Services.Registry.ITypeRegister-1.html
  - name: <
  - uid: Shared.Services.Registry.ITypeRelations
    name: ITypeRelations
    href: Shared.Services.Registry.ITypeRelations.html
  - name: '>'
  spec.vb:
  - uid: Shared.Services.Registry.ITypeRegister`1
    name: ITypeRegister
    href: Shared.Services.Registry.ITypeRegister-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Shared.Services.Registry.ITypeRelations
    name: ITypeRelations
    href: Shared.Services.Registry.ITypeRelations.html
  - name: )
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
- uid: Shared.Services.Registry.ITypeRegister`1
  commentId: T:Shared.Services.Registry.ITypeRegister`1
  href: Shared.Services.Registry.ITypeRegister-1.html
  name: ITypeRegister<T>
  nameWithType: ITypeRegister<T>
  fullName: Shared.Services.Registry.ITypeRegister<T>
  nameWithType.vb: ITypeRegister(Of T)
  fullName.vb: Shared.Services.Registry.ITypeRegister(Of T)
  name.vb: ITypeRegister(Of T)
  spec.csharp:
  - uid: Shared.Services.Registry.ITypeRegister`1
    name: ITypeRegister
    href: Shared.Services.Registry.ITypeRegister-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Shared.Services.Registry.ITypeRegister`1
    name: ITypeRegister
    href: Shared.Services.Registry.ITypeRegister-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Shared.Services.Registry
  commentId: N:Shared.Services.Registry
  href: Shared.html
  name: Shared.Services.Registry
  nameWithType: Shared.Services.Registry
  fullName: Shared.Services.Registry
  spec.csharp:
  - uid: Shared
    name: Shared
    href: Shared.html
  - name: .
  - uid: Shared.Services
    name: Services
    href: Shared.Services.html
  - name: .
  - uid: Shared.Services.Registry
    name: Registry
    href: Shared.Services.Registry.html
  spec.vb:
  - uid: Shared
    name: Shared
    href: Shared.html
  - name: .
  - uid: Shared.Services
    name: Services
    href: Shared.Services.html
  - name: .
  - uid: Shared.Services.Registry
    name: Registry
    href: Shared.Services.Registry.html
- uid: Model.Entities.CardBase.LoadFromBinary(System.IO.BinaryReader)
  commentId: M:Model.Entities.CardBase.LoadFromBinary(System.IO.BinaryReader)
  isExternal: true
  href: Model.Entities.CardBase.html#Model_Entities_CardBase_LoadFromBinary_System_IO_BinaryReader_
  name: LoadFromBinary(BinaryReader)
  nameWithType: CardBase.LoadFromBinary(BinaryReader)
  fullName: Model.Entities.CardBase.LoadFromBinary(System.IO.BinaryReader)
  spec.csharp:
  - uid: Model.Entities.CardBase.LoadFromBinary(System.IO.BinaryReader)
    name: LoadFromBinary
    href: Model.Entities.CardBase.html#Model_Entities_CardBase_LoadFromBinary_System_IO_BinaryReader_
  - name: (
  - uid: System.IO.BinaryReader
    name: BinaryReader
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.binaryreader
  - name: )
  spec.vb:
  - uid: Model.Entities.CardBase.LoadFromBinary(System.IO.BinaryReader)
    name: LoadFromBinary
    href: Model.Entities.CardBase.html#Model_Entities_CardBase_LoadFromBinary_System_IO_BinaryReader_
  - name: (
  - uid: System.IO.BinaryReader
    name: BinaryReader
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.binaryreader
  - name: )
- uid: Model.Entities.CardBase.CardFactory*
  commentId: Overload:Model.Entities.CardBase.CardFactory
  href: Model.Entities.CardBase.html#Model_Entities_CardBase_CardFactory
  name: CardFactory
  nameWithType: CardBase.CardFactory
  fullName: Model.Entities.CardBase.CardFactory
- uid: Model.Entities.Cards.CardFactory
  commentId: T:Model.Entities.Cards.CardFactory
  parent: Model.Entities.Cards
  href: Model.Entities.Cards.CardFactory.html
  name: CardFactory
  nameWithType: CardFactory
  fullName: Model.Entities.Cards.CardFactory
- uid: Model.Entities.Cards
  commentId: N:Model.Entities.Cards
  href: Model.html
  name: Model.Entities.Cards
  nameWithType: Model.Entities.Cards
  fullName: Model.Entities.Cards
  spec.csharp:
  - uid: Model
    name: Model
    href: Model.html
  - name: .
  - uid: Model.Entities
    name: Entities
    href: Model.Entities.html
  - name: .
  - uid: Model.Entities.Cards
    name: Cards
    href: Model.Entities.Cards.html
  spec.vb:
  - uid: Model
    name: Model
    href: Model.html
  - name: .
  - uid: Model.Entities
    name: Entities
    href: Model.Entities.html
  - name: .
  - uid: Model.Entities.Cards
    name: Cards
    href: Model.Entities.Cards.html
- uid: Model.Entities.CardBase.Sets*
  commentId: Overload:Model.Entities.CardBase.Sets
  href: Model.Entities.CardBase.html#Model_Entities_CardBase_Sets
  name: Sets
  nameWithType: CardBase.Sets
  fullName: Model.Entities.CardBase.Sets
- uid: System.Collections.Generic.List{Shared.Interfaces.Model.ICardSet}
  commentId: T:System.Collections.Generic.List{Shared.Interfaces.Model.ICardSet}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<ICardSet>
  nameWithType: List<ICardSet>
  fullName: System.Collections.Generic.List<Shared.Interfaces.Model.ICardSet>
  nameWithType.vb: List(Of ICardSet)
  fullName.vb: System.Collections.Generic.List(Of Shared.Interfaces.Model.ICardSet)
  name.vb: List(Of ICardSet)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Shared.Interfaces.Model.ICardSet
    name: ICardSet
    href: Shared.Interfaces.Model.ICardSet.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Shared.Interfaces.Model.ICardSet
    name: ICardSet
    href: Shared.Interfaces.Model.ICardSet.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Model.Entities.CardBase.GameDeck*
  commentId: Overload:Model.Entities.CardBase.GameDeck
  href: Model.Entities.CardBase.html#Model_Entities_CardBase_GameDeck
  name: GameDeck
  nameWithType: CardBase.GameDeck
  fullName: Model.Entities.CardBase.GameDeck
- uid: Model.Entities.Deck
  commentId: T:Model.Entities.Deck
  parent: Model.Entities
  href: Model.Entities.Deck.html
  name: Deck
  nameWithType: Deck
  fullName: Model.Entities.Deck
- uid: Shared.Interfaces.Model.IAssetFetcher
  commentId: T:Shared.Interfaces.Model.IAssetFetcher
  parent: Shared.Interfaces.Model
  href: Shared.Interfaces.Model.IAssetFetcher.html
  name: IAssetFetcher
  nameWithType: IAssetFetcher
  fullName: Shared.Interfaces.Model.IAssetFetcher
- uid: Model.Entities.CardBase
  commentId: T:Model.Entities.CardBase
  parent: Model.Entities
  href: Model.Entities.CardBase.html
  name: CardBase
  nameWithType: CardBase
  fullName: Model.Entities.CardBase
- uid: Shared.Interfaces.Model.IAssetFetcher.FetchCardSets
  commentId: M:Shared.Interfaces.Model.IAssetFetcher.FetchCardSets
  parent: Shared.Interfaces.Model.IAssetFetcher
  href: Shared.Interfaces.Model.IAssetFetcher.html#Shared_Interfaces_Model_IAssetFetcher_FetchCardSets
  name: FetchCardSets()
  nameWithType: IAssetFetcher.FetchCardSets()
  fullName: Shared.Interfaces.Model.IAssetFetcher.FetchCardSets()
  spec.csharp:
  - uid: Shared.Interfaces.Model.IAssetFetcher.FetchCardSets
    name: FetchCardSets
    href: Shared.Interfaces.Model.IAssetFetcher.html#Shared_Interfaces_Model_IAssetFetcher_FetchCardSets
  - name: (
  - name: )
  spec.vb:
  - uid: Shared.Interfaces.Model.IAssetFetcher.FetchCardSets
    name: FetchCardSets
    href: Shared.Interfaces.Model.IAssetFetcher.html#Shared_Interfaces_Model_IAssetFetcher_FetchCardSets
  - name: (
  - name: )
- uid: Shared.Interfaces.Model.IAssetFactory.GetAsset(System.String)
  commentId: M:Shared.Interfaces.Model.IAssetFactory.GetAsset(System.String)
  parent: Shared.Interfaces.Model.IAssetFactory
  isExternal: true
  href: Shared.Interfaces.Model.IAssetFactory.html#Shared_Interfaces_Model_IAssetFactory_GetAsset_System_String_
  name: GetAsset(string)
  nameWithType: IAssetFactory.GetAsset(string)
  fullName: Shared.Interfaces.Model.IAssetFactory.GetAsset(string)
  nameWithType.vb: IAssetFactory.GetAsset(String)
  fullName.vb: Shared.Interfaces.Model.IAssetFactory.GetAsset(String)
  name.vb: GetAsset(String)
  spec.csharp:
  - uid: Shared.Interfaces.Model.IAssetFactory.GetAsset(System.String)
    name: GetAsset
    href: Shared.Interfaces.Model.IAssetFactory.html#Shared_Interfaces_Model_IAssetFactory_GetAsset_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Shared.Interfaces.Model.IAssetFactory.GetAsset(System.String)
    name: GetAsset
    href: Shared.Interfaces.Model.IAssetFactory.html#Shared_Interfaces_Model_IAssetFactory_GetAsset_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Shared.Interfaces.Model.ITroopCard
  commentId: T:Shared.Interfaces.Model.ITroopCard
  parent: Shared.Interfaces.Model
  href: Shared.Interfaces.Model.ITroopCard.html
  name: ITroopCard
  nameWithType: ITroopCard
  fullName: Shared.Interfaces.Model.ITroopCard
- uid: Shared.Interfaces.Model.IGame
  commentId: T:Shared.Interfaces.Model.IGame
  parent: Shared.Interfaces.Model
  href: Shared.Interfaces.Model.IGame.html
  name: IGame
  nameWithType: IGame
  fullName: Shared.Interfaces.Model.IGame
- uid: Model.Entities.CardBase.InitializeFromAssets*
  commentId: Overload:Model.Entities.CardBase.InitializeFromAssets
  href: Model.Entities.CardBase.html#Model_Entities_CardBase_InitializeFromAssets_Shared_Interfaces_Model_IAssetFetcher_System_Boolean_
  name: InitializeFromAssets
  nameWithType: CardBase.InitializeFromAssets
  fullName: Model.Entities.CardBase.InitializeFromAssets
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Shared.Interfaces.Model.IAssetFactory
  commentId: T:Shared.Interfaces.Model.IAssetFactory
  parent: Shared.Interfaces.Model
  href: Shared.Interfaces.Model.IAssetFactory.html
  name: IAssetFactory
  nameWithType: IAssetFactory
  fullName: Shared.Interfaces.Model.IAssetFactory
- uid: Model.Entities.CardBase.InitializeLibrary*
  commentId: Overload:Model.Entities.CardBase.InitializeLibrary
  href: Model.Entities.CardBase.html#Model_Entities_CardBase_InitializeLibrary_Shared_Interfaces_Model_ICard___
  name: InitializeLibrary
  nameWithType: CardBase.InitializeLibrary
  fullName: Model.Entities.CardBase.InitializeLibrary
- uid: Shared.Interfaces.Model.ICard[]
  isExternal: true
  href: Shared.Interfaces.Model.ICard.html
  name: ICard[]
  nameWithType: ICard[]
  fullName: Shared.Interfaces.Model.ICard[]
  nameWithType.vb: ICard()
  fullName.vb: Shared.Interfaces.Model.ICard()
  name.vb: ICard()
  spec.csharp:
  - uid: Shared.Interfaces.Model.ICard
    name: ICard
    href: Shared.Interfaces.Model.ICard.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Shared.Interfaces.Model.ICard
    name: ICard
    href: Shared.Interfaces.Model.ICard.html
  - name: (
  - name: )
- uid: Model.Entities.CardBase.InitializeDiscardPile*
  commentId: Overload:Model.Entities.CardBase.InitializeDiscardPile
  href: Model.Entities.CardBase.html#Model_Entities_CardBase_InitializeDiscardPile_Shared_Interfaces_Model_ICard___
  name: InitializeDiscardPile
  nameWithType: CardBase.InitializeDiscardPile
  fullName: Model.Entities.CardBase.InitializeDiscardPile
- uid: Shared.Interfaces.Model.ICard.CardSet
  commentId: P:Shared.Interfaces.Model.ICard.CardSet
  parent: Shared.Interfaces.Model.ICard
  href: Shared.Interfaces.Model.ICard.html#Shared_Interfaces_Model_ICard_CardSet
  name: CardSet
  nameWithType: ICard.CardSet
  fullName: Shared.Interfaces.Model.ICard.CardSet
- uid: Shared.Interfaces.Model.ICardSet.IsValidTrade(Shared.Interfaces.Model.ICard[])
  commentId: M:Shared.Interfaces.Model.ICardSet.IsValidTrade(Shared.Interfaces.Model.ICard[])
  parent: Shared.Interfaces.Model.ICardSet
  href: Shared.Interfaces.Model.ICardSet.html#Shared_Interfaces_Model_ICardSet_IsValidTrade_Shared_Interfaces_Model_ICard___
  name: IsValidTrade(ICard[])
  nameWithType: ICardSet.IsValidTrade(ICard[])
  fullName: Shared.Interfaces.Model.ICardSet.IsValidTrade(Shared.Interfaces.Model.ICard[])
  nameWithType.vb: ICardSet.IsValidTrade(ICard())
  fullName.vb: Shared.Interfaces.Model.ICardSet.IsValidTrade(Shared.Interfaces.Model.ICard())
  name.vb: IsValidTrade(ICard())
  spec.csharp:
  - uid: Shared.Interfaces.Model.ICardSet.IsValidTrade(Shared.Interfaces.Model.ICard[])
    name: IsValidTrade
    href: Shared.Interfaces.Model.ICardSet.html#Shared_Interfaces_Model_ICardSet_IsValidTrade_Shared_Interfaces_Model_ICard___
  - name: (
  - uid: Shared.Interfaces.Model.ICard
    name: ICard
    href: Shared.Interfaces.Model.ICard.html
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Shared.Interfaces.Model.ICardSet.IsValidTrade(Shared.Interfaces.Model.ICard[])
    name: IsValidTrade
    href: Shared.Interfaces.Model.ICardSet.html#Shared_Interfaces_Model_ICardSet_IsValidTrade_Shared_Interfaces_Model_ICard___
  - name: (
  - uid: Shared.Interfaces.Model.ICard
    name: ICard
    href: Shared.Interfaces.Model.ICard.html
  - name: (
  - name: )
  - name: )
- uid: Model.Entities.CardBase.MapCardsToSets*
  commentId: Overload:Model.Entities.CardBase.MapCardsToSets
  href: Model.Entities.CardBase.html#Model_Entities_CardBase_MapCardsToSets_Shared_Interfaces_Model_ICard___
  name: MapCardsToSets
  nameWithType: CardBase.MapCardsToSets
  fullName: Model.Entities.CardBase.MapCardsToSets
- uid: Model.Entities.CardBase.GetBinarySerials*
  commentId: Overload:Model.Entities.CardBase.GetBinarySerials
  href: Model.Entities.CardBase.html#Model_Entities_CardBase_GetBinarySerials
  name: GetBinarySerials
  nameWithType: CardBase.GetBinarySerials
  fullName: Model.Entities.CardBase.GetBinarySerials
- uid: Shared.Interfaces.Model.IBinarySerializable.GetBinarySerials
  commentId: M:Shared.Interfaces.Model.IBinarySerializable.GetBinarySerials
  parent: Shared.Interfaces.Model.IBinarySerializable
  href: Shared.Interfaces.Model.IBinarySerializable.html#Shared_Interfaces_Model_IBinarySerializable_GetBinarySerials
  name: GetBinarySerials()
  nameWithType: IBinarySerializable.GetBinarySerials()
  fullName: Shared.Interfaces.Model.IBinarySerializable.GetBinarySerials()
  spec.csharp:
  - uid: Shared.Interfaces.Model.IBinarySerializable.GetBinarySerials
    name: GetBinarySerials
    href: Shared.Interfaces.Model.IBinarySerializable.html#Shared_Interfaces_Model_IBinarySerializable_GetBinarySerials
  - name: (
  - name: )
  spec.vb:
  - uid: Shared.Interfaces.Model.IBinarySerializable.GetBinarySerials
    name: GetBinarySerials
    href: Shared.Interfaces.Model.IBinarySerializable.html#Shared_Interfaces_Model_IBinarySerializable_GetBinarySerials
  - name: (
  - name: )
- uid: System.Threading.Tasks.Task{Shared.Services.Serializer.SerializedData[]}
  commentId: T:System.Threading.Tasks.Task{Shared.Services.Serializer.SerializedData[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<SerializedData[]>
  nameWithType: Task<SerializedData[]>
  fullName: System.Threading.Tasks.Task<Shared.Services.Serializer.SerializedData[]>
  nameWithType.vb: Task(Of SerializedData())
  fullName.vb: System.Threading.Tasks.Task(Of Shared.Services.Serializer.SerializedData())
  name.vb: Task(Of SerializedData())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Shared.Services.Serializer.SerializedData
    name: SerializedData
    href: Shared.Services.Serializer.SerializedData.html
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Shared.Services.Serializer.SerializedData
    name: SerializedData
    href: Shared.Services.Serializer.SerializedData.html
  - name: (
  - name: )
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: System.IO.BinaryReader.BaseStream
  commentId: P:System.IO.BinaryReader.BaseStream
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.binaryreader.basestream
  name: BaseStream
  nameWithType: BinaryReader.BaseStream
  fullName: System.IO.BinaryReader.BaseStream
- uid: Shared.Services.Serializer.BinarySerializer
  commentId: T:Shared.Services.Serializer.BinarySerializer
  href: Shared.Services.Serializer.BinarySerializer.html
  name: BinarySerializer
  nameWithType: BinarySerializer
  fullName: Shared.Services.Serializer.BinarySerializer
- uid: Model.Entities.CardBase.LoadFromBinary*
  commentId: Overload:Model.Entities.CardBase.LoadFromBinary
  href: Model.Entities.CardBase.html#Model_Entities_CardBase_LoadFromBinary_System_IO_BinaryReader_
  name: LoadFromBinary
  nameWithType: CardBase.LoadFromBinary
  fullName: Model.Entities.CardBase.LoadFromBinary
- uid: Shared.Interfaces.Model.IBinarySerializable.LoadFromBinary(System.IO.BinaryReader)
  commentId: M:Shared.Interfaces.Model.IBinarySerializable.LoadFromBinary(System.IO.BinaryReader)
  parent: Shared.Interfaces.Model.IBinarySerializable
  isExternal: true
  href: Shared.Interfaces.Model.IBinarySerializable.html#Shared_Interfaces_Model_IBinarySerializable_LoadFromBinary_System_IO_BinaryReader_
  name: LoadFromBinary(BinaryReader)
  nameWithType: IBinarySerializable.LoadFromBinary(BinaryReader)
  fullName: Shared.Interfaces.Model.IBinarySerializable.LoadFromBinary(System.IO.BinaryReader)
  spec.csharp:
  - uid: Shared.Interfaces.Model.IBinarySerializable.LoadFromBinary(System.IO.BinaryReader)
    name: LoadFromBinary
    href: Shared.Interfaces.Model.IBinarySerializable.html#Shared_Interfaces_Model_IBinarySerializable_LoadFromBinary_System_IO_BinaryReader_
  - name: (
  - uid: System.IO.BinaryReader
    name: BinaryReader
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.binaryreader
  - name: )
  spec.vb:
  - uid: Shared.Interfaces.Model.IBinarySerializable.LoadFromBinary(System.IO.BinaryReader)
    name: LoadFromBinary
    href: Shared.Interfaces.Model.IBinarySerializable.html#Shared_Interfaces_Model_IBinarySerializable_LoadFromBinary_System_IO_BinaryReader_
  - name: (
  - uid: System.IO.BinaryReader
    name: BinaryReader
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.binaryreader
  - name: )
- uid: System.IO.BinaryReader
  commentId: T:System.IO.BinaryReader
  parent: System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.binaryreader
  name: BinaryReader
  nameWithType: BinaryReader
  fullName: System.IO.BinaryReader
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
