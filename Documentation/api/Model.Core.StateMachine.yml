### YamlMime:ManagedReference
items:
- uid: Model.Core.StateMachine
  commentId: T:Model.Core.StateMachine
  id: StateMachine
  parent: Model.Core
  children:
  - Model.Core.StateMachine.#ctor(System.Int32,Microsoft.Extensions.Logging.ILogger{Model.Core.StateMachine})
  - Model.Core.StateMachine.CurrentPhase
  - Model.Core.StateMachine.DisablePlayer(System.Int32)
  - Model.Core.StateMachine.GetBinarySerials
  - Model.Core.StateMachine.IncrementNumTrades(System.Int32)
  - Model.Core.StateMachine.IncrementPhase
  - Model.Core.StateMachine.IncrementPlayerTurn
  - Model.Core.StateMachine.IncrementRound
  - Model.Core.StateMachine.InitializePlayerStatusArray(System.Byte)
  - Model.Core.StateMachine.IsActivePlayer
  - Model.Core.StateMachine.LoadFromBinary(System.IO.BinaryReader)
  - Model.Core.StateMachine.NumPlayers
  - Model.Core.StateMachine.NumTrades
  - Model.Core.StateMachine.PhaseStageTwo
  - Model.Core.StateMachine.PlayerTurn
  - Model.Core.StateMachine.Round
  - Model.Core.StateMachine.StateChanged
  - Model.Core.StateMachine.Winner
  langs:
  - csharp
  - vb
  name: StateMachine
  nameWithType: StateMachine
  fullName: Model.Core.StateMachine
  type: Class
  source:
    remote:
      path: Model/Core/StateMachine.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: StateMachine
    path: ../Model/Core/StateMachine.cs
    startLine: 10
  assemblies:
  - Model
  namespace: Model.Core
  summary: The game's state machine.
  example: []
  syntax:
    content: 'public class StateMachine : IBinarySerializable'
    content.vb: Public Class StateMachine Implements IBinarySerializable
  inheritance:
  - System.Object
  implements:
  - Shared.Interfaces.Model.IBinarySerializable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Model.Core.StateMachine.StateChanged
  commentId: F:Model.Core.StateMachine.StateChanged
  id: StateChanged
  parent: Model.Core.StateMachine
  langs:
  - csharp
  - vb
  name: StateChanged
  nameWithType: StateMachine.StateChanged
  fullName: Model.Core.StateMachine.StateChanged
  type: Field
  source:
    remote:
      path: Model/Core/StateMachine.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: StateChanged
    path: ../Model/Core/StateMachine.cs
    startLine: 25
  assemblies:
  - Model
  namespace: Model.Core
  summary: Indicates that a <xref href="Model.Core.StateMachine" data-throw-if-not-resolved="false"></xref> public property has changed value.
  remarks: Both <xref href="Model.Core.Regulator" data-throw-if-not-resolved="false"></xref> and <xref href="Shared.Interfaces.ViewModel.IMainVM" data-throw-if-not-resolved="false"></xref> subscribe to this event.
  example: []
  syntax:
    content: public EventHandler<string>? StateChanged
    return:
      type: System.EventHandler{System.String}
    content.vb: Public StateChanged As EventHandler(Of String)
- uid: Model.Core.StateMachine.#ctor(System.Int32,Microsoft.Extensions.Logging.ILogger{Model.Core.StateMachine})
  commentId: M:Model.Core.StateMachine.#ctor(System.Int32,Microsoft.Extensions.Logging.ILogger{Model.Core.StateMachine})
  id: '#ctor(System.Int32,Microsoft.Extensions.Logging.ILogger{Model.Core.StateMachine})'
  parent: Model.Core.StateMachine
  langs:
  - csharp
  - vb
  name: StateMachine(int, ILogger<StateMachine>)
  nameWithType: StateMachine.StateMachine(int, ILogger<StateMachine>)
  fullName: Model.Core.StateMachine.StateMachine(int, Microsoft.Extensions.Logging.ILogger<Model.Core.StateMachine>)
  type: Constructor
  source:
    remote:
      path: Model/Core/StateMachine.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: .ctor
    path: ../Model/Core/StateMachine.cs
    startLine: 32
  assemblies:
  - Model
  namespace: Model.Core
  summary: Constructs the machine based on the number of players in the game.
  example: []
  syntax:
    content: public StateMachine(int numPlayers, ILogger<StateMachine> logger)
    parameters:
    - id: numPlayers
      type: System.Int32
      description: The number of players.
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger{Model.Core.StateMachine}
      description: Provided by an <xref href="Microsoft.Extensions.Logging.ILoggerFactory" data-throw-if-not-resolved="false"></xref> during <xref href="Model.Core.Game" data-throw-if-not-resolved="false"></xref> construction.
    content.vb: Public Sub New(numPlayers As Integer, logger As ILogger(Of StateMachine))
  overload: Model.Core.StateMachine.#ctor*
  nameWithType.vb: StateMachine.New(Integer, ILogger(Of StateMachine))
  fullName.vb: Model.Core.StateMachine.New(Integer, Microsoft.Extensions.Logging.ILogger(Of Model.Core.StateMachine))
  name.vb: New(Integer, ILogger(Of StateMachine))
- uid: Model.Core.StateMachine.NumPlayers
  commentId: P:Model.Core.StateMachine.NumPlayers
  id: NumPlayers
  parent: Model.Core.StateMachine
  langs:
  - csharp
  - vb
  name: NumPlayers
  nameWithType: StateMachine.NumPlayers
  fullName: Model.Core.StateMachine.NumPlayers
  type: Property
  source:
    remote:
      path: Model/Core/StateMachine.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: NumPlayers
    path: ../Model/Core/StateMachine.cs
    startLine: 53
  assemblies:
  - Model
  namespace: Model.Core
  summary: Gets or sets the <xref href="System.Int32?text=number" data-throw-if-not-resolved="false"></xref> of <xref href="Shared.Interfaces.Model.IPlayer" data-throw-if-not-resolved="false"></xref> in the parent <xref href="Model.Core.Game" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public int NumPlayers { get; }
    parameters: []
    return:
      type: System.Int32
      description: An <xref href="System.Int32" data-throw-if-not-resolved="false"></xref> from 2-6.
    content.vb: Public Property NumPlayers As Integer
  overload: Model.Core.StateMachine.NumPlayers*
- uid: Model.Core.StateMachine.IsActivePlayer
  commentId: P:Model.Core.StateMachine.IsActivePlayer
  id: IsActivePlayer
  parent: Model.Core.StateMachine
  langs:
  - csharp
  - vb
  name: IsActivePlayer
  nameWithType: StateMachine.IsActivePlayer
  fullName: Model.Core.StateMachine.IsActivePlayer
  type: Property
  source:
    remote:
      path: Model/Core/StateMachine.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: IsActivePlayer
    path: ../Model/Core/StateMachine.cs
    startLine: 61
  assemblies:
  - Model
  namespace: Model.Core
  summary: Gets or sets an array of flags indicating which <xref href="Shared.Interfaces.Model.IPlayer" data-throw-if-not-resolved="false"></xref>s are active.
  example: []
  syntax:
    content: public BitArray IsActivePlayer { get; }
    parameters: []
    return:
      type: System.Collections.BitArray
      description: >-
        A <xref href="System.Collections.BitArray" data-throw-if-not-resolved="false"></xref> of one <xref href="System.Byte" data-throw-if-not-resolved="false"></xref>. Each index of the array corresponds to a <xref href="Shared.Interfaces.Model.IPlayer.Number" data-throw-if-not-resolved="false"></xref>,<br />

        with a <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> (<xref href="System.Int32?text=1" data-throw-if-not-resolved="false"></xref>) value indicating a player is active, and <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> (<xref href="System.Int32?text=0" data-throw-if-not-resolved="false"></xref>) inactive.
    content.vb: Public Property IsActivePlayer As BitArray
  overload: Model.Core.StateMachine.IsActivePlayer*
- uid: Model.Core.StateMachine.CurrentPhase
  commentId: P:Model.Core.StateMachine.CurrentPhase
  id: CurrentPhase
  parent: Model.Core.StateMachine
  langs:
  - csharp
  - vb
  name: CurrentPhase
  nameWithType: StateMachine.CurrentPhase
  fullName: Model.Core.StateMachine.CurrentPhase
  type: Property
  source:
    remote:
      path: Model/Core/StateMachine.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: CurrentPhase
    path: ../Model/Core/StateMachine.cs
    startLine: 65
  assemblies:
  - Model
  namespace: Model.Core
  summary: Gets what phase the game is currently in, or sets the phase and invokes <xref href="Model.Core.StateMachine.StateChanged" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public GamePhase CurrentPhase { get; set; }
    parameters: []
    return:
      type: Shared.Enums.GamePhase
    content.vb: Public Property CurrentPhase As GamePhase
  overload: Model.Core.StateMachine.CurrentPhase*
- uid: Model.Core.StateMachine.PhaseStageTwo
  commentId: P:Model.Core.StateMachine.PhaseStageTwo
  id: PhaseStageTwo
  parent: Model.Core.StateMachine
  langs:
  - csharp
  - vb
  name: PhaseStageTwo
  nameWithType: StateMachine.PhaseStageTwo
  fullName: Model.Core.StateMachine.PhaseStageTwo
  type: Property
  source:
    remote:
      path: Model/Core/StateMachine.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: PhaseStageTwo
    path: ../Model/Core/StateMachine.cs
    startLine: 80
  assemblies:
  - Model
  namespace: Model.Core
  summary: >-
    Gets a value indicating whether a two-part phase is in the first or second stage. Or, sets this value and invokes <xref href="Model.Core.StateMachine.StateChanged" data-throw-if-not-resolved="false"></xref>.

    <p><example>E.g.: In the first stage of <xref href="Shared.Enums.GamePhase.Attack" data-throw-if-not-resolved="false"></xref>, the model must accept input of the attack source.<br />

    In the second stage, it must use this selection together with a second input: the attack target.</example></p>
  example: []
  syntax:
    content: public bool PhaseStageTwo { get; set; }
    parameters: []
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the <xref href="Model.Core.StateMachine.CurrentPhase" data-throw-if-not-resolved="false"></xref> is a two-stage <xref href="Shared.Enums.GamePhase" data-throw-if-not-resolved="false"></xref> and is in its second stage. Otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Property PhaseStageTwo As Boolean
  overload: Model.Core.StateMachine.PhaseStageTwo*
- uid: Model.Core.StateMachine.PlayerTurn
  commentId: P:Model.Core.StateMachine.PlayerTurn
  id: PlayerTurn
  parent: Model.Core.StateMachine
  langs:
  - csharp
  - vb
  name: PlayerTurn
  nameWithType: StateMachine.PlayerTurn
  fullName: Model.Core.StateMachine.PlayerTurn
  type: Property
  source:
    remote:
      path: Model/Core/StateMachine.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: PlayerTurn
    path: ../Model/Core/StateMachine.cs
    startLine: 95
  assemblies:
  - Model
  namespace: Model.Core
  summary: Gets the number of the player whose turn it is. Or, sets this value and invokes <xref href="Model.Core.StateMachine.StateChanged" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public int PlayerTurn { get; set; }
    parameters: []
    return:
      type: System.Int32
      description: An integer assignation for a player, from 0-5.
    content.vb: Public Property PlayerTurn As Integer
  overload: Model.Core.StateMachine.PlayerTurn*
- uid: Model.Core.StateMachine.Round
  commentId: P:Model.Core.StateMachine.Round
  id: Round
  parent: Model.Core.StateMachine
  langs:
  - csharp
  - vb
  name: Round
  nameWithType: StateMachine.Round
  fullName: Model.Core.StateMachine.Round
  type: Property
  source:
    remote:
      path: Model/Core/StateMachine.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: Round
    path: ../Model/Core/StateMachine.cs
    startLine: 111
  assemblies:
  - Model
  namespace: Model.Core
  summary: Gets the number of rounds the game has entered so far. Or, sets this value and invokes <xref href="Model.Core.StateMachine.StateChanged" data-throw-if-not-resolved="false"></xref>.
  remarks: A round is completed once <xref href="Model.Core.StateMachine.PlayerTurn" data-throw-if-not-resolved="false"></xref> increases beyond <xref href="Model.Core.StateMachine.NumPlayers" data-throw-if-not-resolved="false"></xref>. The 0th Round is the setup round.
  example: []
  syntax:
    content: public int Round { get; set; }
    parameters: []
    return:
      type: System.Int32
      description: An integer representing the number of times the turn has passed to each player.
    content.vb: Public Property Round As Integer
  overload: Model.Core.StateMachine.Round*
- uid: Model.Core.StateMachine.NumTrades
  commentId: P:Model.Core.StateMachine.NumTrades
  id: NumTrades
  parent: Model.Core.StateMachine
  langs:
  - csharp
  - vb
  name: NumTrades
  nameWithType: StateMachine.NumTrades
  fullName: Model.Core.StateMachine.NumTrades
  type: Property
  source:
    remote:
      path: Model/Core/StateMachine.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: NumTrades
    path: ../Model/Core/StateMachine.cs
    startLine: 126
  assemblies:
  - Model
  namespace: Model.Core
  summary: Gets the number of times a set of cards has been traded in for bonus armies during the current game. Or, sets this value and invokes <xref href="Model.Core.StateMachine.StateChanged" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public int NumTrades { get; set; }
    parameters: []
    return:
      type: System.Int32
      description: An integer of 0 or more that is incremented each time a player trades in a set of cards.
    content.vb: Public Property NumTrades As Integer
  overload: Model.Core.StateMachine.NumTrades*
- uid: Model.Core.StateMachine.Winner
  commentId: P:Model.Core.StateMachine.Winner
  id: Winner
  parent: Model.Core.StateMachine
  langs:
  - csharp
  - vb
  name: Winner
  nameWithType: StateMachine.Winner
  fullName: Model.Core.StateMachine.Winner
  type: Property
  source:
    remote:
      path: Model/Core/StateMachine.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: Winner
    path: ../Model/Core/StateMachine.cs
    startLine: 141
  assemblies:
  - Model
  namespace: Model.Core
  summary: Gets or sets a value designating a player as the game winner.
  example: []
  syntax:
    content: public int Winner { get; set; }
    parameters: []
    return:
      type: System.Int32
      description: An integer from 0-5.
    content.vb: Public Property Winner As Integer
  overload: Model.Core.StateMachine.Winner*
- uid: Model.Core.StateMachine.GetBinarySerials
  commentId: M:Model.Core.StateMachine.GetBinarySerials
  id: GetBinarySerials
  parent: Model.Core.StateMachine
  langs:
  - csharp
  - vb
  name: GetBinarySerials()
  nameWithType: StateMachine.GetBinarySerials()
  fullName: Model.Core.StateMachine.GetBinarySerials()
  type: Method
  source:
    remote:
      path: Model/Core/StateMachine.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: GetBinarySerials
    path: ../Model/Core/StateMachine.cs
    startLine: 144
  assemblies:
  - Model
  namespace: Model.Core
  summary: Asynchronously serializes the <xref href="Shared.Interfaces.Model.IBinarySerializable" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public Task<SerializedData[]> GetBinarySerials()
    return:
      type: System.Threading.Tasks.Task{Shared.Services.Serializer.SerializedData[]}
      description: A task whose result contains serialized object data.
    content.vb: Public Function GetBinarySerials() As Task(Of SerializedData())
  overload: Model.Core.StateMachine.GetBinarySerials*
  implements:
  - Shared.Interfaces.Model.IBinarySerializable.GetBinarySerials
- uid: Model.Core.StateMachine.LoadFromBinary(System.IO.BinaryReader)
  commentId: M:Model.Core.StateMachine.LoadFromBinary(System.IO.BinaryReader)
  id: LoadFromBinary(System.IO.BinaryReader)
  parent: Model.Core.StateMachine
  langs:
  - csharp
  - vb
  name: LoadFromBinary(BinaryReader)
  nameWithType: StateMachine.LoadFromBinary(BinaryReader)
  fullName: Model.Core.StateMachine.LoadFromBinary(System.IO.BinaryReader)
  type: Method
  source:
    remote:
      path: Model/Core/StateMachine.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: LoadFromBinary
    path: ../Model/Core/StateMachine.cs
    startLine: 161
  assemblies:
  - Model
  namespace: Model.Core
  summary: Loads the <xref href="Shared.Interfaces.Model.IBinarySerializable" data-throw-if-not-resolved="false"></xref> with binary values read from a file.
  example: []
  syntax:
    content: public bool LoadFromBinary(BinaryReader reader)
    parameters:
    - id: reader
      type: System.IO.BinaryReader
      description: A reader whose <xref href="System.IO.BinaryReader.BaseStream" data-throw-if-not-resolved="false"></xref> was previously written to using <xref href="Shared.Services.Serializer.BinarySerializer" data-throw-if-not-resolved="false"></xref> and <xref href="Shared.Interfaces.Model.IBinarySerializable.GetBinarySerials" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the load succeeded without exceptions; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Function LoadFromBinary(reader As BinaryReader) As Boolean
  overload: Model.Core.StateMachine.LoadFromBinary*
  implements:
  - Shared.Interfaces.Model.IBinarySerializable.LoadFromBinary(System.IO.BinaryReader)
- uid: Model.Core.StateMachine.IncrementRound
  commentId: M:Model.Core.StateMachine.IncrementRound
  id: IncrementRound
  parent: Model.Core.StateMachine
  langs:
  - csharp
  - vb
  name: IncrementRound()
  nameWithType: StateMachine.IncrementRound()
  fullName: Model.Core.StateMachine.IncrementRound()
  type: Method
  source:
    remote:
      path: Model/Core/StateMachine.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: IncrementRound
    path: ../Model/Core/StateMachine.cs
    startLine: 183
  assemblies:
  - Model
  namespace: Model.Core
  summary: End the current round and perform end of round actions.
  example: []
  syntax:
    content: public void IncrementRound()
    content.vb: Public Sub IncrementRound()
  overload: Model.Core.StateMachine.IncrementRound*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: Thrown if there is an attempt to calculate the next active player when all players are inactive.
- uid: Model.Core.StateMachine.IncrementPlayerTurn
  commentId: M:Model.Core.StateMachine.IncrementPlayerTurn
  id: IncrementPlayerTurn
  parent: Model.Core.StateMachine
  langs:
  - csharp
  - vb
  name: IncrementPlayerTurn()
  nameWithType: StateMachine.IncrementPlayerTurn()
  fullName: Model.Core.StateMachine.IncrementPlayerTurn()
  type: Method
  source:
    remote:
      path: Model/Core/StateMachine.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: IncrementPlayerTurn
    path: ../Model/Core/StateMachine.cs
    startLine: 201
  assemblies:
  - Model
  namespace: Model.Core
  summary: End the current <xref href="Model.Core.StateMachine.PlayerTurn" data-throw-if-not-resolved="false"></xref> and perform end of turn actions.
  example: []
  syntax:
    content: public void IncrementPlayerTurn()
    content.vb: Public Sub IncrementPlayerTurn()
  overload: Model.Core.StateMachine.IncrementPlayerTurn*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: Thrown if there is an attempt to calculate the next active player when all players are inactive.
- uid: Model.Core.StateMachine.IncrementPhase
  commentId: M:Model.Core.StateMachine.IncrementPhase
  id: IncrementPhase
  parent: Model.Core.StateMachine
  langs:
  - csharp
  - vb
  name: IncrementPhase()
  nameWithType: StateMachine.IncrementPhase()
  fullName: Model.Core.StateMachine.IncrementPhase()
  type: Method
  source:
    remote:
      path: Model/Core/StateMachine.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: IncrementPhase
    path: ../Model/Core/StateMachine.cs
    startLine: 229
  assemblies:
  - Model
  namespace: Model.Core
  summary: End the current <xref href="Shared.Enums.GamePhase" data-throw-if-not-resolved="false"></xref> and perform end of phase actions.
  example: []
  syntax:
    content: public void IncrementPhase()
    content.vb: Public Sub IncrementPhase()
  overload: Model.Core.StateMachine.IncrementPhase*
- uid: Model.Core.StateMachine.IncrementNumTrades(System.Int32)
  commentId: M:Model.Core.StateMachine.IncrementNumTrades(System.Int32)
  id: IncrementNumTrades(System.Int32)
  parent: Model.Core.StateMachine
  langs:
  - csharp
  - vb
  name: IncrementNumTrades(int)
  nameWithType: StateMachine.IncrementNumTrades(int)
  fullName: Model.Core.StateMachine.IncrementNumTrades(int)
  type: Method
  source:
    remote:
      path: Model/Core/StateMachine.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: IncrementNumTrades
    path: ../Model/Core/StateMachine.cs
    startLine: 251
  assemblies:
  - Model
  namespace: Model.Core
  summary: Increase <xref href="Model.Core.StateMachine.NumTrades" data-throw-if-not-resolved="false"></xref> by a fixed amount.
  example: []
  syntax:
    content: public void IncrementNumTrades(int increment)
    parameters:
    - id: increment
      type: System.Int32
      description: The amount of increase.
    content.vb: Public Sub IncrementNumTrades(increment As Integer)
  overload: Model.Core.StateMachine.IncrementNumTrades*
  nameWithType.vb: StateMachine.IncrementNumTrades(Integer)
  fullName.vb: Model.Core.StateMachine.IncrementNumTrades(Integer)
  name.vb: IncrementNumTrades(Integer)
- uid: Model.Core.StateMachine.DisablePlayer(System.Int32)
  commentId: M:Model.Core.StateMachine.DisablePlayer(System.Int32)
  id: DisablePlayer(System.Int32)
  parent: Model.Core.StateMachine
  langs:
  - csharp
  - vb
  name: DisablePlayer(int)
  nameWithType: StateMachine.DisablePlayer(int)
  fullName: Model.Core.StateMachine.DisablePlayer(int)
  type: Method
  source:
    remote:
      path: Model/Core/StateMachine.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: DisablePlayer
    path: ../Model/Core/StateMachine.cs
    startLine: 264
  assemblies:
  - Model
  namespace: Model.Core
  summary: Disable a player.
  remarks: >-
    <p>Typically this is reserved for when a player has been defeated.<br />

    Disable works by "skipping" disabled player numbers when incrementing <xref href="Model.Core.StateMachine.PlayerTurn" data-throw-if-not-resolved="false"></xref>s and <xref href="Model.Core.StateMachine.Round" data-throw-if-not-resolved="false"></xref>s.</p>

    <seealso><p>See <xref href="Model.Core.StateMachine.NextActivePlayer" data-throw-if-not-resolved="false"></xref>, <xref href="Model.Core.StateMachine.NextActivePlayer(System.Int32)" data-throw-if-not-resolved="false"></xref>, and <xref href="Model.Core.StateMachine.IsActivePlayer" data-throw-if-not-resolved="false"></xref>.</p></seealso>
  example: []
  syntax:
    content: public void DisablePlayer(int player)
    parameters:
    - id: player
      type: System.Int32
      description: ''
    content.vb: Public Sub DisablePlayer(player As Integer)
  overload: Model.Core.StateMachine.DisablePlayer*
  nameWithType.vb: StateMachine.DisablePlayer(Integer)
  fullName.vb: Model.Core.StateMachine.DisablePlayer(Integer)
  name.vb: DisablePlayer(Integer)
- uid: Model.Core.StateMachine.InitializePlayerStatusArray(System.Byte)
  commentId: M:Model.Core.StateMachine.InitializePlayerStatusArray(System.Byte)
  id: InitializePlayerStatusArray(System.Byte)
  parent: Model.Core.StateMachine
  langs:
  - csharp
  - vb
  name: InitializePlayerStatusArray(byte)
  nameWithType: StateMachine.InitializePlayerStatusArray(byte)
  fullName: Model.Core.StateMachine.InitializePlayerStatusArray(byte)
  type: Method
  source:
    remote:
      path: Model/Core/StateMachine.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: InitializePlayerStatusArray
    path: ../Model/Core/StateMachine.cs
    startLine: 315
  assemblies:
  - Model
  namespace: Model.Core
  summary: Initializes <xref href="Model.Core.StateMachine.IsActivePlayer" data-throw-if-not-resolved="false"></xref> from a saved game.
  example: []
  syntax:
    content: public void InitializePlayerStatusArray(byte data)
    parameters:
    - id: data
      type: System.Byte
      description: Typically, data from <xref href="Shared.Services.Serializer.BinarySerializer.ReadConvertible(System.IO.BinaryReader%2cSystem.Type)" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Sub InitializePlayerStatusArray(data As Byte)
  overload: Model.Core.StateMachine.InitializePlayerStatusArray*
  nameWithType.vb: StateMachine.InitializePlayerStatusArray(Byte)
  fullName.vb: Model.Core.StateMachine.InitializePlayerStatusArray(Byte)
  name.vb: InitializePlayerStatusArray(Byte)
references:
- uid: Model.Core
  commentId: N:Model.Core
  href: Model.html
  name: Model.Core
  nameWithType: Model.Core
  fullName: Model.Core
  spec.csharp:
  - uid: Model
    name: Model
    href: Model.html
  - name: .
  - uid: Model.Core
    name: Core
    href: Model.Core.html
  spec.vb:
  - uid: Model
    name: Model
    href: Model.html
  - name: .
  - uid: Model.Core
    name: Core
    href: Model.Core.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Shared.Interfaces.Model.IBinarySerializable
  commentId: T:Shared.Interfaces.Model.IBinarySerializable
  parent: Shared.Interfaces.Model
  href: Shared.Interfaces.Model.IBinarySerializable.html
  name: IBinarySerializable
  nameWithType: IBinarySerializable
  fullName: Shared.Interfaces.Model.IBinarySerializable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Shared.Interfaces.Model
  commentId: N:Shared.Interfaces.Model
  href: Shared.html
  name: Shared.Interfaces.Model
  nameWithType: Shared.Interfaces.Model
  fullName: Shared.Interfaces.Model
  spec.csharp:
  - uid: Shared
    name: Shared
    href: Shared.html
  - name: .
  - uid: Shared.Interfaces
    name: Interfaces
    href: Shared.Interfaces.html
  - name: .
  - uid: Shared.Interfaces.Model
    name: Model
    href: Shared.Interfaces.Model.html
  spec.vb:
  - uid: Shared
    name: Shared
    href: Shared.html
  - name: .
  - uid: Shared.Interfaces
    name: Interfaces
    href: Shared.Interfaces.html
  - name: .
  - uid: Shared.Interfaces.Model
    name: Model
    href: Shared.Interfaces.Model.html
- uid: Model.Core.StateMachine
  commentId: T:Model.Core.StateMachine
  parent: Model.Core
  href: Model.Core.StateMachine.html
  name: StateMachine
  nameWithType: StateMachine
  fullName: Model.Core.StateMachine
- uid: Model.Core.Regulator
  commentId: T:Model.Core.Regulator
  href: Model.Core.Regulator.html
  name: Regulator
  nameWithType: Regulator
  fullName: Model.Core.Regulator
- uid: Shared.Interfaces.ViewModel.IMainVM
  commentId: T:Shared.Interfaces.ViewModel.IMainVM
  href: Shared.Interfaces.ViewModel.IMainVM.html
  name: IMainVM
  nameWithType: IMainVM
  fullName: Shared.Interfaces.ViewModel.IMainVM
- uid: System.EventHandler{System.String}
  commentId: T:System.EventHandler{System.String}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<string>
  nameWithType: EventHandler<string>
  fullName: System.EventHandler<string>
  nameWithType.vb: EventHandler(Of String)
  fullName.vb: System.EventHandler(Of String)
  name.vb: EventHandler(Of String)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - name: TEventArgs
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - name: TEventArgs
  - name: )
- uid: Microsoft.Extensions.Logging.ILoggerFactory
  commentId: T:Microsoft.Extensions.Logging.ILoggerFactory
  parent: Microsoft.Extensions.Logging
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.iloggerfactory
  name: ILoggerFactory
  nameWithType: ILoggerFactory
  fullName: Microsoft.Extensions.Logging.ILoggerFactory
- uid: Model.Core.Game
  commentId: T:Model.Core.Game
  href: Model.Core.Game.html
  name: Game
  nameWithType: Game
  fullName: Model.Core.Game
- uid: Model.Core.StateMachine.#ctor*
  commentId: Overload:Model.Core.StateMachine.#ctor
  href: Model.Core.StateMachine.html#Model_Core_StateMachine__ctor_System_Int32_Microsoft_Extensions_Logging_ILogger_Model_Core_StateMachine__
  name: StateMachine
  nameWithType: StateMachine.StateMachine
  fullName: Model.Core.StateMachine.StateMachine
  nameWithType.vb: StateMachine.New
  fullName.vb: Model.Core.StateMachine.New
  name.vb: New
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Microsoft.Extensions.Logging.ILogger{Model.Core.StateMachine}
  commentId: T:Microsoft.Extensions.Logging.ILogger{Model.Core.StateMachine}
  parent: Microsoft.Extensions.Logging
  definition: Microsoft.Extensions.Logging.ILogger`1
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  name: ILogger<StateMachine>
  nameWithType: ILogger<StateMachine>
  fullName: Microsoft.Extensions.Logging.ILogger<Model.Core.StateMachine>
  nameWithType.vb: ILogger(Of StateMachine)
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of Model.Core.StateMachine)
  name.vb: ILogger(Of StateMachine)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: <
  - uid: Model.Core.StateMachine
    name: StateMachine
    href: Model.Core.StateMachine.html
  - name: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: (
  - name: Of
  - name: " "
  - uid: Model.Core.StateMachine
    name: StateMachine
    href: Model.Core.StateMachine.html
  - name: )
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
- uid: Microsoft.Extensions.Logging.ILogger`1
  commentId: T:Microsoft.Extensions.Logging.ILogger`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  name: ILogger<TCategoryName>
  nameWithType: ILogger<TCategoryName>
  fullName: Microsoft.Extensions.Logging.ILogger<TCategoryName>
  nameWithType.vb: ILogger(Of TCategoryName)
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of TCategoryName)
  name.vb: ILogger(Of TCategoryName)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: <
  - name: TCategoryName
  - name: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: (
  - name: Of
  - name: " "
  - name: TCategoryName
  - name: )
- uid: Shared.Interfaces.Model.IPlayer
  commentId: T:Shared.Interfaces.Model.IPlayer
  parent: Shared.Interfaces.Model
  href: Shared.Interfaces.Model.IPlayer.html
  name: IPlayer
  nameWithType: IPlayer
  fullName: Shared.Interfaces.Model.IPlayer
- uid: Model.Core.StateMachine.NumPlayers*
  commentId: Overload:Model.Core.StateMachine.NumPlayers
  href: Model.Core.StateMachine.html#Model_Core_StateMachine_NumPlayers
  name: NumPlayers
  nameWithType: StateMachine.NumPlayers
  fullName: Model.Core.StateMachine.NumPlayers
- uid: System.Collections.BitArray
  commentId: T:System.Collections.BitArray
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.bitarray
  name: BitArray
  nameWithType: BitArray
  fullName: System.Collections.BitArray
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte
  nameWithType: byte
  fullName: byte
  nameWithType.vb: Byte
  fullName.vb: Byte
  name.vb: Byte
- uid: Shared.Interfaces.Model.IPlayer.Number
  commentId: P:Shared.Interfaces.Model.IPlayer.Number
  parent: Shared.Interfaces.Model.IPlayer
  href: Shared.Interfaces.Model.IPlayer.html#Shared_Interfaces_Model_IPlayer_Number
  name: Number
  nameWithType: IPlayer.Number
  fullName: Shared.Interfaces.Model.IPlayer.Number
- uid: Model.Core.StateMachine.IsActivePlayer*
  commentId: Overload:Model.Core.StateMachine.IsActivePlayer
  href: Model.Core.StateMachine.html#Model_Core_StateMachine_IsActivePlayer
  name: IsActivePlayer
  nameWithType: StateMachine.IsActivePlayer
  fullName: Model.Core.StateMachine.IsActivePlayer
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: Model.Core.StateMachine.StateChanged
  commentId: F:Model.Core.StateMachine.StateChanged
  href: Model.Core.StateMachine.html#Model_Core_StateMachine_StateChanged
  name: StateChanged
  nameWithType: StateMachine.StateChanged
  fullName: Model.Core.StateMachine.StateChanged
- uid: Model.Core.StateMachine.CurrentPhase*
  commentId: Overload:Model.Core.StateMachine.CurrentPhase
  href: Model.Core.StateMachine.html#Model_Core_StateMachine_CurrentPhase
  name: CurrentPhase
  nameWithType: StateMachine.CurrentPhase
  fullName: Model.Core.StateMachine.CurrentPhase
- uid: Shared.Enums.GamePhase
  commentId: T:Shared.Enums.GamePhase
  parent: Shared.Enums
  href: Shared.Enums.GamePhase.html
  name: GamePhase
  nameWithType: GamePhase
  fullName: Shared.Enums.GamePhase
- uid: Shared.Enums
  commentId: N:Shared.Enums
  href: Shared.html
  name: Shared.Enums
  nameWithType: Shared.Enums
  fullName: Shared.Enums
  spec.csharp:
  - uid: Shared
    name: Shared
    href: Shared.html
  - name: .
  - uid: Shared.Enums
    name: Enums
    href: Shared.Enums.html
  spec.vb:
  - uid: Shared
    name: Shared
    href: Shared.html
  - name: .
  - uid: Shared.Enums
    name: Enums
    href: Shared.Enums.html
- uid: Shared.Enums.GamePhase.Attack
  commentId: F:Shared.Enums.GamePhase.Attack
  href: Shared.Enums.GamePhase.html#Shared_Enums_GamePhase_Attack
  name: Attack
  nameWithType: GamePhase.Attack
  fullName: Shared.Enums.GamePhase.Attack
- uid: Model.Core.StateMachine.CurrentPhase
  commentId: P:Model.Core.StateMachine.CurrentPhase
  href: Model.Core.StateMachine.html#Model_Core_StateMachine_CurrentPhase
  name: CurrentPhase
  nameWithType: StateMachine.CurrentPhase
  fullName: Model.Core.StateMachine.CurrentPhase
- uid: Model.Core.StateMachine.PhaseStageTwo*
  commentId: Overload:Model.Core.StateMachine.PhaseStageTwo
  href: Model.Core.StateMachine.html#Model_Core_StateMachine_PhaseStageTwo
  name: PhaseStageTwo
  nameWithType: StateMachine.PhaseStageTwo
  fullName: Model.Core.StateMachine.PhaseStageTwo
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Model.Core.StateMachine.PlayerTurn*
  commentId: Overload:Model.Core.StateMachine.PlayerTurn
  href: Model.Core.StateMachine.html#Model_Core_StateMachine_PlayerTurn
  name: PlayerTurn
  nameWithType: StateMachine.PlayerTurn
  fullName: Model.Core.StateMachine.PlayerTurn
- uid: Model.Core.StateMachine.PlayerTurn
  commentId: P:Model.Core.StateMachine.PlayerTurn
  href: Model.Core.StateMachine.html#Model_Core_StateMachine_PlayerTurn
  name: PlayerTurn
  nameWithType: StateMachine.PlayerTurn
  fullName: Model.Core.StateMachine.PlayerTurn
- uid: Model.Core.StateMachine.NumPlayers
  commentId: P:Model.Core.StateMachine.NumPlayers
  href: Model.Core.StateMachine.html#Model_Core_StateMachine_NumPlayers
  name: NumPlayers
  nameWithType: StateMachine.NumPlayers
  fullName: Model.Core.StateMachine.NumPlayers
- uid: Model.Core.StateMachine.Round*
  commentId: Overload:Model.Core.StateMachine.Round
  href: Model.Core.StateMachine.html#Model_Core_StateMachine_Round
  name: Round
  nameWithType: StateMachine.Round
  fullName: Model.Core.StateMachine.Round
- uid: Model.Core.StateMachine.NumTrades*
  commentId: Overload:Model.Core.StateMachine.NumTrades
  href: Model.Core.StateMachine.html#Model_Core_StateMachine_NumTrades
  name: NumTrades
  nameWithType: StateMachine.NumTrades
  fullName: Model.Core.StateMachine.NumTrades
- uid: Model.Core.StateMachine.Winner*
  commentId: Overload:Model.Core.StateMachine.Winner
  href: Model.Core.StateMachine.html#Model_Core_StateMachine_Winner
  name: Winner
  nameWithType: StateMachine.Winner
  fullName: Model.Core.StateMachine.Winner
- uid: Model.Core.StateMachine.GetBinarySerials*
  commentId: Overload:Model.Core.StateMachine.GetBinarySerials
  href: Model.Core.StateMachine.html#Model_Core_StateMachine_GetBinarySerials
  name: GetBinarySerials
  nameWithType: StateMachine.GetBinarySerials
  fullName: Model.Core.StateMachine.GetBinarySerials
- uid: Shared.Interfaces.Model.IBinarySerializable.GetBinarySerials
  commentId: M:Shared.Interfaces.Model.IBinarySerializable.GetBinarySerials
  parent: Shared.Interfaces.Model.IBinarySerializable
  href: Shared.Interfaces.Model.IBinarySerializable.html#Shared_Interfaces_Model_IBinarySerializable_GetBinarySerials
  name: GetBinarySerials()
  nameWithType: IBinarySerializable.GetBinarySerials()
  fullName: Shared.Interfaces.Model.IBinarySerializable.GetBinarySerials()
  spec.csharp:
  - uid: Shared.Interfaces.Model.IBinarySerializable.GetBinarySerials
    name: GetBinarySerials
    href: Shared.Interfaces.Model.IBinarySerializable.html#Shared_Interfaces_Model_IBinarySerializable_GetBinarySerials
  - name: (
  - name: )
  spec.vb:
  - uid: Shared.Interfaces.Model.IBinarySerializable.GetBinarySerials
    name: GetBinarySerials
    href: Shared.Interfaces.Model.IBinarySerializable.html#Shared_Interfaces_Model_IBinarySerializable_GetBinarySerials
  - name: (
  - name: )
- uid: System.Threading.Tasks.Task{Shared.Services.Serializer.SerializedData[]}
  commentId: T:System.Threading.Tasks.Task{Shared.Services.Serializer.SerializedData[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<SerializedData[]>
  nameWithType: Task<SerializedData[]>
  fullName: System.Threading.Tasks.Task<Shared.Services.Serializer.SerializedData[]>
  nameWithType.vb: Task(Of SerializedData())
  fullName.vb: System.Threading.Tasks.Task(Of Shared.Services.Serializer.SerializedData())
  name.vb: Task(Of SerializedData())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Shared.Services.Serializer.SerializedData
    name: SerializedData
    href: Shared.Services.Serializer.SerializedData.html
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Shared.Services.Serializer.SerializedData
    name: SerializedData
    href: Shared.Services.Serializer.SerializedData.html
  - name: (
  - name: )
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: System.IO.BinaryReader.BaseStream
  commentId: P:System.IO.BinaryReader.BaseStream
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.binaryreader.basestream
  name: BaseStream
  nameWithType: BinaryReader.BaseStream
  fullName: System.IO.BinaryReader.BaseStream
- uid: Shared.Services.Serializer.BinarySerializer
  commentId: T:Shared.Services.Serializer.BinarySerializer
  href: Shared.Services.Serializer.BinarySerializer.html
  name: BinarySerializer
  nameWithType: BinarySerializer
  fullName: Shared.Services.Serializer.BinarySerializer
- uid: Model.Core.StateMachine.LoadFromBinary*
  commentId: Overload:Model.Core.StateMachine.LoadFromBinary
  href: Model.Core.StateMachine.html#Model_Core_StateMachine_LoadFromBinary_System_IO_BinaryReader_
  name: LoadFromBinary
  nameWithType: StateMachine.LoadFromBinary
  fullName: Model.Core.StateMachine.LoadFromBinary
- uid: Shared.Interfaces.Model.IBinarySerializable.LoadFromBinary(System.IO.BinaryReader)
  commentId: M:Shared.Interfaces.Model.IBinarySerializable.LoadFromBinary(System.IO.BinaryReader)
  parent: Shared.Interfaces.Model.IBinarySerializable
  isExternal: true
  href: Shared.Interfaces.Model.IBinarySerializable.html#Shared_Interfaces_Model_IBinarySerializable_LoadFromBinary_System_IO_BinaryReader_
  name: LoadFromBinary(BinaryReader)
  nameWithType: IBinarySerializable.LoadFromBinary(BinaryReader)
  fullName: Shared.Interfaces.Model.IBinarySerializable.LoadFromBinary(System.IO.BinaryReader)
  spec.csharp:
  - uid: Shared.Interfaces.Model.IBinarySerializable.LoadFromBinary(System.IO.BinaryReader)
    name: LoadFromBinary
    href: Shared.Interfaces.Model.IBinarySerializable.html#Shared_Interfaces_Model_IBinarySerializable_LoadFromBinary_System_IO_BinaryReader_
  - name: (
  - uid: System.IO.BinaryReader
    name: BinaryReader
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.binaryreader
  - name: )
  spec.vb:
  - uid: Shared.Interfaces.Model.IBinarySerializable.LoadFromBinary(System.IO.BinaryReader)
    name: LoadFromBinary
    href: Shared.Interfaces.Model.IBinarySerializable.html#Shared_Interfaces_Model_IBinarySerializable_LoadFromBinary_System_IO_BinaryReader_
  - name: (
  - uid: System.IO.BinaryReader
    name: BinaryReader
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.binaryreader
  - name: )
- uid: System.IO.BinaryReader
  commentId: T:System.IO.BinaryReader
  parent: System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.binaryreader
  name: BinaryReader
  nameWithType: BinaryReader
  fullName: System.IO.BinaryReader
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.invalidoperationexception
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: Model.Core.StateMachine.IncrementRound*
  commentId: Overload:Model.Core.StateMachine.IncrementRound
  href: Model.Core.StateMachine.html#Model_Core_StateMachine_IncrementRound
  name: IncrementRound
  nameWithType: StateMachine.IncrementRound
  fullName: Model.Core.StateMachine.IncrementRound
- uid: Model.Core.StateMachine.IncrementPlayerTurn*
  commentId: Overload:Model.Core.StateMachine.IncrementPlayerTurn
  href: Model.Core.StateMachine.html#Model_Core_StateMachine_IncrementPlayerTurn
  name: IncrementPlayerTurn
  nameWithType: StateMachine.IncrementPlayerTurn
  fullName: Model.Core.StateMachine.IncrementPlayerTurn
- uid: Model.Core.StateMachine.IncrementPhase*
  commentId: Overload:Model.Core.StateMachine.IncrementPhase
  href: Model.Core.StateMachine.html#Model_Core_StateMachine_IncrementPhase
  name: IncrementPhase
  nameWithType: StateMachine.IncrementPhase
  fullName: Model.Core.StateMachine.IncrementPhase
- uid: Model.Core.StateMachine.NumTrades
  commentId: P:Model.Core.StateMachine.NumTrades
  href: Model.Core.StateMachine.html#Model_Core_StateMachine_NumTrades
  name: NumTrades
  nameWithType: StateMachine.NumTrades
  fullName: Model.Core.StateMachine.NumTrades
- uid: Model.Core.StateMachine.IncrementNumTrades*
  commentId: Overload:Model.Core.StateMachine.IncrementNumTrades
  href: Model.Core.StateMachine.html#Model_Core_StateMachine_IncrementNumTrades_System_Int32_
  name: IncrementNumTrades
  nameWithType: StateMachine.IncrementNumTrades
  fullName: Model.Core.StateMachine.IncrementNumTrades
- uid: Model.Core.StateMachine.Round
  commentId: P:Model.Core.StateMachine.Round
  href: Model.Core.StateMachine.html#Model_Core_StateMachine_Round
  name: Round
  nameWithType: StateMachine.Round
  fullName: Model.Core.StateMachine.Round
- uid: Model.Core.StateMachine.NextActivePlayer
  commentId: M:Model.Core.StateMachine.NextActivePlayer
  name: NextActivePlayer()
  nameWithType: StateMachine.NextActivePlayer()
  fullName: Model.Core.StateMachine.NextActivePlayer()
  spec.csharp:
  - uid: Model.Core.StateMachine.NextActivePlayer
    name: NextActivePlayer
  - name: (
  - name: )
  spec.vb:
  - uid: Model.Core.StateMachine.NextActivePlayer
    name: NextActivePlayer
  - name: (
  - name: )
- uid: Model.Core.StateMachine.NextActivePlayer(System.Int32)
  commentId: M:Model.Core.StateMachine.NextActivePlayer(System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: NextActivePlayer(int)
  nameWithType: StateMachine.NextActivePlayer(int)
  fullName: Model.Core.StateMachine.NextActivePlayer(int)
  nameWithType.vb: StateMachine.NextActivePlayer(Integer)
  fullName.vb: Model.Core.StateMachine.NextActivePlayer(Integer)
  name.vb: NextActivePlayer(Integer)
  spec.csharp:
  - uid: Model.Core.StateMachine.NextActivePlayer(System.Int32)
    name: NextActivePlayer
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Model.Core.StateMachine.NextActivePlayer(System.Int32)
    name: NextActivePlayer
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Model.Core.StateMachine.IsActivePlayer
  commentId: P:Model.Core.StateMachine.IsActivePlayer
  href: Model.Core.StateMachine.html#Model_Core_StateMachine_IsActivePlayer
  name: IsActivePlayer
  nameWithType: StateMachine.IsActivePlayer
  fullName: Model.Core.StateMachine.IsActivePlayer
- uid: Model.Core.StateMachine.DisablePlayer*
  commentId: Overload:Model.Core.StateMachine.DisablePlayer
  href: Model.Core.StateMachine.html#Model_Core_StateMachine_DisablePlayer_System_Int32_
  name: DisablePlayer
  nameWithType: StateMachine.DisablePlayer
  fullName: Model.Core.StateMachine.DisablePlayer
- uid: Shared.Services.Serializer.BinarySerializer.ReadConvertible(System.IO.BinaryReader,System.Type)
  commentId: M:Shared.Services.Serializer.BinarySerializer.ReadConvertible(System.IO.BinaryReader,System.Type)
  isExternal: true
  href: Shared.Services.Serializer.BinarySerializer.html#Shared_Services_Serializer_BinarySerializer_ReadConvertible_System_IO_BinaryReader_System_Type_
  name: ReadConvertible(BinaryReader, Type)
  nameWithType: BinarySerializer.ReadConvertible(BinaryReader, Type)
  fullName: Shared.Services.Serializer.BinarySerializer.ReadConvertible(System.IO.BinaryReader, System.Type)
  spec.csharp:
  - uid: Shared.Services.Serializer.BinarySerializer.ReadConvertible(System.IO.BinaryReader,System.Type)
    name: ReadConvertible
    href: Shared.Services.Serializer.BinarySerializer.html#Shared_Services_Serializer_BinarySerializer_ReadConvertible_System_IO_BinaryReader_System_Type_
  - name: (
  - uid: System.IO.BinaryReader
    name: BinaryReader
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.binaryreader
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: Shared.Services.Serializer.BinarySerializer.ReadConvertible(System.IO.BinaryReader,System.Type)
    name: ReadConvertible
    href: Shared.Services.Serializer.BinarySerializer.html#Shared_Services_Serializer_BinarySerializer_ReadConvertible_System_IO_BinaryReader_System_Type_
  - name: (
  - uid: System.IO.BinaryReader
    name: BinaryReader
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.binaryreader
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: Model.Core.StateMachine.InitializePlayerStatusArray*
  commentId: Overload:Model.Core.StateMachine.InitializePlayerStatusArray
  href: Model.Core.StateMachine.html#Model_Core_StateMachine_InitializePlayerStatusArray_System_Byte_
  name: InitializePlayerStatusArray
  nameWithType: StateMachine.InitializePlayerStatusArray
  fullName: Model.Core.StateMachine.InitializePlayerStatusArray
