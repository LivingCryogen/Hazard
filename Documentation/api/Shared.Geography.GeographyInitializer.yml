### YamlMime:ManagedReference
items:
- uid: Shared.Geography.GeographyInitializer
  commentId: T:Shared.Geography.GeographyInitializer
  id: GeographyInitializer
  parent: Shared.Geography
  children:
  - Shared.Geography.GeographyInitializer.AddContinentMember(System.String,System.String)
  - Shared.Geography.GeographyInitializer.AddTerritoryNeighbor(System.String,System.String)
  - Shared.Geography.GeographyInitializer.ContinentEnumType
  - Shared.Geography.GeographyInitializer.ContinentMembers
  - Shared.Geography.GeographyInitializer.ContinentNames
  - Shared.Geography.GeographyInitializer.SetEnumTypes(System.ValueTuple{System.String,System.String})
  - Shared.Geography.GeographyInitializer.TerritoryEnumType
  - Shared.Geography.GeographyInitializer.TerritoryNames
  - Shared.Geography.GeographyInitializer.TerritoryNeighbors
  langs:
  - csharp
  - vb
  name: GeographyInitializer
  nameWithType: GeographyInitializer
  fullName: Shared.Geography.GeographyInitializer
  type: Class
  source:
    remote:
      path: Shared/Geography/GeographyInitializer.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: GeographyInitializer
    path: ../Shared/Geography/GeographyInitializer.cs
    startLine: 10
  assemblies:
  - Model
  namespace: Shared.Geography
  summary: Initializes <xref href="Shared.Geography.BoardGeography" data-throw-if-not-resolved="false"></xref> with data provided by the DAL.
  remarks: >-
    This is the target <xref href="Shared.Services.Registry.RegistryRelation.ConvertedDataType?text=converted+data+type" data-throw-if-not-resolved="false"></xref> for <xref href="Shared.Geography.BoardGeography" data-throw-if-not-resolved="false"></xref> within <xref href="Shared.Services.Registry.TypeRegister" data-throw-if-not-resolved="false"></xref>. <br />

    See <xref href="Shared.Interfaces.Model.IAssetFetcher.FetchGeography" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public class GeographyInitializer
    content.vb: Public Class GeographyInitializer
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Shared.Geography.GeographyInitializer.ContinentEnumType
  commentId: P:Shared.Geography.GeographyInitializer.ContinentEnumType
  id: ContinentEnumType
  parent: Shared.Geography.GeographyInitializer
  langs:
  - csharp
  - vb
  name: ContinentEnumType
  nameWithType: GeographyInitializer.ContinentEnumType
  fullName: Shared.Geography.GeographyInitializer.ContinentEnumType
  type: Property
  source:
    remote:
      path: Shared/Geography/GeographyInitializer.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: ContinentEnumType
    path: ../Shared/Geography/GeographyInitializer.cs
    startLine: 15
  assemblies:
  - Model
  namespace: Shared.Geography
  summary: Gets or sets the Type variable read from the data file corresponding to <xref href="Shared.Geography.Enums.ContID" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public Type? ContinentEnumType { get; set; }
    parameters: []
    return:
      type: System.Type
    content.vb: Public Property ContinentEnumType As Type
  overload: Shared.Geography.GeographyInitializer.ContinentEnumType*
- uid: Shared.Geography.GeographyInitializer.TerritoryEnumType
  commentId: P:Shared.Geography.GeographyInitializer.TerritoryEnumType
  id: TerritoryEnumType
  parent: Shared.Geography.GeographyInitializer
  langs:
  - csharp
  - vb
  name: TerritoryEnumType
  nameWithType: GeographyInitializer.TerritoryEnumType
  fullName: Shared.Geography.GeographyInitializer.TerritoryEnumType
  type: Property
  source:
    remote:
      path: Shared/Geography/GeographyInitializer.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: TerritoryEnumType
    path: ../Shared/Geography/GeographyInitializer.cs
    startLine: 19
  assemblies:
  - Model
  namespace: Shared.Geography
  summary: Gets or sets the Type variable read from the data file corresponding to <xref href="Shared.Geography.Enums.TerrID" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public Type? TerritoryEnumType { get; set; }
    parameters: []
    return:
      type: System.Type
    content.vb: Public Property TerritoryEnumType As Type
  overload: Shared.Geography.GeographyInitializer.TerritoryEnumType*
- uid: Shared.Geography.GeographyInitializer.ContinentNames
  commentId: P:Shared.Geography.GeographyInitializer.ContinentNames
  id: ContinentNames
  parent: Shared.Geography.GeographyInitializer
  langs:
  - csharp
  - vb
  name: ContinentNames
  nameWithType: GeographyInitializer.ContinentNames
  fullName: Shared.Geography.GeographyInitializer.ContinentNames
  type: Property
  source:
    remote:
      path: Shared/Geography/GeographyInitializer.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: ContinentNames
    path: ../Shared/Geography/GeographyInitializer.cs
    startLine: 23
  assemblies:
  - Model
  namespace: Shared.Geography
  summary: Gets the names of the continents as given by the values of <xref href="Shared.Geography.GeographyInitializer.ContinentEnumType" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public string[] ContinentNames { get; }
    parameters: []
    return:
      type: System.String[]
    content.vb: Public Property ContinentNames As String()
  overload: Shared.Geography.GeographyInitializer.ContinentNames*
- uid: Shared.Geography.GeographyInitializer.TerritoryNames
  commentId: P:Shared.Geography.GeographyInitializer.TerritoryNames
  id: TerritoryNames
  parent: Shared.Geography.GeographyInitializer
  langs:
  - csharp
  - vb
  name: TerritoryNames
  nameWithType: GeographyInitializer.TerritoryNames
  fullName: Shared.Geography.GeographyInitializer.TerritoryNames
  type: Property
  source:
    remote:
      path: Shared/Geography/GeographyInitializer.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: TerritoryNames
    path: ../Shared/Geography/GeographyInitializer.cs
    startLine: 27
  assemblies:
  - Model
  namespace: Shared.Geography
  summary: Gets the names of the territories as given by the values of <xref href="Shared.Geography.GeographyInitializer.TerritoryEnumType" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public string[] TerritoryNames { get; }
    parameters: []
    return:
      type: System.String[]
    content.vb: Public Property TerritoryNames As String()
  overload: Shared.Geography.GeographyInitializer.TerritoryNames*
- uid: Shared.Geography.GeographyInitializer.ContinentMembers
  commentId: P:Shared.Geography.GeographyInitializer.ContinentMembers
  id: ContinentMembers
  parent: Shared.Geography.GeographyInitializer
  langs:
  - csharp
  - vb
  name: ContinentMembers
  nameWithType: GeographyInitializer.ContinentMembers
  fullName: Shared.Geography.GeographyInitializer.ContinentMembers
  type: Property
  source:
    remote:
      path: Shared/Geography/GeographyInitializer.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: ContinentMembers
    path: ../Shared/Geography/GeographyInitializer.cs
    startLine: 31
  assemblies:
  - Model
  namespace: Shared.Geography
  summary: Maps continents to their members territories.
  example: []
  syntax:
    content: public Dictionary<Enum, HashSet<Enum>> ContinentMembers { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.Enum,System.Collections.Generic.HashSet{System.Enum}}
    content.vb: Public ReadOnly Property ContinentMembers As Dictionary(Of [Enum], HashSet(Of [Enum]))
  overload: Shared.Geography.GeographyInitializer.ContinentMembers*
- uid: Shared.Geography.GeographyInitializer.TerritoryNeighbors
  commentId: P:Shared.Geography.GeographyInitializer.TerritoryNeighbors
  id: TerritoryNeighbors
  parent: Shared.Geography.GeographyInitializer
  langs:
  - csharp
  - vb
  name: TerritoryNeighbors
  nameWithType: GeographyInitializer.TerritoryNeighbors
  fullName: Shared.Geography.GeographyInitializer.TerritoryNeighbors
  type: Property
  source:
    remote:
      path: Shared/Geography/GeographyInitializer.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: TerritoryNeighbors
    path: ../Shared/Geography/GeographyInitializer.cs
    startLine: 35
  assemblies:
  - Model
  namespace: Shared.Geography
  summary: Maps territories to their neighbors.
  example: []
  syntax:
    content: public Dictionary<Enum, HashSet<Enum>> TerritoryNeighbors { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.Enum,System.Collections.Generic.HashSet{System.Enum}}
    content.vb: Public ReadOnly Property TerritoryNeighbors As Dictionary(Of [Enum], HashSet(Of [Enum]))
  overload: Shared.Geography.GeographyInitializer.TerritoryNeighbors*
- uid: Shared.Geography.GeographyInitializer.SetEnumTypes(System.ValueTuple{System.String,System.String})
  commentId: M:Shared.Geography.GeographyInitializer.SetEnumTypes(System.ValueTuple{System.String,System.String})
  id: SetEnumTypes(System.ValueTuple{System.String,System.String})
  parent: Shared.Geography.GeographyInitializer
  langs:
  - csharp
  - vb
  name: SetEnumTypes((string ContinentEnumName, string TerritoryEnumName))
  nameWithType: GeographyInitializer.SetEnumTypes((string ContinentEnumName, string TerritoryEnumName))
  fullName: Shared.Geography.GeographyInitializer.SetEnumTypes((string ContinentEnumName, string TerritoryEnumName))
  type: Method
  source:
    remote:
      path: Shared/Geography/GeographyInitializer.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: SetEnumTypes
    path: ../Shared/Geography/GeographyInitializer.cs
    startLine: 41
  assemblies:
  - Model
  namespace: Shared.Geography
  summary: Prepares this <xref href="Shared.Geography.GeographyInitializer" data-throw-if-not-resolved="false"></xref> for mapping by getting the Enums corresponding to <code class="paramref">names</code>.
  example: []
  syntax:
    content: public void SetEnumTypes((string ContinentEnumName, string TerritoryEnumName) names)
    parameters:
    - id: names
      type: System.ValueTuple{System.String,System.String}
      description: The names of the Enums that should contain the continents and territories within the board geography.
    content.vb: Public Sub SetEnumTypes(names As (ContinentEnumName As String, TerritoryEnumName As String))
  overload: Shared.Geography.GeographyInitializer.SetEnumTypes*
  exceptions:
  - type: System.IO.InvalidDataException
    commentId: T:System.IO.InvalidDataException
    description: Thrown when Enum types could not be generated from <code class="paramref">names</code>.
  nameWithType.vb: GeographyInitializer.SetEnumTypes((ContinentEnumName As String, TerritoryEnumName As String))
  fullName.vb: Shared.Geography.GeographyInitializer.SetEnumTypes((ContinentEnumName As String, TerritoryEnumName As String))
  name.vb: SetEnumTypes((ContinentEnumName As String, TerritoryEnumName As String))
- uid: Shared.Geography.GeographyInitializer.AddContinentMember(System.String,System.String)
  commentId: M:Shared.Geography.GeographyInitializer.AddContinentMember(System.String,System.String)
  id: AddContinentMember(System.String,System.String)
  parent: Shared.Geography.GeographyInitializer
  langs:
  - csharp
  - vb
  name: AddContinentMember(string, string)
  nameWithType: GeographyInitializer.AddContinentMember(string, string)
  fullName: Shared.Geography.GeographyInitializer.AddContinentMember(string, string)
  type: Method
  source:
    remote:
      path: Shared/Geography/GeographyInitializer.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: AddContinentMember
    path: ../Shared/Geography/GeographyInitializer.cs
    startLine: 59
  assemblies:
  - Model
  namespace: Shared.Geography
  summary: Maps a territory to a continent as its member within <xref href="Shared.Geography.GeographyInitializer.ContinentMembers" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public bool AddContinentMember(string continentName, string territoryName)
    parameters:
    - id: continentName
      type: System.String
      description: The name of the parent continent.
    - id: territoryName
      type: System.String
      description: The name of the member territory.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the mapping was successful; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Function AddContinentMember(continentName As String, territoryName As String) As Boolean
  overload: Shared.Geography.GeographyInitializer.AddContinentMember*
  nameWithType.vb: GeographyInitializer.AddContinentMember(String, String)
  fullName.vb: Shared.Geography.GeographyInitializer.AddContinentMember(String, String)
  name.vb: AddContinentMember(String, String)
- uid: Shared.Geography.GeographyInitializer.AddTerritoryNeighbor(System.String,System.String)
  commentId: M:Shared.Geography.GeographyInitializer.AddTerritoryNeighbor(System.String,System.String)
  id: AddTerritoryNeighbor(System.String,System.String)
  parent: Shared.Geography.GeographyInitializer
  langs:
  - csharp
  - vb
  name: AddTerritoryNeighbor(string, string)
  nameWithType: GeographyInitializer.AddTerritoryNeighbor(string, string)
  fullName: Shared.Geography.GeographyInitializer.AddTerritoryNeighbor(string, string)
  type: Method
  source:
    remote:
      path: Shared/Geography/GeographyInitializer.cs
      branch: main
      repo: https://github.com/LivingCryogen/Hazard.git
    id: AddTerritoryNeighbor
    path: ../Shared/Geography/GeographyInitializer.cs
    startLine: 83
  assemblies:
  - Model
  namespace: Shared.Geography
  summary: Maps a territory as a neighbor to another within <xref href="Shared.Geography.GeographyInitializer.TerritoryNeighbors" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public bool AddTerritoryNeighbor(string territoryName, string neighborName)
    parameters:
    - id: territoryName
      type: System.String
      description: The name of the territory whose neighbor list should now include <code class="paramref">neighborName</code>.
    - id: neighborName
      type: System.String
      description: The name of the territory to be mapped as a neighbor to <code class="paramref">territoryName</code>.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the mapping was successful; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Function AddTerritoryNeighbor(territoryName As String, neighborName As String) As Boolean
  overload: Shared.Geography.GeographyInitializer.AddTerritoryNeighbor*
  nameWithType.vb: GeographyInitializer.AddTerritoryNeighbor(String, String)
  fullName.vb: Shared.Geography.GeographyInitializer.AddTerritoryNeighbor(String, String)
  name.vb: AddTerritoryNeighbor(String, String)
references:
- uid: Shared.Geography.BoardGeography
  commentId: T:Shared.Geography.BoardGeography
  href: Shared.Geography.BoardGeography.html
  name: BoardGeography
  nameWithType: BoardGeography
  fullName: Shared.Geography.BoardGeography
- uid: Shared.Services.Registry.RegistryRelation.ConvertedDataType
  commentId: F:Shared.Services.Registry.RegistryRelation.ConvertedDataType
  href: Shared.Services.Registry.RegistryRelation.html#Shared_Services_Registry_RegistryRelation_ConvertedDataType
  name: ConvertedDataType
  nameWithType: RegistryRelation.ConvertedDataType
  fullName: Shared.Services.Registry.RegistryRelation.ConvertedDataType
- uid: Shared.Services.Registry.TypeRegister
  commentId: T:Shared.Services.Registry.TypeRegister
  href: Shared.Services.Registry.TypeRegister.html
  name: TypeRegister
  nameWithType: TypeRegister
  fullName: Shared.Services.Registry.TypeRegister
- uid: Shared.Interfaces.Model.IAssetFetcher.FetchGeography
  commentId: M:Shared.Interfaces.Model.IAssetFetcher.FetchGeography
  parent: Shared.Interfaces.Model.IAssetFetcher
  href: Shared.Interfaces.Model.IAssetFetcher.html#Shared_Interfaces_Model_IAssetFetcher_FetchGeography
  name: FetchGeography()
  nameWithType: IAssetFetcher.FetchGeography()
  fullName: Shared.Interfaces.Model.IAssetFetcher.FetchGeography()
  spec.csharp:
  - uid: Shared.Interfaces.Model.IAssetFetcher.FetchGeography
    name: FetchGeography
    href: Shared.Interfaces.Model.IAssetFetcher.html#Shared_Interfaces_Model_IAssetFetcher_FetchGeography
  - name: (
  - name: )
  spec.vb:
  - uid: Shared.Interfaces.Model.IAssetFetcher.FetchGeography
    name: FetchGeography
    href: Shared.Interfaces.Model.IAssetFetcher.html#Shared_Interfaces_Model_IAssetFetcher_FetchGeography
  - name: (
  - name: )
- uid: Shared.Geography
  commentId: N:Shared.Geography
  href: Shared.html
  name: Shared.Geography
  nameWithType: Shared.Geography
  fullName: Shared.Geography
  spec.csharp:
  - uid: Shared
    name: Shared
    href: Shared.html
  - name: .
  - uid: Shared.Geography
    name: Geography
    href: Shared.Geography.html
  spec.vb:
  - uid: Shared
    name: Shared
    href: Shared.html
  - name: .
  - uid: Shared.Geography
    name: Geography
    href: Shared.Geography.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Shared.Interfaces.Model.IAssetFetcher
  commentId: T:Shared.Interfaces.Model.IAssetFetcher
  parent: Shared.Interfaces.Model
  href: Shared.Interfaces.Model.IAssetFetcher.html
  name: IAssetFetcher
  nameWithType: IAssetFetcher
  fullName: Shared.Interfaces.Model.IAssetFetcher
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Shared.Interfaces.Model
  commentId: N:Shared.Interfaces.Model
  href: Shared.html
  name: Shared.Interfaces.Model
  nameWithType: Shared.Interfaces.Model
  fullName: Shared.Interfaces.Model
  spec.csharp:
  - uid: Shared
    name: Shared
    href: Shared.html
  - name: .
  - uid: Shared.Interfaces
    name: Interfaces
    href: Shared.Interfaces.html
  - name: .
  - uid: Shared.Interfaces.Model
    name: Model
    href: Shared.Interfaces.Model.html
  spec.vb:
  - uid: Shared
    name: Shared
    href: Shared.html
  - name: .
  - uid: Shared.Interfaces
    name: Interfaces
    href: Shared.Interfaces.html
  - name: .
  - uid: Shared.Interfaces.Model
    name: Model
    href: Shared.Interfaces.Model.html
- uid: Shared.Geography.Enums.ContID
  commentId: T:Shared.Geography.Enums.ContID
  parent: Shared.Geography.Enums
  href: Shared.Geography.Enums.ContID.html
  name: ContID
  nameWithType: ContID
  fullName: Shared.Geography.Enums.ContID
- uid: Shared.Geography.GeographyInitializer.ContinentEnumType*
  commentId: Overload:Shared.Geography.GeographyInitializer.ContinentEnumType
  href: Shared.Geography.GeographyInitializer.html#Shared_Geography_GeographyInitializer_ContinentEnumType
  name: ContinentEnumType
  nameWithType: GeographyInitializer.ContinentEnumType
  fullName: Shared.Geography.GeographyInitializer.ContinentEnumType
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Shared.Geography.Enums
  commentId: N:Shared.Geography.Enums
  href: Shared.html
  name: Shared.Geography.Enums
  nameWithType: Shared.Geography.Enums
  fullName: Shared.Geography.Enums
  spec.csharp:
  - uid: Shared
    name: Shared
    href: Shared.html
  - name: .
  - uid: Shared.Geography
    name: Geography
    href: Shared.Geography.html
  - name: .
  - uid: Shared.Geography.Enums
    name: Enums
    href: Shared.Geography.Enums.html
  spec.vb:
  - uid: Shared
    name: Shared
    href: Shared.html
  - name: .
  - uid: Shared.Geography
    name: Geography
    href: Shared.Geography.html
  - name: .
  - uid: Shared.Geography.Enums
    name: Enums
    href: Shared.Geography.Enums.html
- uid: Shared.Geography.Enums.TerrID
  commentId: T:Shared.Geography.Enums.TerrID
  parent: Shared.Geography.Enums
  href: Shared.Geography.Enums.TerrID.html
  name: TerrID
  nameWithType: TerrID
  fullName: Shared.Geography.Enums.TerrID
- uid: Shared.Geography.GeographyInitializer.TerritoryEnumType*
  commentId: Overload:Shared.Geography.GeographyInitializer.TerritoryEnumType
  href: Shared.Geography.GeographyInitializer.html#Shared_Geography_GeographyInitializer_TerritoryEnumType
  name: TerritoryEnumType
  nameWithType: GeographyInitializer.TerritoryEnumType
  fullName: Shared.Geography.GeographyInitializer.TerritoryEnumType
- uid: Shared.Geography.GeographyInitializer.ContinentEnumType
  commentId: P:Shared.Geography.GeographyInitializer.ContinentEnumType
  href: Shared.Geography.GeographyInitializer.html#Shared_Geography_GeographyInitializer_ContinentEnumType
  name: ContinentEnumType
  nameWithType: GeographyInitializer.ContinentEnumType
  fullName: Shared.Geography.GeographyInitializer.ContinentEnumType
- uid: Shared.Geography.GeographyInitializer.ContinentNames*
  commentId: Overload:Shared.Geography.GeographyInitializer.ContinentNames
  href: Shared.Geography.GeographyInitializer.html#Shared_Geography_GeographyInitializer_ContinentNames
  name: ContinentNames
  nameWithType: GeographyInitializer.ContinentNames
  fullName: Shared.Geography.GeographyInitializer.ContinentNames
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: Shared.Geography.GeographyInitializer.TerritoryEnumType
  commentId: P:Shared.Geography.GeographyInitializer.TerritoryEnumType
  href: Shared.Geography.GeographyInitializer.html#Shared_Geography_GeographyInitializer_TerritoryEnumType
  name: TerritoryEnumType
  nameWithType: GeographyInitializer.TerritoryEnumType
  fullName: Shared.Geography.GeographyInitializer.TerritoryEnumType
- uid: Shared.Geography.GeographyInitializer.TerritoryNames*
  commentId: Overload:Shared.Geography.GeographyInitializer.TerritoryNames
  href: Shared.Geography.GeographyInitializer.html#Shared_Geography_GeographyInitializer_TerritoryNames
  name: TerritoryNames
  nameWithType: GeographyInitializer.TerritoryNames
  fullName: Shared.Geography.GeographyInitializer.TerritoryNames
- uid: Shared.Geography.GeographyInitializer.ContinentMembers*
  commentId: Overload:Shared.Geography.GeographyInitializer.ContinentMembers
  href: Shared.Geography.GeographyInitializer.html#Shared_Geography_GeographyInitializer_ContinentMembers
  name: ContinentMembers
  nameWithType: GeographyInitializer.ContinentMembers
  fullName: Shared.Geography.GeographyInitializer.ContinentMembers
- uid: System.Collections.Generic.Dictionary{System.Enum,System.Collections.Generic.HashSet{System.Enum}}
  commentId: T:System.Collections.Generic.Dictionary{System.Enum,System.Collections.Generic.HashSet{System.Enum}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<Enum, HashSet<Enum>>
  nameWithType: Dictionary<Enum, HashSet<Enum>>
  fullName: System.Collections.Generic.Dictionary<System.Enum, System.Collections.Generic.HashSet<System.Enum>>
  nameWithType.vb: Dictionary(Of Enum, HashSet(Of Enum))
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Enum, System.Collections.Generic.HashSet(Of System.Enum))
  name.vb: Dictionary(Of Enum, HashSet(Of Enum))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.Enum
    name: Enum
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.enum
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - uid: System.Enum
    name: Enum
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.enum
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Enum
    name: Enum
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.enum
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Enum
    name: Enum
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.enum
  - name: )
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Shared.Geography.GeographyInitializer.TerritoryNeighbors*
  commentId: Overload:Shared.Geography.GeographyInitializer.TerritoryNeighbors
  href: Shared.Geography.GeographyInitializer.html#Shared_Geography_GeographyInitializer_TerritoryNeighbors
  name: TerritoryNeighbors
  nameWithType: GeographyInitializer.TerritoryNeighbors
  fullName: Shared.Geography.GeographyInitializer.TerritoryNeighbors
- uid: Shared.Geography.GeographyInitializer
  commentId: T:Shared.Geography.GeographyInitializer
  parent: Shared.Geography
  href: Shared.Geography.GeographyInitializer.html
  name: GeographyInitializer
  nameWithType: GeographyInitializer
  fullName: Shared.Geography.GeographyInitializer
- uid: System.IO.InvalidDataException
  commentId: T:System.IO.InvalidDataException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.invaliddataexception
  name: InvalidDataException
  nameWithType: InvalidDataException
  fullName: System.IO.InvalidDataException
- uid: Shared.Geography.GeographyInitializer.SetEnumTypes*
  commentId: Overload:Shared.Geography.GeographyInitializer.SetEnumTypes
  href: Shared.Geography.GeographyInitializer.html#Shared_Geography_GeographyInitializer_SetEnumTypes_System_ValueTuple_System_String_System_String__
  name: SetEnumTypes
  nameWithType: GeographyInitializer.SetEnumTypes
  fullName: Shared.Geography.GeographyInitializer.SetEnumTypes
- uid: System.ValueTuple{System.String,System.String}
  commentId: T:System.ValueTuple{System.String,System.String}
  parent: System
  definition: System.ValueTuple`2
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: (string ContinentEnumName, string TerritoryEnumName)
  nameWithType: (string ContinentEnumName, string TerritoryEnumName)
  fullName: (string ContinentEnumName, string TerritoryEnumName)
  nameWithType.vb: (ContinentEnumName As String, TerritoryEnumName As String)
  fullName.vb: (ContinentEnumName As String, TerritoryEnumName As String)
  name.vb: (ContinentEnumName As String, TerritoryEnumName As String)
  spec.csharp:
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: " "
  - uid: System.ValueTuple{System.String,System.String}.ContinentEnumName
    name: ContinentEnumName
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,system.string-.continentenumname
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: " "
  - uid: System.ValueTuple{System.String,System.String}.TerritoryEnumName
    name: TerritoryEnumName
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,system.string-.territoryenumname
  - name: )
  spec.vb:
  - name: (
  - uid: System.ValueTuple{System.String,System.String}.ContinentEnumName
    name: ContinentEnumName
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,system.string-.continentenumname
  - name: " "
  - name: As
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.String,System.String}.TerritoryEnumName
    name: TerritoryEnumName
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,system.string-.territoryenumname
  - name: " "
  - name: As
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.ValueTuple`2
  commentId: T:System.ValueTuple`2
  name: (T1, T2)
  nameWithType: (T1, T2)
  fullName: (T1, T2)
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: Shared.Geography.GeographyInitializer.ContinentMembers
  commentId: P:Shared.Geography.GeographyInitializer.ContinentMembers
  href: Shared.Geography.GeographyInitializer.html#Shared_Geography_GeographyInitializer_ContinentMembers
  name: ContinentMembers
  nameWithType: GeographyInitializer.ContinentMembers
  fullName: Shared.Geography.GeographyInitializer.ContinentMembers
- uid: Shared.Geography.GeographyInitializer.AddContinentMember*
  commentId: Overload:Shared.Geography.GeographyInitializer.AddContinentMember
  href: Shared.Geography.GeographyInitializer.html#Shared_Geography_GeographyInitializer_AddContinentMember_System_String_System_String_
  name: AddContinentMember
  nameWithType: GeographyInitializer.AddContinentMember
  fullName: Shared.Geography.GeographyInitializer.AddContinentMember
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Shared.Geography.GeographyInitializer.TerritoryNeighbors
  commentId: P:Shared.Geography.GeographyInitializer.TerritoryNeighbors
  href: Shared.Geography.GeographyInitializer.html#Shared_Geography_GeographyInitializer_TerritoryNeighbors
  name: TerritoryNeighbors
  nameWithType: GeographyInitializer.TerritoryNeighbors
  fullName: Shared.Geography.GeographyInitializer.TerritoryNeighbors
- uid: Shared.Geography.GeographyInitializer.AddTerritoryNeighbor*
  commentId: Overload:Shared.Geography.GeographyInitializer.AddTerritoryNeighbor
  href: Shared.Geography.GeographyInitializer.html#Shared_Geography_GeographyInitializer_AddTerritoryNeighbor_System_String_System_String_
  name: AddTerritoryNeighbor
  nameWithType: GeographyInitializer.AddTerritoryNeighbor
  fullName: Shared.Geography.GeographyInitializer.AddTerritoryNeighbor
